define(["../Core/Cartesian2","../Core/Color","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/PixelFormat","../Renderer/ClearCommand","../Renderer/Framebuffer","../Renderer/PixelDatatype","../Renderer/Sampler","../Renderer/Texture","../Renderer/TextureMagnificationFilter","../Renderer/TextureMinificationFilter","../Renderer/TextureWrap"],function(e,r,t,n,i,o,a,u,f,s,m,c,l,h,x){"use strict";function d(){this._uniformMap=void 0,this._command=void 0,this._colorTexture=void 0,this._depthTexture=void 0,this._ready=!1,this._name="czm_autoexposure",this._logDepthChanged=void 0,this._useLogDepth=void 0,this._framebuffers=void 0,this._previousLuminance=void 0,this._commands=void 0,this._clearCommand=void 0,this._minMaxLuminance=new e,this.enabled=!0,this._enabled=!0,this.minimumLuminance=.1,this.maximumLuminance=10}function _(e){var r=e._framebuffers;if(n(r)){for(var t=r.length,i=0;i<t;++i)r[i].destroy();e._framebuffers=void 0,e._previousLuminance.destroy(),e._previousLuminance=void 0}}function p(e){var r=e._commands;if(n(r)){for(var t=r.length,i=0;i<t;++i)r[i].shaderProgram.destroy();e._commands=void 0}}function v(e,r){var t;if(0===r)t={colorTexture:function(){return e._colorTexture},colorTextureDimensions:function(){return e._colorTexture.dimensions}};else{var n=e._framebuffers[r-1].getColorTexture(0);t={colorTexture:function(){return n},colorTextureDimensions:function(){return n.dimensions}}}return t.minMaxLuminance=function(){return e._minMaxLuminance},t.previousLuminance=function(){return e._previousLuminance.getColorTexture(0)},t}function g(e,r){var t="uniform sampler2D colorTexture; \nvarying vec2 v_textureCoordinates; \nfloat sampleTexture(vec2 offset) { \n";return t+=0===e?"    vec4 color = texture2D(colorTexture, v_textureCoordinates + offset); \n    return czm_luminance(color.rgb); \n":"    return texture2D(colorTexture, v_textureCoordinates + offset).r; \n",t+="}\n\n",t+="uniform vec2 colorTextureDimensions; \nuniform vec2 minMaxLuminance; \nuniform sampler2D previousLuminance; \nvoid main() { \n    float color = 0.0; \n    float xStep = 1.0 / colorTextureDimensions.x; \n    float yStep = 1.0 / colorTextureDimensions.y; \n    int count = 0; \n    for (int i = 0; i < 3; ++i) { \n        for (int j = 0; j < 3; ++j) { \n            vec2 offset; \n            offset.x = -xStep + float(i) * xStep; \n            offset.y = -yStep + float(j) * yStep; \n            if (offset.x < 0.0 || offset.x > 1.0 || offset.y < 0.0 || offset.y > 1.0) { \n                continue; \n            } \n            color += sampleTexture(offset); \n            ++count; \n        } \n    } \n    if (count > 0) { \n        color /= float(count); \n    } \n",e===r-1&&(t+="    float previous = texture2D(previousLuminance, vec2(0.5)).r; \n    color = clamp(color, minMaxLuminance.x, minMaxLuminance.y); \n    color = previous + (color - previous) / (60.0 * 1.5); \n    color = clamp(color, minMaxLuminance.x, minMaxLuminance.y); \n"),t+="    gl_FragColor = vec4(color); \n} \n"}return i(d.prototype,{ready:{get:function(){return this._ready}},name:{get:function(){return this._name}},outputTexture:{get:function(){var e=this._framebuffers;if(n(e))return e[e.length-1].getColorTexture(0)}}}),d.prototype.clear=function(e){var t=this._framebuffers;if(n(t)){var i=this._clearCommand;n(i)||(i=this._clearCommand=new u({color:new r(0,0,0,0),framebuffer:void 0}));for(var o=t.length,a=0;a<o;++a)i.framebuffer=t[a],i.execute(e)}},d.prototype.update=function(e){var r=e.drawingBufferWidth,t=e.drawingBufferHeight;r===this._width&&t===this._height||(this._width=r,this._height=t,function(e,r){_(e);for(var t=e._width,n=e._height,i=a.RGBA,o=r.halfFloatingPointTexture?s.HALF_FLOAT:s.FLOAT,u=new m({wrapS:x.CLAMP_TO_EDGE,wrapT:x.CLAMP_TO_EDGE,minificationFilter:h.NEAREST,magnificationFilter:l.NEAREST}),d=Math.ceil(Math.log(Math.max(t,n))/Math.log(3)),p=new Array(d),v=0;v<d;++v)t=Math.max(Math.ceil(t/3),1),n=Math.max(Math.ceil(n/3),1),p[v]=new f({context:r,colorTextures:[new c({context:r,width:t,height:n,pixelFormat:i,pixelDatatype:o,sampler:u})]});var g=p[d-1].getColorTexture(0);e._previousLuminance=new f({context:r,colorTextures:[new c({context:r,width:g.width,height:g.height,pixelFormat:i,pixelDatatype:o,sampler:u})]}),e._framebuffers=p}(this,e),function(e,r){p(e);for(var t=e._framebuffers,n=t.length,i=new Array(n),o=0;o<n;++o)i[o]=r.createViewportQuadCommand(g(o,n),{framebuffer:t[o],uniformMap:v(e,o)});e._commands=i}(this,e),this._ready||(this._ready=!0)),this._minMaxLuminance.x=this.minimumLuminance,this._minMaxLuminance.y=this.maximumLuminance;var n=this._framebuffers,i=n[n.length-1];n[n.length-1]=this._previousLuminance,this._commands[this._commands.length-1].framebuffer=this._previousLuminance,this._previousLuminance=i},d.prototype.execute=function(e,r){this._colorTexture=r;var t=this._commands;if(n(t))for(var i=t.length,o=0;o<i;++o)t[o].execute(e)},d.prototype.isDestroyed=function(){return!1},d.prototype.destroy=function(){return _(this),p(this),o(this)},d});