define(["../Core/defined","../Core/defineProperties","../Core/destroyObject","./ShaderProgram","./ShaderSource"],function(e,r,t,a,o){"use strict";function d(e){this._context=e,this._shaders={},this._numberOfShaders=0,this._shadersToRelease={}}function s(e,r){for(var t=r.derivedKeywords,a=t.length,o=0;o<a;++o){var d=t[o]+r.keyword;s(e,e._shaders[d])}delete e._shaders[r.keyword],r.shaderProgram.finalDestroy()}return r(d.prototype,{numberOfShaders:{get:function(){return this._numberOfShaders}}}),d.prototype.replaceShaderProgram=function(r){return e(r.shaderProgram)&&r.shaderProgram.destroy(),this.getShaderProgram(r)},d.prototype.getShaderProgram=function(r){var t=r.vertexShaderSource,d=r.fragmentShaderSource,s=r.attributeLocations;"string"==typeof t&&(t=new o({sources:[t]})),"string"==typeof d&&(d=new o({sources:[d]}));var h,i=t.createCombinedVertexShader(this._context),n=d.createCombinedFragmentShader(this._context),c=i+n+JSON.stringify(s);if(e(this._shaders[c]))h=this._shaders[c],delete this._shadersToRelease[c];else{var S=this._context,u=new a({gl:S._gl,logShaderCompilation:S.logShaderCompilation,debugShaders:S.debugShaders,vertexShaderSource:t,vertexShaderText:i,fragmentShaderSource:d,fragmentShaderText:n,attributeLocations:s});h={cache:this,shaderProgram:u,keyword:c,derivedKeywords:[],count:0},u._cachedShader=h,this._shaders[c]=h,++this._numberOfShaders}return++h.count,h.shaderProgram},d.prototype.replaceDerivedShaderProgram=function(r,t,a){var o=r._cachedShader,d=t+o.keyword,h=this._shaders[d];if(e(h)){s(this,h);var i=o.derivedKeywords.indexOf(t);i>-1&&o.derivedKeywords.splice(i,1)}return this.createDerivedShaderProgram(r,t,a)},d.prototype.getDerivedShaderProgram=function(r,t){var a=t+r._cachedShader.keyword,o=this._shaders[a];if(e(o))return o.shaderProgram},d.prototype.createDerivedShaderProgram=function(e,r,t){var d=e._cachedShader,s=r+d.keyword,h=t.vertexShaderSource,i=t.fragmentShaderSource,n=t.attributeLocations;"string"==typeof h&&(h=new o({sources:[h]})),"string"==typeof i&&(i=new o({sources:[i]}));var c=this._context,S=h.createCombinedVertexShader(c),u=i.createCombinedFragmentShader(c),g=new a({gl:c._gl,logShaderCompilation:c.logShaderCompilation,debugShaders:c.debugShaders,vertexShaderSource:h,vertexShaderText:S,fragmentShaderSource:i,fragmentShaderText:u,attributeLocations:n}),f={cache:this,shaderProgram:g,keyword:s,derivedKeywords:[],count:0};return d.derivedKeywords.push(r),g._cachedShader=f,this._shaders[s]=f,g},d.prototype.destroyReleasedShaderPrograms=function(){var e=this._shadersToRelease;for(var r in e){if(e.hasOwnProperty(r))s(this,e[r]),--this._numberOfShaders}this._shadersToRelease={}},d.prototype.releaseShaderProgram=function(r){if(e(r)){var t=r._cachedShader;t&&0==--t.count&&(this._shadersToRelease[t.keyword]=t)}},d.prototype.isDestroyed=function(){return!1},d.prototype.destroy=function(){var e=this._shaders;for(var r in e)e.hasOwnProperty(r)&&e[r].shaderProgram.finalDestroy();return t(this)},d});