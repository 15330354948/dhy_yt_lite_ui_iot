define(["../Core/Cartesian2","../Core/Cartesian3","../Core/Cartesian4","../Core/combine","../Core/ComponentDatatype","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/FeatureDetection","../Core/Math","../Core/PixelFormat","../Renderer/ContextLimits","../Renderer/PixelDatatype","../Renderer/Sampler","../Renderer/Texture","../Renderer/TextureMagnificationFilter","../Renderer/TextureMinificationFilter"],function(t,e,r,n,a,i,u,o,s,c,h,p,f,l,x,b,_,m){"use strict";function v(e,n,u){if(!i(e))throw new s("context is required");if(!i(n))throw new s("attributes is required");if(!i(u))throw new s("numberOfInstances is required");if(this._attributes=n,this._numberOfInstances=u,0!==n.length){var o=function(t){for(var e=!1,r=t.length,n=0;n<r;++n)if(t[n].componentDatatype!==a.UNSIGNED_BYTE){e=!0;break}return e?l.FLOAT:l.UNSIGNED_BYTE}(n),c=e.floatingPointTexture,h=o===l.FLOAT&&!c,p=function(t,e){for(var r=new Array(t.length),n=0,i=t.length,u=0;u<i;++u){var o=t[u],s=o.componentDatatype;r[u]=n,s!==a.UNSIGNED_BYTE&&e?n+=4:++n}return r}(n,h),x=function(t,e,r){var n=t.length,i=t[n-1];if(e[n-1].componentDatatype!==a.UNSIGNED_BYTE&&r)return i+4;return i+1}(p,n,h),b=Math.floor(f.maximumTextureSize/x),_=Math.min(u,b),m=x*_,v=Math.ceil(u/_),y=1/m,d=.5*y,D=1/v,T=.5*D;this._textureDimensions=new t(m,v),this._textureStep=new r(y,d,D,T),this._pixelDatatype=h?l.UNSIGNED_BYTE:o,this._packFloats=h,this._offsets=p,this._stride=x,this._texture=void 0;var w=4*m*v;this._batchValues=o!==l.FLOAT||h?new Uint8Array(w):new Float32Array(w),this._batchValuesDirty=!1}}function y(n,a){var i=n[a].componentsPerAttribute;return 2===i?t:3===i?e:4===i?r:Number}u(v.prototype,{attributes:{get:function(){return this._attributes}},numberOfInstances:{get:function(){return this._numberOfInstances}}});var d=new r;if(c.supportsTypedArrays()){var D=new r;v.prototype.getBatchedAttribute=function(t,e,n){if(t<0||t>=this._numberOfInstances)throw new s("instanceIndex is out of range.");if(e<0||e>=this._attributes.length)throw new s("attributeIndex is out of range");var a,u=this._attributes,o=this._offsets[e],c=4*this._stride*t+4*o;a=this._packFloats&&u[e].componentDatatype!==l.UNSIGNED_BYTE?function(t,e,n){var a=r.unpack(t,e,d),i=r.unpackFloat(a);a=r.unpack(t,e+4,d);var u=r.unpackFloat(a);a=r.unpack(t,e+8,d);var o=r.unpackFloat(a);a=r.unpack(t,e+12,d);var s=r.unpackFloat(a);return r.fromElements(i,u,o,s,n)}(this._batchValues,c,D):r.unpack(this._batchValues,c,D);var h=y(u,e);return i(h.fromCartesian4)?h.fromCartesian4(a,n):i(h.clone)?h.clone(a,n):a.x};var T=[void 0,void 0,new t,new e,new r],w=new r;return v.prototype.setBatchedAttribute=function(t,e,n){if(t<0||t>=this._numberOfInstances)throw new s("instanceIndex is out of range.");if(e<0||e>=this._attributes.length)throw new s("attributeIndex is out of range");if(!i(n))throw new s("value is required.");var a=this._attributes,u=T[a[e].componentsPerAttribute],o=this.getBatchedAttribute(t,e,u),c=y(this._attributes,e);if(!(i(c.equals)?c.equals(o,n):o===n)){var h=w;h.x=i(n.x)?n.x:n,h.y=i(n.y)?n.y:0,h.z=i(n.z)?n.z:0,h.w=i(n.w)?n.w:0;var p=this._offsets[e],f=4*this._stride*t+4*p;this._packFloats&&a[e].componentDatatype!==l.UNSIGNED_BYTE?function(t,e,n){var a=r.packFloat(t.x,d);r.pack(a,e,n),a=r.packFloat(t.y,a),r.pack(a,e,n+4),a=r.packFloat(t.z,a),r.pack(a,e,n+8),a=r.packFloat(t.w,a),r.pack(a,e,n+12)}(h,this._batchValues,f):r.pack(h,this._batchValues,f),this._batchValuesDirty=!0}},v.prototype.update=function(t){var e,r,n;i(this._texture)&&!this._batchValuesDirty||0===this._attributes.length||(this._batchValuesDirty=!1,i(this._texture)||(e=this,r=t.context,n=e._textureDimensions,e._texture=new b({context:r,pixelFormat:p.RGBA,pixelDatatype:e._pixelDatatype,width:n.x,height:n.y,sampler:new x({minificationFilter:m.NEAREST,magnificationFilter:_.NEAREST}),flipY:!1})),function(t){var e=t._textureDimensions;t._texture.copyFrom({width:e.x,height:e.y,arrayBufferView:t._batchValues})}(this))},v.prototype.getUniformMapCallback=function(){var t=this;return function(e){return 0===t._attributes.length?e:n(e,{batchTexture:function(){return t._texture},batchTextureDimensions:function(){return t._textureDimensions},batchTextureStep:function(){return t._textureStep}})}},v.prototype.getVertexShaderCallback=function(){var t=this._attributes;if(0===t.length)return function(t){return t};var e,r,n="uniform sampler2D batchTexture; \n";n+=(r=(e=this)._stride,(1===e._textureDimensions.y?"uniform vec4 batchTextureStep; \nvec2 computeSt(float batchId) \n{ \n    float stepX = batchTextureStep.x; \n    float centerX = batchTextureStep.y; \n    float numberOfAttributes = float("+r+"); \n    return vec2(centerX + (batchId * numberOfAttributes * stepX), 0.5); \n} \n":"uniform vec4 batchTextureStep; \nuniform vec2 batchTextureDimensions; \nvec2 computeSt(float batchId) \n{ \n    float stepX = batchTextureStep.x; \n    float centerX = batchTextureStep.y; \n    float stepY = batchTextureStep.z; \n    float centerY = batchTextureStep.w; \n    float numberOfAttributes = float("+r+"); \n    float xId = mod(batchId * numberOfAttributes, batchTextureDimensions.x); \n    float yId = floor(batchId * numberOfAttributes / batchTextureDimensions.x); \n    return vec2(centerX + (xId * stepX), centerY + (yId * stepY)); \n} \n")+"\n");for(var a=t.length,i=0;i<a;++i)n+=S(this,i);return function(t){var e=t.indexOf("void main"),r=t.substring(0,e),a=t.substring(e);return r+"\n"+n+"\n"+a}},v.prototype.isDestroyed=function(){return!1},v.prototype.destroy=function(){return this._texture=this._texture&&this._texture.destroy(),o(this)},v}function S(t,e){var r=t._attributes[e],n=r.componentsPerAttribute,i=r.functionName,u=function(t){return 1===t?"float":"vec"+t}(n),o=function(t){return 1===t?".x":2===t?".xy":3===t?".xyz":""}(n),s=u+" "+i+"(float batchId) \n{ \n    vec2 st = computeSt(batchId); \n    st.x += batchTextureStep.x * float("+t._offsets[e]+"); \n";return t._packFloats&&r.componentDatatype!==l.UNSIGNED_BYTE?s+="vec4 textureValue; \ntextureValue.x = czm_unpackFloat(texture2D(batchTexture, st)); \ntextureValue.y = czm_unpackFloat(texture2D(batchTexture, st + vec2(batchTextureStep.x, 0.0))); \ntextureValue.z = czm_unpackFloat(texture2D(batchTexture, st + vec2(batchTextureStep.x * 2.0, 0.0))); \ntextureValue.w = czm_unpackFloat(texture2D(batchTexture, st + vec2(batchTextureStep.x * 3.0, 0.0))); \n":s+="    vec4 textureValue = texture2D(batchTexture, st); \n",s+="    "+u+" value = textureValue"+o+"; \n",t._pixelDatatype!==l.UNSIGNED_BYTE||r.componentDatatype!==a.UNSIGNED_BYTE||r.normalize?t._pixelDatatype===l.FLOAT&&r.componentDatatype===a.UNSIGNED_BYTE&&r.normalize&&(s+="value /= 255.0; \n"):s+="value *= 255.0; \n",s+="    return value; \n} \n"}});