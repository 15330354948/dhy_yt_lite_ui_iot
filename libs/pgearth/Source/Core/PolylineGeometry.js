define(["./ArcType","./arrayRemoveDuplicates","./BoundingSphere","./Cartesian3","./Color","./ComponentDatatype","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./Geometry","./GeometryAttribute","./GeometryAttributes","./GeometryType","./IndexDatatype","./Math","./PolylinePipeline","./PrimitiveType","./VertexFormat"],function(e,r,t,o,a,n,i,l,s,p,c,h,u,d,v,y,g,m,w){"use strict";var f=[];function _(e,r,t,o,n){var i,l=f;l.length=n;var s=t.red,p=t.green,c=t.blue,h=t.alpha,u=o.red,d=o.green,v=o.blue,y=o.alpha;if(a.equals(t,o)){for(i=0;i<n;i++)l[i]=a.clone(t);return l}var g=(u-s)/n,m=(d-p)/n,w=(v-c)/n,_=(y-h)/n;for(i=0;i<n;i++)l[i]=new a(s+i*g,p+i*m,c+i*w,h+i*_);return l}function A(r){var t=(r=i(r,i.EMPTY_OBJECT)).positions,n=r.colors,c=i(r.width,1),h=i(r.colorsPerVertex,!1);if(!l(t)||t.length<2)throw new s("At least two positions are required.");if("number"!=typeof c)throw new s("width must be a number");if(l(n)&&(h&&n.length<t.length||!h&&n.length<t.length-1))throw new s("colors has an invalid length.");this._positions=t,this._colors=n,this._width=c,this._colorsPerVertex=h,this._vertexFormat=w.clone(i(r.vertexFormat,w.DEFAULT)),this._arcType=i(r.arcType,e.GEODESIC),this._granularity=i(r.granularity,y.RADIANS_PER_DEGREE),this._ellipsoid=p.clone(i(r.ellipsoid,p.WGS84)),this._workerName="createPolylineGeometry";var u=1+t.length*o.packedLength;u+=l(n)?1+n.length*a.packedLength:1,this.packedLength=u+p.packedLength+w.packedLength+4}A.pack=function(e,r,t){if(!l(e))throw new s("value is required");if(!l(r))throw new s("array is required");var n;t=i(t,0);var c=e._positions,h=c.length;for(r[t++]=h,n=0;n<h;++n,t+=o.packedLength)o.pack(c[n],r,t);var u=e._colors;for(h=l(u)?u.length:0,r[t++]=h,n=0;n<h;++n,t+=a.packedLength)a.pack(u[n],r,t);return p.pack(e._ellipsoid,r,t),t+=p.packedLength,w.pack(e._vertexFormat,r,t),t+=w.packedLength,r[t++]=e._width,r[t++]=e._colorsPerVertex?1:0,r[t++]=e._arcType,r[t]=e._granularity,r};var k=p.clone(p.UNIT_SPHERE),E=new w,P={positions:void 0,colors:void 0,ellipsoid:k,vertexFormat:E,width:void 0,colorsPerVertex:void 0,arcType:void 0,granularity:void 0};A.unpack=function(e,r,t){if(!l(e))throw new s("array is required");var n;r=i(r,0);var c=e[r++],h=new Array(c);for(n=0;n<c;++n,r+=o.packedLength)h[n]=o.unpack(e,r);var u=(c=e[r++])>0?new Array(c):void 0;for(n=0;n<c;++n,r+=a.packedLength)u[n]=a.unpack(e,r);var d=p.unpack(e,r,k);r+=p.packedLength;var v=w.unpack(e,r,E);r+=w.packedLength;var y=e[r++],g=1===e[r++],m=e[r++],f=e[r];return l(t)?(t._positions=h,t._colors=u,t._ellipsoid=p.clone(d,t._ellipsoid),t._vertexFormat=w.clone(v,t._vertexFormat),t._width=y,t._colorsPerVertex=g,t._arcType=m,t._granularity=f,t):(P.positions=h,P.colors=u,P.width=y,P.colorsPerVertex=g,P.arcType=m,P.granularity=f,new A(P))};var T=new o,L=new o,b=new o,D=new o;return A.createGeometry=function(i){var s,p,w,A=i._width,k=i._vertexFormat,E=i._colors,P=i._colorsPerVertex,x=i._arcType,F=i._granularity,G=i._ellipsoid,O=r(i._positions,o.equalsEpsilon),S=O.length;if(!(S<2||A<=0)){if(x===e.GEODESIC||x===e.RHUMB){var B,C;x===e.GEODESIC?(B=y.chordLength(F,G.maximumRadius),C=g.numberOfPoints):(B=F,C=g.numberOfPointsRhumbLine);var I=g.extractHeights(O,G);if(l(E)){var R=1;for(s=0;s<S-1;++s)R+=C(O[s],O[s+1],B);var V=new Array(R),U=0;for(s=0;s<S-1;++s){var N=O[s],q=O[s+1],M=E[s],H=C(N,q,B);if(P&&s<R){var Y=_(0,0,M,E[s+1],H),W=Y.length;for(p=0;p<W;++p)V[U++]=Y[p]}else for(p=0;p<H;++p)V[U++]=a.clone(M)}V[U]=a.clone(E[E.length-1]),E=V,f.length=0}O=x===e.GEODESIC?g.generateCartesianArc({positions:O,minDistance:B,ellipsoid:G,height:I}):g.generateCartesianRhumbArc({positions:O,granularity:B,ellipsoid:G,height:I})}var z,J=4*(S=O.length)-4,j=new Float64Array(3*J),K=new Float64Array(3*J),Q=new Float64Array(3*J),X=new Float32Array(2*J),Z=k.st?new Float32Array(2*J):void 0,$=l(E)?new Uint8Array(4*J):void 0,ee=0,re=0,te=0,oe=0;for(p=0;p<S;++p){var ae,ne;0===p?(z=T,o.subtract(O[0],O[1],z),o.add(O[0],z,z)):z=O[p-1],o.clone(z,b),o.clone(O[p],L),p===S-1?(z=T,o.subtract(O[S-1],O[S-2],z),o.add(O[S-1],z,z)):z=O[p+1],o.clone(z,D),l($)&&(ae=0===p||P?E[p]:E[p-1],p!==S-1&&(ne=E[p]));var ie=p===S-1?2:4;for(w=0===p?2:0;w<ie;++w){o.pack(L,j,ee),o.pack(b,K,ee),o.pack(D,Q,ee),ee+=3;var le=w-2<0?-1:1;if(X[re++]=w%2*2-1,X[re++]=le*A,k.st&&(Z[te++]=p/(S-1),Z[te++]=Math.max(X[re-2],0)),l($)){var se=w<2?ae:ne;$[oe++]=a.floatToByte(se.red),$[oe++]=a.floatToByte(se.green),$[oe++]=a.floatToByte(se.blue),$[oe++]=a.floatToByte(se.alpha)}}}var pe=new u;pe.position=new h({componentDatatype:n.DOUBLE,componentsPerAttribute:3,values:j}),pe.prevPosition=new h({componentDatatype:n.DOUBLE,componentsPerAttribute:3,values:K}),pe.nextPosition=new h({componentDatatype:n.DOUBLE,componentsPerAttribute:3,values:Q}),pe.expandAndWidth=new h({componentDatatype:n.FLOAT,componentsPerAttribute:2,values:X}),k.st&&(pe.st=new h({componentDatatype:n.FLOAT,componentsPerAttribute:2,values:Z})),l($)&&(pe.color=new h({componentDatatype:n.UNSIGNED_BYTE,componentsPerAttribute:4,values:$,normalize:!0}));var ce=v.createTypedArray(J,6*S-6),he=0,ue=0,de=S-1;for(p=0;p<de;++p)ce[ue++]=he,ce[ue++]=he+2,ce[ue++]=he+1,ce[ue++]=he+1,ce[ue++]=he+2,ce[ue++]=he+3,he+=4;return new c({attributes:pe,indices:ce,primitiveType:m.TRIANGLES,boundingSphere:t.fromPoints(O),geometryType:d.POLYLINES})}},A});