define(["./BoundingSphere","./Cartesian3","./Cartesian4","./Check","./ComponentDatatype","./defaultValue","./defined","./Geometry","./GeometryAttribute","./GeometryAttributes","./Matrix3","./Matrix4","./OrthographicFrustum","./PerspectiveFrustum","./PrimitiveType","./Quaternion","./VertexFormat"],function(e,t,n,r,a,o,i,u,p,c,m,s,l,f,v,y,w){"use strict";var g=0,d=1;function _(e){r.typeOf.object("options",e),r.typeOf.object("options.frustum",e.frustum),r.typeOf.object("options.origin",e.origin),r.typeOf.object("options.orientation",e.orientation);var n,a,i=e.frustum,u=e.orientation,p=e.origin,c=o(e.vertexFormat,w.DEFAULT),m=o(e._drawNearPlane,!0);i instanceof f?(n=g,a=f.packedLength):i instanceof l&&(n=d,a=l.packedLength),this._frustumType=n,this._frustum=i.clone(),this._origin=t.clone(p),this._orientation=y.clone(u),this._drawNearPlane=m,this._vertexFormat=c,this._workerName="createFrustumGeometry",this.packedLength=2+a+t.packedLength+y.packedLength+w.packedLength}_.pack=function(e,n,a){r.typeOf.object("value",e),r.defined("array",n),a=o(a,0);var i=e._frustumType,u=e._frustum;return n[a++]=i,i===g?(f.pack(u,n,a),a+=f.packedLength):(l.pack(u,n,a),a+=l.packedLength),t.pack(e._origin,n,a),a+=t.packedLength,y.pack(e._orientation,n,a),a+=y.packedLength,w.pack(e._vertexFormat,n,a),n[a+=w.packedLength]=e._drawNearPlane?1:0,n};var h=new f,k=new l,F=new y,L=new t,A=new w;function b(e,t,n,r,a,o,u,p){for(var c=e/3*2,m=0;m<4;++m)i(t)&&(t[e]=o.x,t[e+1]=o.y,t[e+2]=o.z),i(n)&&(n[e]=u.x,n[e+1]=u.y,n[e+2]=u.z),i(r)&&(r[e]=p.x,r[e+1]=p.y,r[e+2]=p.z),e+=3;a[c]=0,a[c+1]=0,a[c+2]=1,a[c+3]=0,a[c+4]=1,a[c+5]=1,a[c+6]=0,a[c+7]=1}_.unpack=function(e,n,a){r.defined("array",e),n=o(n,0);var u,p=e[n++];p===g?(u=f.unpack(e,n,h),n+=f.packedLength):(u=l.unpack(e,n,k),n+=l.packedLength);var c=t.unpack(e,n,L);n+=t.packedLength;var m=y.unpack(e,n,F);n+=y.packedLength;var s=w.unpack(e,n,A),v=1===e[n+=w.packedLength];if(!i(a))return new _({frustum:u,origin:c,orientation:m,vertexFormat:s,_drawNearPlane:v});var d=p===a._frustumType?a._frustum:void 0;return a._frustum=u.clone(d),a._frustumType=p,a._origin=t.clone(c,a._origin),a._orientation=y.clone(m,a._orientation),a._vertexFormat=w.clone(s,a._vertexFormat),a._drawNearPlane=v,a};var x=new m,P=new s,T=new s,O=new t,z=new t,N=new t,C=new t,D=new t,j=new t,B=new Array(3),G=new Array(4);G[0]=new n(-1,-1,1,1),G[1]=new n(1,-1,1,1),G[2]=new n(1,1,1,1),G[3]=new n(-1,1,1,1);for(var V=new Array(4),S=0;S<4;++S)V[S]=new n;return _._computeNearFarPlanes=function(e,r,a,u,p,c,l,f){var v=m.fromQuaternion(r,x),y=o(c,O),w=o(l,z),d=o(f,N);y=m.getColumn(v,0,y),w=m.getColumn(v,1,w),d=m.getColumn(v,2,d),t.normalize(y,y),t.normalize(w,w),t.normalize(d,d),t.negate(y,y);var _,h,k=s.computeView(e,d,w,y,P);if(a===g){var F=u.projectionMatrix,L=s.multiply(F,k,T);h=s.inverse(L,T)}else _=s.inverseTransformation(k,T);i(h)?(B[0]=u.near,B[1]=u.far):(B[0]=0,B[1]=u.near,B[2]=u.far);for(var A=0;A<2;++A)for(var b=0;b<4;++b){var C=n.clone(G[b],V[b]);if(i(h)){var D=1/(C=s.multiplyByVector(h,C,C)).w;t.multiplyByScalar(C,D,C),t.subtract(C,e,C),t.normalize(C,C);var j=t.dot(d,C);t.multiplyByScalar(C,B[A]/j,C),t.add(C,e,C)}else{i(u._offCenterFrustum)&&(u=u._offCenterFrustum);var S=B[A],E=B[A+1];C.x=.5*(C.x*(u.right-u.left)+u.left+u.right),C.y=.5*(C.y*(u.top-u.bottom)+u.bottom+u.top),C.z=.5*(C.z*(S-E)-S-E),C.w=1,s.multiplyByVector(_,C,C)}p[12*A+3*b]=C.x,p[12*A+3*b+1]=C.y,p[12*A+3*b+2]=C.z}},_.createGeometry=function(n){var r=n._frustumType,o=n._frustum,m=n._origin,s=n._orientation,l=n._drawNearPlane,f=n._vertexFormat,y=l?6:5,w=new Float64Array(72);_._computeNearFarPlanes(m,s,r,o,w);var g=24;w[g]=w[12],w[g+1]=w[13],w[g+2]=w[14],w[g+3]=w[0],w[g+4]=w[1],w[g+5]=w[2],w[g+6]=w[9],w[g+7]=w[10],w[g+8]=w[11],w[g+9]=w[21],w[g+10]=w[22],w[g+11]=w[23],w[g+=12]=w[15],w[g+1]=w[16],w[g+2]=w[17],w[g+3]=w[3],w[g+4]=w[4],w[g+5]=w[5],w[g+6]=w[0],w[g+7]=w[1],w[g+8]=w[2],w[g+9]=w[12],w[g+10]=w[13],w[g+11]=w[14],w[g+=12]=w[3],w[g+1]=w[4],w[g+2]=w[5],w[g+3]=w[15],w[g+4]=w[16],w[g+5]=w[17],w[g+6]=w[18],w[g+7]=w[19],w[g+8]=w[20],w[g+9]=w[6],w[g+10]=w[7],w[g+11]=w[8],w[g+=12]=w[6],w[g+1]=w[7],w[g+2]=w[8],w[g+3]=w[18],w[g+4]=w[19],w[g+5]=w[20],w[g+6]=w[21],w[g+7]=w[22],w[g+8]=w[23],w[g+9]=w[9],w[g+10]=w[10],w[g+11]=w[11],l||(w=w.subarray(12));var d=new c({position:new p({componentDatatype:a.DOUBLE,componentsPerAttribute:3,values:w})});if(i(f.normal)||i(f.tangent)||i(f.bitangent)||i(f.st)){var h=i(f.normal)?new Float32Array(12*y):void 0,k=i(f.tangent)?new Float32Array(12*y):void 0,F=i(f.bitangent)?new Float32Array(12*y):void 0,L=i(f.st)?new Float32Array(8*y):void 0,A=O,x=z,P=N,T=t.negate(A,C),B=t.negate(x,D),G=t.negate(P,j);g=0,l&&(b(g,h,k,F,L,G,A,x),g+=12),b(g,h,k,F,L,P,T,x),b(g+=12,h,k,F,L,T,G,x),b(g+=12,h,k,F,L,B,G,T),b(g+=12,h,k,F,L,A,P,x),b(g+=12,h,k,F,L,x,P,T),i(h)&&(d.normal=new p({componentDatatype:a.FLOAT,componentsPerAttribute:3,values:h})),i(k)&&(d.tangent=new p({componentDatatype:a.FLOAT,componentsPerAttribute:3,values:k})),i(F)&&(d.bitangent=new p({componentDatatype:a.FLOAT,componentsPerAttribute:3,values:F})),i(L)&&(d.st=new p({componentDatatype:a.FLOAT,componentsPerAttribute:2,values:L}))}for(var V=new Uint16Array(6*y),S=0;S<y;++S){var E=6*S,M=4*S;V[E]=M,V[E+1]=M+1,V[E+2]=M+2,V[E+3]=M,V[E+4]=M+2,V[E+5]=M+3}return new u({attributes:d,indices:V,primitiveType:v.TRIANGLES,boundingSphere:e.fromVertices(w)})},_});