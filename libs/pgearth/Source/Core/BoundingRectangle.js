define(["./Cartesian2","./Cartographic","./Check","./defaultValue","./defined","./GeographicProjection","./Intersect","./Rectangle"],function(t,e,h,i,n,r,o,a){"use strict";function c(t,e,h,n){this.x=i(t,0),this.y=i(e,0),this.width=i(h,0),this.height=i(n,0)}c.packedLength=4,c.pack=function(t,e,n){return h.typeOf.object("value",t),h.defined("array",e),n=i(n,0),e[n++]=t.x,e[n++]=t.y,e[n++]=t.width,e[n]=t.height,e},c.unpack=function(t,e,r){return h.defined("array",t),e=i(e,0),n(r)||(r=new c),r.x=t[e++],r.y=t[e++],r.width=t[e++],r.height=t[e],r},c.fromPoints=function(t,e){if(n(e)||(e=new c),!n(t)||0===t.length)return e.x=0,e.y=0,e.width=0,e.height=0,e;for(var h=t.length,i=t[0].x,r=t[0].y,o=t[0].x,a=t[0].y,u=1;u<h;u++){var y=t[u],f=y.x,x=y.y;i=Math.min(f,i),o=Math.max(f,o),r=Math.min(x,r),a=Math.max(x,a)}return e.x=i,e.y=r,e.width=o-i,e.height=a-r,e};var u=new r,y=new e,f=new e;return c.fromRectangle=function(e,h,r){if(n(r)||(r=new c),!n(e))return r.x=0,r.y=0,r.width=0,r.height=0,r;var o=(h=i(h,u)).project(a.southwest(e,y)),x=h.project(a.northeast(e,f));return t.subtract(x,o,x),r.x=o.x,r.y=o.y,r.width=x.x,r.height=x.y,r},c.clone=function(t,e){if(n(t))return n(e)?(e.x=t.x,e.y=t.y,e.width=t.width,e.height=t.height,e):new c(t.x,t.y,t.width,t.height)},c.union=function(t,e,i){h.typeOf.object("left",t),h.typeOf.object("right",e),n(i)||(i=new c);var r=Math.min(t.x,e.x),o=Math.min(t.y,e.y),a=Math.max(t.x+t.width,e.x+e.width),u=Math.max(t.y+t.height,e.y+e.height);return i.x=r,i.y=o,i.width=a-r,i.height=u-o,i},c.expand=function(t,e,i){h.typeOf.object("rectangle",t),h.typeOf.object("point",e),i=c.clone(t,i);var n=e.x-i.x,r=e.y-i.y;return n>i.width?i.width=n:n<0&&(i.width-=n,i.x=e.x),r>i.height?i.height=r:r<0&&(i.height-=r,i.y=e.y),i},c.intersect=function(t,e){h.typeOf.object("left",t),h.typeOf.object("right",e);var i=t.x,n=t.y,r=e.x,a=e.y;return i>r+e.width||i+t.width<r||n+t.height<a||n>a+e.height?o.OUTSIDE:o.INTERSECTING},c.equals=function(t,e){return t===e||n(t)&&n(e)&&t.x===e.x&&t.y===e.y&&t.width===e.width&&t.height===e.height},c.prototype.clone=function(t){return c.clone(this,t)},c.prototype.intersect=function(t){return c.intersect(this,t)},c.prototype.equals=function(t){return c.equals(this,t)},c});