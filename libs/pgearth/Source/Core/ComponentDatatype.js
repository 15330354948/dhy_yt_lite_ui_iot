define(["./defaultValue","./defined","./DeveloperError","./FeatureDetection","./freezeObject","./WebGLConstants"],function(r,e,n,t,a,E){"use strict";if(!t.supportsTypedArrays())return{};var T={BYTE:E.BYTE,UNSIGNED_BYTE:E.UNSIGNED_BYTE,SHORT:E.SHORT,UNSIGNED_SHORT:E.UNSIGNED_SHORT,INT:E.INT,UNSIGNED_INT:E.UNSIGNED_INT,FLOAT:E.FLOAT,DOUBLE:E.DOUBLE,getSizeInBytes:function(r){if(!e(r))throw new n("value is required.");switch(r){case T.BYTE:return Int8Array.BYTES_PER_ELEMENT;case T.UNSIGNED_BYTE:return Uint8Array.BYTES_PER_ELEMENT;case T.SHORT:return Int16Array.BYTES_PER_ELEMENT;case T.UNSIGNED_SHORT:return Uint16Array.BYTES_PER_ELEMENT;case T.INT:return Int32Array.BYTES_PER_ELEMENT;case T.UNSIGNED_INT:return Uint32Array.BYTES_PER_ELEMENT;case T.FLOAT:return Float32Array.BYTES_PER_ELEMENT;case T.DOUBLE:return Float64Array.BYTES_PER_ELEMENT;default:throw new n("componentDatatype is not a valid value.")}},fromTypedArray:function(r){return r instanceof Int8Array?T.BYTE:r instanceof Uint8Array?T.UNSIGNED_BYTE:r instanceof Int16Array?T.SHORT:r instanceof Uint16Array?T.UNSIGNED_SHORT:r instanceof Int32Array?T.INT:r instanceof Uint32Array?T.UNSIGNED_INT:r instanceof Float32Array?T.FLOAT:r instanceof Float64Array?T.DOUBLE:void 0},validate:function(r){return e(r)&&(r===T.BYTE||r===T.UNSIGNED_BYTE||r===T.SHORT||r===T.UNSIGNED_SHORT||r===T.INT||r===T.UNSIGNED_INT||r===T.FLOAT||r===T.DOUBLE)},createTypedArray:function(r,t){if(!e(r))throw new n("componentDatatype is required.");if(!e(t))throw new n("valuesOrLength is required.");switch(r){case T.BYTE:return new Int8Array(t);case T.UNSIGNED_BYTE:return new Uint8Array(t);case T.SHORT:return new Int16Array(t);case T.UNSIGNED_SHORT:return new Uint16Array(t);case T.INT:return new Int32Array(t);case T.UNSIGNED_INT:return new Uint32Array(t);case T.FLOAT:return new Float32Array(t);case T.DOUBLE:return new Float64Array(t);default:throw new n("componentDatatype is not a valid value.")}},createArrayBufferView:function(t,a,E,N){if(!e(t))throw new n("componentDatatype is required.");if(!e(a))throw new n("buffer is required.");switch(E=r(E,0),N=r(N,(a.byteLength-E)/T.getSizeInBytes(t)),t){case T.BYTE:return new Int8Array(a,E,N);case T.UNSIGNED_BYTE:return new Uint8Array(a,E,N);case T.SHORT:return new Int16Array(a,E,N);case T.UNSIGNED_SHORT:return new Uint16Array(a,E,N);case T.INT:return new Int32Array(a,E,N);case T.UNSIGNED_INT:return new Uint32Array(a,E,N);case T.FLOAT:return new Float32Array(a,E,N);case T.DOUBLE:return new Float64Array(a,E,N);default:throw new n("componentDatatype is not a valid value.")}},fromName:function(r){switch(r){case"BYTE":return T.BYTE;case"UNSIGNED_BYTE":return T.UNSIGNED_BYTE;case"SHORT":return T.SHORT;case"UNSIGNED_SHORT":return T.UNSIGNED_SHORT;case"INT":return T.INT;case"UNSIGNED_INT":return T.UNSIGNED_INT;case"FLOAT":return T.FLOAT;case"DOUBLE":return T.DOUBLE;default:throw new n("name is not a valid value.")}}};return a(T)});