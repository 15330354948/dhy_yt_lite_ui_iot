define(["../Core/BoundingSphere","../Core/Cartesian2","../Core/Cartesian3","../Core/Cartesian4","../Core/ComponentDatatype","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/IndexDatatype","../Core/Math","../Core/Matrix4","../Core/PixelFormat","../Core/PrimitiveType","../Renderer/Buffer","../Renderer/BufferUsage","../Renderer/ComputeCommand","../Renderer/DrawCommand","../Renderer/PixelDatatype","../Renderer/RenderState","../Renderer/ShaderProgram","../Renderer/Texture","../Renderer/VertexArray","../Shaders/SunFS","../Shaders/SunTextureFS","../Shaders/SunVS","./BlendingState","./SceneMode","./SceneTransforms"],function(e,t,r,i,o,n,a,s,u,d,h,m,c,_,f,g,w,p,x,S,l,y,C,v,A,T,D,R){"use strict";function B(){this.show=!0,this._drawCommand=new w({primitiveType:c.TRIANGLES,boundingVolume:new e,owner:this}),this._commands={drawCommand:this._drawCommand,computeCommand:void 0},this._boundingVolume=new e,this._boundingVolume2D=new e,this._texture=void 0,this._drawingBufferWidth=void 0,this._drawingBufferHeight=void 0,this._radiusTS=void 0,this._size=void 0,this.glowFactor=1,this._glowFactorDirty=!1,this._useHdr=void 0;var t=this;this._uniformMap={u_texture:function(){return t._texture},u_size:function(){return t._size}}}a(B.prototype,{glowFactor:{get:function(){return this._glowFactor},set:function(e){e=Math.max(e,0),this._glowFactor=e,this._glowFactorDirty=!0}}});var F=new t,L=new t,M=new i,P=new i;return B.prototype.update=function(i,a,s){if(this.show){var c=i.mode;if(c!==D.SCENE2D&&c!==D.MORPHING&&i.passes.render){var w=i.context,B=a.viewport.width,b=a.viewport.height;if(!n(this._texture)||B!==this._drawingBufferWidth||b!==this._drawingBufferHeight||this._glowFactorDirty||s!==this._useHdr){this._texture=this._texture&&this._texture.destroy(),this._drawingBufferWidth=B,this._drawingBufferHeight=b,this._glowFactorDirty=!1,this._useHdr=s;var V=Math.max(B,b);V=Math.pow(2,Math.ceil(Math.log(V)/Math.log(2))-2),V=Math.max(1,V);var E=s?w.halfFloatingPointTexture?p.HALF_FLOAT:p.FLOAT:p.UNSIGNED_BYTE;this._texture=new l({context:w,width:V,height:V,pixelFormat:m.RGBA,pixelDatatype:E}),this._glowLengthTS=5*this._glowFactor,this._radiusTS=1/(1+2*this._glowLengthTS)*.5;var I=this,N={u_radiusTS:function(){return I._radiusTS}};this._commands.computeCommand=new g({fragmentShaderSource:v,outputTexture:this._texture,uniformMap:N,persists:!1,owner:this,postExecute:function(){I._commands.computeCommand=void 0}})}var U=this._drawCommand;if(!n(U.vertexArray)){var z={direction:0},H=new Uint8Array(8);H[0]=0,H[1]=0,H[2]=255,H[3]=0,H[4]=255,H[5]=255,H[6]=0,H[7]=255;var W=_.createVertexBuffer({context:w,typedArray:H,usage:f.STATIC_DRAW}),O=[{index:z.direction,vertexBuffer:W,componentsPerAttribute:2,normalize:!0,componentDatatype:o.UNSIGNED_BYTE}],G=_.createIndexBuffer({context:w,typedArray:new Uint16Array([0,1,2,0,2,3]),usage:f.STATIC_DRAW,indexDatatype:u.UNSIGNED_SHORT});U.vertexArray=new y({context:w,attributes:O,indexBuffer:G}),U.shaderProgram=S.fromCache({context:w,vertexShaderSource:A,fragmentShaderSource:C,attributeLocations:z}),U.renderState=x.fromCache({blending:T.ALPHA_BLEND}),U.uniformMap=this._uniformMap}var j=w.uniformState.sunPositionWC,Y=w.uniformState.sunPositionColumbusView,k=this._boundingVolume,q=this._boundingVolume2D;r.clone(j,k.center),q.center.x=Y.z,q.center.y=Y.x,q.center.z=Y.y,k.radius=d.SOLAR_RADIUS+d.SOLAR_RADIUS*this._glowLengthTS,q.radius=k.radius,c===D.SCENE3D?e.clone(k,U.boundingVolume):c===D.COLUMBUS_VIEW&&e.clone(q,U.boundingVolume);var J=R.computeActualWgs84Position(i,j,P),K=r.magnitude(r.subtract(J,i.camera.position,P)),Q=w.uniformState.projection,X=M;X.x=0,X.y=0,X.z=-K,X.w=1;var Z=h.multiplyByVector(Q,X,P),$=R.clipToGLWindowCoordinates(a.viewport,Z,F);X.x=d.SOLAR_RADIUS;var ee=h.multiplyByVector(Q,X,P),te=R.clipToGLWindowCoordinates(a.viewport,ee,L);return this._size=Math.ceil(t.magnitude(t.subtract(te,$,P))),this._size=2*this._size*(1+2*this._glowLengthTS),this._commands}}},B.prototype.isDestroyed=function(){return!1},B.prototype.destroy=function(){var e=this._drawCommand;return e.vertexArray=e.vertexArray&&e.vertexArray.destroy(),e.shaderProgram=e.shaderProgram&&e.shaderProgram.destroy(),this._texture=this._texture&&this._texture.destroy(),s(this)},B});