define(["../Core/Cartesian2","../Core/Cartesian3","../Core/Check","../Core/Color","../Core/ColorGeometryInstanceAttribute","../Core/defined","../Core/DeveloperError","../Core/DistanceDisplayConditionGeometryInstanceAttribute","../Core/GeometryInstance","../Core/Iso8601","../Core/Math","../Core/Matrix3","../Core/Matrix4","../Core/PlaneGeometry","../Core/PlaneOutlineGeometry","../Core/Quaternion","../Core/ShowGeometryInstanceAttribute","../Scene/MaterialAppearance","../Scene/PerInstanceColorAppearance","./ColorMaterialProperty","./DynamicGeometryUpdater","./GeometryUpdater","./Property"],function(e,t,o,n,i,r,a,s,l,p,c,d,m,y,u,h,C,f,_,w,g,v,P){"use strict";var M=new t,V=new n;function D(e,t){v.call(this,{entity:e,scene:t,geometryOptions:new function(e){this.id=e,this.vertexFormat=void 0,this.plane=void 0,this.dimensions=void 0}(e),geometryPropertyName:"plane",observedPropertyNames:["availability","position","orientation","plane"]}),this._onEntityPropertyChanged(e,"plane",e.plane,void 0)}function O(e,t,o){g.call(this,e,t,o)}r(Object.create)&&(D.prototype=Object.create(v.prototype),D.prototype.constructor=D),D.prototype.createFillGeometryInstance=function(e){if(o.defined("time",e),!this._fillEnabled)throw new a("This instance does not represent a filled geometry.");var t,p,c=this._entity,d=c.isAvailable(e),m=new C(d&&c.isShowing&&this._showProperty.getValue(e)&&this._fillProperty.getValue(e)),u=this._distanceDisplayConditionProperty.getValue(e),h=s.fromDistanceDisplayCondition(u);this._materialProperty instanceof w?(r(this._materialProperty.color)&&(this._materialProperty.color.isConstant||d)&&(p=this._materialProperty.color.getValue(e,V)),r(p)||(p=n.WHITE),t={show:m,distanceDisplayCondition:h,color:i.fromColor(p)}):t={show:m,distanceDisplayCondition:h};var f=c.plane,_=this._options,g=c.computeModelMatrix(e),v=P.getValueOrDefault(f.plane,e,_.plane),M=P.getValueOrUndefined(f.dimensions,e,_.dimensions);return _.plane=v,_.dimensions=M,g=S(v,M,g,this._scene.mapProjection.ellipsoid,g),new l({id:c,geometry:new y(this._options),modelMatrix:g,attributes:t})},D.prototype.createOutlineGeometryInstance=function(e){if(o.defined("time",e),!this._outlineEnabled)throw new a("This instance does not represent an outlined geometry.");var t=this._entity,r=t.isAvailable(e),p=P.getValueOrDefault(this._outlineColorProperty,e,n.BLACK,V),c=this._distanceDisplayConditionProperty.getValue(e),d=t.plane,m=this._options,y=t.computeModelMatrix(e),h=P.getValueOrDefault(d.plane,e,m.plane),f=P.getValueOrUndefined(d.dimensions,e,m.dimensions);return m.plane=h,m.dimensions=f,y=S(h,f,y,this._scene.mapProjection.ellipsoid,y),new l({id:t,geometry:new u,modelMatrix:y,attributes:{show:new C(r&&t.isShowing&&this._showProperty.getValue(e)&&this._showOutlineProperty.getValue(e)),color:i.fromColor(p),distanceDisplayCondition:s.fromDistanceDisplayCondition(c)}})},D.prototype._isHidden=function(e,t){return!r(t.plane)||!r(t.dimensions)||!r(e.position)||v.prototype._isHidden.call(this,e,t)},D.prototype._getIsClosed=function(e){return!1},D.prototype._isDynamic=function(e,t){return!(e.position.isConstant&&P.isConstant(e.orientation)&&t.plane.isConstant&&t.dimensions.isConstant&&P.isConstant(t.outlineWidth))},D.prototype._setStaticOptions=function(e,t){var o=this._materialProperty instanceof w,n=this._options;n.vertexFormat=o?_.VERTEX_FORMAT:f.MaterialSupport.TEXTURED.vertexFormat,n.plane=t.plane.getValue(p.MINIMUM_VALUE,n.plane),n.dimensions=t.dimensions.getValue(p.MINIMUM_VALUE,n.dimensions)},D.DynamicGeometryUpdater=O,r(Object.create)&&(O.prototype=Object.create(g.prototype),O.prototype.constructor=O),O.prototype._isHidden=function(e,t,o){var n=this._options,i=P.getValueOrUndefined(e.position,o,M);return!r(i)||!r(n.plane)||!r(n.dimensions)||g.prototype._isHidden.call(this,e,t,o)},O.prototype._setOptions=function(e,t,o){var n=this._options;n.plane=P.getValueOrDefault(t.plane,o,n.plane),n.dimensions=P.getValueOrUndefined(t.dimensions,o,n.dimensions)};var b=new t,I=new t,E=new t,U=new t,A=new t,x=new h,G=new d;function S(o,n,i,r,a){var s=o.normal,l=o.distance,p=t.multiplyByScalar(s,-l,E);p=m.multiplyByPoint(i,p,p);var y=m.multiplyByPointAsVector(i,s,U);t.normalize(y,y);var u=r.geodeticSurfaceNormal(p,I);c.equalsEpsilon(Math.abs(t.dot(u,y)),1,c.EPSILON8)&&(u=t.clone(t.UNIT_Z,u));var C=t.cross(u,y,b);u=t.cross(y,C,u),t.normalize(C,C),t.normalize(u,u);var f=G;d.setColumn(f,0,C,f),d.setColumn(f,1,u,f),d.setColumn(f,2,y,f);var _=h.fromRotationMatrix(f,x),w=e.clone(n,A);return w.z=1,m.fromTranslationQuaternionRotationScale(p,_,w,a)}return D.createPrimitiveMatrix=S,D});