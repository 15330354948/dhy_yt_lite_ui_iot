define(["./Cartesian3","./Cartographic","./Check","./defaultValue","./defined","./Ellipsoid","./GeographicProjection","./Intersect","./Interval","./Math","./Matrix3","./Matrix4","./Rectangle"],function(e,r,n,t,a,c,o,u,i,d,s,l,f){"use strict";function y(r,n){this.center=e.clone(t(r,e.ZERO)),this.radius=t(n,0)}var p=new e,v=new e,m=new e,x=new e,g=new e,h=new e,z=new e,w=new e,b=new e,O=new e,S=new e,q=new e,j=4/3*d.PI;y.fromPoints=function(r,n){if(a(n)||(n=new y),!a(r)||0===r.length)return n.center=e.clone(e.ZERO,n.center),n.radius=0,n;var t,c=e.clone(r[0],z),o=e.clone(c,p),u=e.clone(c,v),i=e.clone(c,m),d=e.clone(c,x),s=e.clone(c,g),l=e.clone(c,h),f=r.length;for(t=1;t<f;t++){e.clone(r[t],c);var j=c.x,E=c.y,R=c.z;j<o.x&&e.clone(c,o),j>d.x&&e.clone(c,d),E<u.y&&e.clone(c,u),E>s.y&&e.clone(c,s),R<i.z&&e.clone(c,i),R>l.z&&e.clone(c,l)}var P=e.magnitudeSquared(e.subtract(d,o,w)),B=e.magnitudeSquared(e.subtract(s,u,w)),M=e.magnitudeSquared(e.subtract(l,i,w)),C=o,D=d,T=P;B>T&&(T=B,C=u,D=s),M>T&&(T=M,C=i,D=l);var Z=b;Z.x=.5*(C.x+D.x),Z.y=.5*(C.y+D.y),Z.z=.5*(C.z+D.z);var I=e.magnitudeSquared(e.subtract(D,Z,w)),N=Math.sqrt(I),k=O;k.x=o.x,k.y=u.y,k.z=i.z;var V=S;V.x=d.x,V.y=s.y,V.z=l.z;var W=e.midpoint(k,V,q),G=0;for(t=0;t<f;t++){e.clone(r[t],c);var A=e.magnitude(e.subtract(c,W,w));A>G&&(G=A);var H=e.magnitudeSquared(e.subtract(c,Z,w));if(H>I){var U=Math.sqrt(H);I=(N=.5*(N+U))*N;var L=U-N;Z.x=(N*Z.x+L*c.x)/U,Z.y=(N*Z.y+L*c.y)/U,Z.z=(N*Z.z+L*c.z)/U}}return N<G?(e.clone(Z,n.center),n.radius=N):(e.clone(W,n.center),n.radius=G),n};var E=new o,R=new e,P=new e,B=new r,M=new r;y.fromRectangle2D=function(e,r,n){return y.fromRectangleWithHeights2D(e,r,0,0,n)},y.fromRectangleWithHeights2D=function(r,n,c,o,u){if(a(u)||(u=new y),!a(r))return u.center=e.clone(e.ZERO,u.center),u.radius=0,u;n=t(n,E),f.southwest(r,B),B.height=c,f.northeast(r,M),M.height=o;var i=n.project(B,R),d=n.project(M,P),s=d.x-i.x,l=d.y-i.y,p=d.z-i.z;u.radius=.5*Math.sqrt(s*s+l*l+p*p);var v=u.center;return v.x=i.x+.5*s,v.y=i.y+.5*l,v.z=i.z+.5*p,u};var C=[];y.fromRectangle3D=function(r,n,o,u){if(n=t(n,c.WGS84),o=t(o,0),a(u)||(u=new y),!a(r))return u.center=e.clone(e.ZERO,u.center),u.radius=0,u;var i=f.subsample(r,n,o,C);return y.fromPoints(i,u)},y.fromVertices=function(r,c,o,u){if(a(u)||(u=new y),!a(r)||0===r.length)return u.center=e.clone(e.ZERO,u.center),u.radius=0,u;c=t(c,e.ZERO),o=t(o,3),n.typeOf.number.greaterThanOrEquals("stride",o,3);var i=z;i.x=r[0]+c.x,i.y=r[1]+c.y,i.z=r[2]+c.z;var d,s=e.clone(i,p),l=e.clone(i,v),f=e.clone(i,m),j=e.clone(i,x),E=e.clone(i,g),R=e.clone(i,h),P=r.length;for(d=0;d<P;d+=o){var B=r[d]+c.x,M=r[d+1]+c.y,C=r[d+2]+c.z;i.x=B,i.y=M,i.z=C,B<s.x&&e.clone(i,s),B>j.x&&e.clone(i,j),M<l.y&&e.clone(i,l),M>E.y&&e.clone(i,E),C<f.z&&e.clone(i,f),C>R.z&&e.clone(i,R)}var D=e.magnitudeSquared(e.subtract(j,s,w)),T=e.magnitudeSquared(e.subtract(E,l,w)),Z=e.magnitudeSquared(e.subtract(R,f,w)),I=s,N=j,k=D;T>k&&(k=T,I=l,N=E),Z>k&&(k=Z,I=f,N=R);var V=b;V.x=.5*(I.x+N.x),V.y=.5*(I.y+N.y),V.z=.5*(I.z+N.z);var W=e.magnitudeSquared(e.subtract(N,V,w)),G=Math.sqrt(W),A=O;A.x=s.x,A.y=l.y,A.z=f.z;var H=S;H.x=j.x,H.y=E.y,H.z=R.z;var U=e.midpoint(A,H,q),L=0;for(d=0;d<P;d+=o){i.x=r[d]+c.x,i.y=r[d+1]+c.y,i.z=r[d+2]+c.z;var _=e.magnitude(e.subtract(i,U,w));_>L&&(L=_);var F=e.magnitudeSquared(e.subtract(i,V,w));if(F>W){var J=Math.sqrt(F);W=(G=.5*(G+J))*G;var K=J-G;V.x=(G*V.x+K*i.x)/J,V.y=(G*V.y+K*i.y)/J,V.z=(G*V.z+K*i.z)/J}}return G<L?(e.clone(V,u.center),u.radius=G):(e.clone(U,u.center),u.radius=L),u},y.fromEncodedCartesianVertices=function(r,n,t){if(a(t)||(t=new y),!a(r)||!a(n)||r.length!==n.length||0===r.length)return t.center=e.clone(e.ZERO,t.center),t.radius=0,t;var c=z;c.x=r[0]+n[0],c.y=r[1]+n[1],c.z=r[2]+n[2];var o,u=e.clone(c,p),i=e.clone(c,v),d=e.clone(c,m),s=e.clone(c,x),l=e.clone(c,g),f=e.clone(c,h),j=r.length;for(o=0;o<j;o+=3){var E=r[o]+n[o],R=r[o+1]+n[o+1],P=r[o+2]+n[o+2];c.x=E,c.y=R,c.z=P,E<u.x&&e.clone(c,u),E>s.x&&e.clone(c,s),R<i.y&&e.clone(c,i),R>l.y&&e.clone(c,l),P<d.z&&e.clone(c,d),P>f.z&&e.clone(c,f)}var B=e.magnitudeSquared(e.subtract(s,u,w)),M=e.magnitudeSquared(e.subtract(l,i,w)),C=e.magnitudeSquared(e.subtract(f,d,w)),D=u,T=s,Z=B;M>Z&&(Z=M,D=i,T=l),C>Z&&(Z=C,D=d,T=f);var I=b;I.x=.5*(D.x+T.x),I.y=.5*(D.y+T.y),I.z=.5*(D.z+T.z);var N=e.magnitudeSquared(e.subtract(T,I,w)),k=Math.sqrt(N),V=O;V.x=u.x,V.y=i.y,V.z=d.z;var W=S;W.x=s.x,W.y=l.y,W.z=f.z;var G=e.midpoint(V,W,q),A=0;for(o=0;o<j;o+=3){c.x=r[o]+n[o],c.y=r[o+1]+n[o+1],c.z=r[o+2]+n[o+2];var H=e.magnitude(e.subtract(c,G,w));H>A&&(A=H);var U=e.magnitudeSquared(e.subtract(c,I,w));if(U>N){var L=Math.sqrt(U);N=(k=.5*(k+L))*k;var _=L-k;I.x=(k*I.x+_*c.x)/L,I.y=(k*I.y+_*c.y)/L,I.z=(k*I.z+_*c.z)/L}}return k<A?(e.clone(I,t.center),t.radius=k):(e.clone(G,t.center),t.radius=A),t},y.fromCornerPoints=function(r,t,c){n.typeOf.object("corner",r),n.typeOf.object("oppositeCorner",t),a(c)||(c=new y);var o=e.midpoint(r,t,c.center);return c.radius=e.distance(o,t),c},y.fromEllipsoid=function(r,t){return n.typeOf.object("ellipsoid",r),a(t)||(t=new y),e.clone(e.ZERO,t.center),t.radius=r.maximumRadius,t};var D=new e;y.fromBoundingSpheres=function(r,n){if(a(n)||(n=new y),!a(r)||0===r.length)return n.center=e.clone(e.ZERO,n.center),n.radius=0,n;var t=r.length;if(1===t)return y.clone(r[0],n);if(2===t)return y.union(r[0],r[1],n);var c,o=[];for(c=0;c<t;c++)o.push(r[c].center);var u=(n=y.fromPoints(o,n)).center,i=n.radius;for(c=0;c<t;c++){var d=r[c];i=Math.max(i,e.distance(u,d.center,D)+d.radius)}return n.radius=i,n};var T=new e,Z=new e,I=new e;y.fromOrientedBoundingBox=function(r,t){n.defined("orientedBoundingBox",r),a(t)||(t=new y);var c=r.halfAxes,o=s.getColumn(c,0,T),u=s.getColumn(c,1,Z),i=s.getColumn(c,2,I);return e.add(o,u,o),e.add(o,i,o),t.center=e.clone(r.center,t.center),t.radius=e.magnitude(o),t},y.clone=function(r,n){if(a(r))return a(n)?(n.center=e.clone(r.center,n.center),n.radius=r.radius,n):new y(r.center,r.radius)},y.packedLength=4,y.pack=function(e,r,a){n.typeOf.object("value",e),n.defined("array",r),a=t(a,0);var c=e.center;return r[a++]=c.x,r[a++]=c.y,r[a++]=c.z,r[a]=e.radius,r},y.unpack=function(e,r,c){n.defined("array",e),r=t(r,0),a(c)||(c=new y);var o=c.center;return o.x=e[r++],o.y=e[r++],o.z=e[r++],c.radius=e[r],c};var N=new e,k=new e;y.union=function(r,t,c){n.typeOf.object("left",r),n.typeOf.object("right",t),a(c)||(c=new y);var o=r.center,u=r.radius,i=t.center,d=t.radius,s=e.subtract(i,o,N),l=e.magnitude(s);if(u>=l+d)return r.clone(c),c;if(d>=l+u)return t.clone(c),c;var f=.5*(u+l+d),p=e.multiplyByScalar(s,(-u+f)/l,k);return e.add(p,o,p),e.clone(p,c.center),c.radius=f,c};var V=new e;y.expand=function(r,t,a){n.typeOf.object("sphere",r),n.typeOf.object("point",t),a=y.clone(r,a);var c=e.magnitude(e.subtract(t,a.center,V));return c>a.radius&&(a.radius=c),a},y.intersectPlane=function(r,t){n.typeOf.object("sphere",r),n.typeOf.object("plane",t);var a=r.center,c=r.radius,o=t.normal,i=e.dot(o,a)+t.distance;return i<-c?u.OUTSIDE:i<c?u.INTERSECTING:u.INSIDE},y.transform=function(e,r,t){return n.typeOf.object("sphere",e),n.typeOf.object("transform",r),a(t)||(t=new y),t.center=l.multiplyByPoint(r,e.center,t.center),t.radius=l.getMaximumScale(r)*e.radius,t};var W=new e;y.distanceSquaredTo=function(r,t){n.typeOf.object("sphere",r),n.typeOf.object("cartesian",t);var a=e.subtract(r.center,t,W);return e.magnitudeSquared(a)-r.radius*r.radius},y.transformWithoutScale=function(e,r,t){return n.typeOf.object("sphere",e),n.typeOf.object("transform",r),a(t)||(t=new y),t.center=l.multiplyByPoint(r,e.center,t.center),t.radius=e.radius,t};var G=new e;y.computePlaneDistances=function(r,t,c,o){n.typeOf.object("sphere",r),n.typeOf.object("position",t),n.typeOf.object("direction",c),a(o)||(o=new i);var u=e.subtract(r.center,t,G),d=e.dot(c,u);return o.start=d-r.radius,o.stop=d+r.radius,o};for(var A=new e,H=new e,U=new e,L=new e,_=new e,F=new r,J=new Array(8),K=0;K<8;++K)J[K]=new e;var Q=new o;return y.projectTo2D=function(r,a,c){n.typeOf.object("sphere",r);var o=(a=t(a,Q)).ellipsoid,u=r.center,i=r.radius,d=o.geodeticSurfaceNormal(u,A),s=e.cross(e.UNIT_Z,d,H);e.normalize(s,s);var l=e.cross(d,s,U);e.normalize(l,l),e.multiplyByScalar(d,i,d),e.multiplyByScalar(l,i,l),e.multiplyByScalar(s,i,s);var f=e.negate(l,_),p=e.negate(s,L),v=J,m=v[0];e.add(d,l,m),e.add(m,s,m),m=v[1],e.add(d,l,m),e.add(m,p,m),m=v[2],e.add(d,f,m),e.add(m,p,m),m=v[3],e.add(d,f,m),e.add(m,s,m),e.negate(d,d),m=v[4],e.add(d,l,m),e.add(m,s,m),m=v[5],e.add(d,l,m),e.add(m,p,m),m=v[6],e.add(d,f,m),e.add(m,p,m),m=v[7],e.add(d,f,m),e.add(m,s,m);for(var x=v.length,g=0;g<x;++g){var h=v[g];e.add(u,h,h);var z=o.cartesianToCartographic(h,F);a.project(z,h)}var w=(u=(c=y.fromPoints(v,c)).center).x,b=u.y,O=u.z;return u.x=O,u.y=w,u.z=b,c},y.isOccluded=function(e,r){return n.typeOf.object("sphere",e),n.typeOf.object("occluder",r),!r.isBoundingSphereVisible(e)},y.equals=function(r,n){return r===n||a(r)&&a(n)&&e.equals(r.center,n.center)&&r.radius===n.radius},y.prototype.intersectPlane=function(e){return y.intersectPlane(this,e)},y.prototype.distanceSquaredTo=function(e){return y.distanceSquaredTo(this,e)},y.prototype.computePlaneDistances=function(e,r,n){return y.computePlaneDistances(this,e,r,n)},y.prototype.isOccluded=function(e){return y.isOccluded(this,e)},y.prototype.equals=function(e){return y.equals(this,e)},y.prototype.clone=function(e){return y.clone(this,e)},y.prototype.volume=function(){var e=this.radius;return j*e*e*e},y.prototype.empty=function(){return this.radius<=0},y});