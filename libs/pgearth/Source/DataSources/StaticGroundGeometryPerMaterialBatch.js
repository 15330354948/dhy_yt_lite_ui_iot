define(["../Core/AssociativeArray","../Core/ColorGeometryInstanceAttribute","../Core/defined","../Core/DistanceDisplayCondition","../Core/DistanceDisplayConditionGeometryInstanceAttribute","../Core/ShowGeometryInstanceAttribute","../Core/RectangleCollisionChecker","../Scene/ClassificationType","../Scene/GroundPrimitive","../Scene/ShadowVolumeAppearance","./BoundingSphereState","./ColorMaterialProperty","./MaterialProperty","./Property"],function(t,e,i,r,s,a,o,n,h,l,p,d,u,c){"use strict";var v=new r,m=new r;function y(e,i,r,s,a,n){this.primitives=e,this.classificationType=i,this.appearanceType=r,this.materialProperty=s,this.updaters=new t,this.createPrimitive=!0,this.primitive=void 0,this.oldPrimitive=void 0,this.geometry=new t,this.material=void 0,this.updatersWithAttributes=new t,this.attributes=new t,this.invalidated=!1,this.removeMaterialSubscription=s.definitionChanged.addEventListener(y.prototype.onMaterialChanged,this),this.subscriptions=new t,this.showsUpdated=new t,this.usingSphericalTextureCoordinates=a,this.zIndex=n,this.rectangleCollisionCheck=new o}function g(t,e,i){this._items=[],this._primitives=t,this._classificationType=e,this._appearanceType=i}return y.prototype.onMaterialChanged=function(){this.invalidated=!0},y.prototype.overlapping=function(t){return this.rectangleCollisionCheck.collides(t)},y.prototype.isMaterial=function(t){var e=this.materialProperty,r=t.fillMaterialProperty;return r===e||r instanceof d&&e instanceof d||i(e)&&e.equals(r)},y.prototype.add=function(t,e,i){var r=e.id;if(this.updaters.set(r,e),this.geometry.set(r,i),this.rectangleCollisionCheck.insert(r,i.geometry.rectangle),e.hasConstantFill&&e.fillMaterialProperty.isConstant&&c.isConstant(e.distanceDisplayConditionProperty)){var s=this;this.subscriptions.set(r,e.entity.definitionChanged.addEventListener(function(t,i,r,a){"isShowing"===i&&s.showsUpdated.set(e.id,e)}))}else this.updatersWithAttributes.set(r,e);this.createPrimitive=!0},y.prototype.remove=function(t){var e=t.id,r=this.geometry.get(e);if(this.createPrimitive=this.geometry.remove(e)||this.createPrimitive,this.updaters.remove(e)){this.rectangleCollisionCheck.remove(e,r.geometry.rectangle),this.updatersWithAttributes.remove(e);var s=this.subscriptions.get(e);return i(s)&&(s(),this.subscriptions.remove(e)),!0}return!1},y.prototype.update=function(t){var e,o=!0,n=this.primitive,l=this.primitives,p=this.geometry.values;if(this.createPrimitive){if(p.length>0)i(n)&&(i(this.oldPrimitive)?l.remove(n):this.oldPrimitive=n),this.material=u.getValue(t,this.materialProperty,this.material),n=new h({show:!1,asynchronous:!0,geometryInstances:p,appearance:new this.appearanceType({material:this.material}),classificationType:this.classificationType}),l.add(n,this.zIndex),o=!1;else{i(n)&&(l.remove(n),n=void 0);var d=this.oldPrimitive;i(d)&&(l.remove(d),this.oldPrimitive=void 0)}this.attributes.removeAll(),this.primitive=n,this.createPrimitive=!1}else if(i(n)&&n.ready){n.show=!0,i(this.oldPrimitive)&&(l.remove(this.oldPrimitive),this.oldPrimitive=void 0),this.material=u.getValue(t,this.materialProperty,this.material),this.primitive.appearance.material=this.material;var y=this.updatersWithAttributes.values,g=y.length;for(e=0;e<g;e++){var f=y[e],C=f.entity,w=this.geometry.get(f.id),P=this.attributes.get(w.id.id);i(P)||(P=n.getGeometryInstanceAttributes(w.id),this.attributes.set(w.id.id,P));var b=C.isShowing&&(f.hasConstantFill||f.isFilled(t));b!==(1===P.show[0])&&(P.show=a.toValue(b,P.show));var S=f.distanceDisplayConditionProperty;if(!c.isConstant(S)){var D=c.getValueOrDefault(S,t,m,v);r.equals(D,P._lastDistanceDisplayCondition)||(P._lastDistanceDisplayCondition=r.clone(D,P._lastDistanceDisplayCondition),P.distanceDisplayCondition=s.toValue(D,P.distanceDisplayCondition))}}this.updateShows(n)}else i(n)&&!n.ready&&(o=!1);return o},y.prototype.updateShows=function(t){for(var e=this.showsUpdated.values,r=e.length,s=0;s<r;s++){var o=e[s],n=o.entity,h=this.geometry.get(o.id),l=this.attributes.get(h.id.id);i(l)||(l=t.getGeometryInstanceAttributes(h.id),this.attributes.set(h.id.id,l));var p=n.isShowing;p!==(1===l.show[0])&&(l.show=a.toValue(p,l.show),h.attributes.show.value[0]=l.show[0])}this.showsUpdated.removeAll()},y.prototype.contains=function(t){return this.updaters.contains(t.id)},y.prototype.getBoundingSphere=function(t,e){var r=this.primitive;if(!r.ready)return p.PENDING;var s=r.getGeometryInstanceAttributes(t.entity);return!i(s)||!i(s.boundingSphere)||i(s.show)&&0===s.show[0]?p.FAILED:(s.boundingSphere.clone(e),p.DONE)},y.prototype.destroy=function(){var t=this.primitive,e=this.primitives;i(t)&&e.remove(t);var r=this.oldPrimitive;i(r)&&e.remove(r),this.removeMaterialSubscription()},g.prototype.add=function(t,e){for(var i=this._items,r=i.length,s=e.createFillGeometryInstance(t),a=l.shouldUseSphericalCoordinates(s.geometry.rectangle),o=c.getValueOrDefault(e.zIndex,0),n=0;n<r;++n){var h=i[n];if(h.isMaterial(e)&&h.usingSphericalTextureCoordinates===a&&h.zIndex===o&&!h.overlapping(s.geometry.rectangle))return void h.add(t,e,s)}var p=new y(this._primitives,this._classificationType,this._appearanceType,e.fillMaterialProperty,a,o);p.add(t,e,s),i.push(p)},g.prototype.remove=function(t){for(var e=this._items,i=e.length-1;i>=0;i--){var r=e[i];if(r.remove(t)){0===r.updaters.length&&(e.splice(i,1),r.destroy());break}}},g.prototype.update=function(t){var e,i=this._items;for(e=i.length-1;e>=0;e--){var r=i[e];if(r.invalidated){i.splice(e,1);for(var s=r.updaters.values,a=s.length,o=0;o<a;o++)this.add(t,s[o]);r.destroy()}}var n=!0;for(e=0;e<i.length;e++)n=i[e].update(t)&&n;return n},g.prototype.getBoundingSphere=function(t,e){for(var i=this._items,r=i.length,s=0;s<r;s++){var a=i[s];if(a.contains(t))return a.getBoundingSphere(t,e)}return p.FAILED},g.prototype.removeAllPrimitives=function(){for(var t=this._items,e=t.length,i=0;i<e;i++)t[i].destroy();this._items.length=0},g});