define(["../Core/AttributeCompression","../Core/AxisAlignedBoundingBox","../Core/BoundingSphere","../Core/Cartesian2","../Core/Cartesian3","../Core/Cartographic","../Core/defined","../Core/Ellipsoid","../Core/IndexDatatype","../Core/Math","../Core/Matrix4","../Core/OrientedBoundingBox","../Core/TerrainEncoding","../Core/Transforms","../Core/WebMercatorProjection","./createTaskProcessorWorker"],function(e,t,r,n,i,o,a,s,c,u,d,h,I,l,m,g){"use strict";var T=32767,N=new i,y=new i,f=new i,p=new o,v=new n,x=new i,w=new d,C=new d;function b(e,t,r,n,o,a,s,c,h){var I=Number.POSITIVE_INFINITY,l=o.north,m=o.south,g=o.east,T=o.west;g<T&&(g+=u.TWO_PI);for(var y=e.length,f=0;f<y;++f){var v=e[f],x=r[v],w=n[v];p.longitude=u.lerp(T,g,w.x),p.latitude=u.lerp(m,l,w.y),p.height=x-t;var C=a.cartographicToCartesian(p,N);d.multiplyByPoint(s,C,C),i.minimumByComponent(C,c,c),i.maximumByComponent(C,h,h),I=Math.min(I,p.height)}return I}function A(t,r,n,o,s,c,h,I,g,T,y,f,b,A,E,S,M,F){var B,P,V;b?(B=s.length-1,P=-1,V=-1):(B=0,P=s.length,V=1);var _=-1,H=a(g),k=r/c.getStride(),Y=y.north,z=y.south,O=y.east,W=y.west;O<W&&(O+=u.TWO_PI);for(var G=B;G!==P;G+=V){var L=s[G],D=h[L],U=I[L];p.longitude=u.lerp(W,O,U.x)+M,p.latitude=u.lerp(z,Y,U.y)+F,p.height=D-f;var j,q=T.cartographicToCartesian(p,N);if(H){var R=2*L;if(v.x=g[R],v.y=g[R+1],1!==A){var J=e.octDecode(v.x,v.y,x),K=l.eastNorthUpToFixedFrame(N,T,C),Q=d.inverseTransformation(K,w);d.multiplyByPointAsVector(Q,J,J),J.z*=A,i.normalize(J,J),d.multiplyByPointAsVector(K,J,J),i.normalize(J,J),e.octEncode(J,v)}}c.hasWebMercatorT&&(j=(m.geodeticLatitudeToMercatorAngle(p.latitude)-E)*S),r=c.encode(t,r,q,U,p.height,v,j),-1!==_&&(n[o++]=_,n[o++]=k-1,n[o++]=L,n[o++]=k-1,n[o++]=k,n[o++]=L),_=L,++k}return o}function E(e,t){var r;return"function"==typeof e.slice&&"function"!=typeof(r=e.slice()).sort&&(r=void 0),a(r)||(r=Array.prototype.slice.call(e)),r.sort(t),r}return g(function(o,g){var S,M,F=o.quantizedVertices,B=F.length/3,P=o.octEncodedNormals,V=o.westIndices.length+o.eastIndices.length+o.southIndices.length+o.northIndices.length,_=o.includeWebMercatorT,H=o.rectangle,k=H.west,Y=H.south,z=H.east,O=H.north,W=s.clone(o.ellipsoid),G=o.exaggeration,L=o.minimumHeight*G,D=o.maximumHeight*G,U=o.relativeToCenter,j=l.eastNorthUpToFixedFrame(U,W),q=d.inverseTransformation(j,new d);_&&(S=m.geodeticLatitudeToMercatorAngle(Y),M=1/(m.geodeticLatitudeToMercatorAngle(O)-S));var R=F.subarray(0,B),J=F.subarray(B,2*B),K=F.subarray(2*B,3*B),Q=a(P),X=new Array(B),Z=new Array(B),$=new Array(B),ee=_?new Array(B):[],te=y;te.x=Number.POSITIVE_INFINITY,te.y=Number.POSITIVE_INFINITY,te.z=Number.POSITIVE_INFINITY;var re=f;re.x=Number.NEGATIVE_INFINITY,re.y=Number.NEGATIVE_INFINITY,re.z=Number.NEGATIVE_INFINITY;for(var ne=Number.POSITIVE_INFINITY,ie=Number.NEGATIVE_INFINITY,oe=Number.POSITIVE_INFINITY,ae=Number.NEGATIVE_INFINITY,se=0;se<B;++se){var ce=R[se],ue=J[se],de=ce/T,he=ue/T,Ie=u.lerp(L,D,K[se]/T);p.longitude=u.lerp(k,z,de),p.latitude=u.lerp(Y,O,he),p.height=Ie,ne=Math.min(p.longitude,ne),ie=Math.max(p.longitude,ie),oe=Math.min(p.latitude,oe),ae=Math.max(p.latitude,ae);var le=W.cartographicToCartesian(p);X[se]=new n(de,he),Z[se]=Ie,$[se]=le,_&&(ee[se]=(m.geodeticLatitudeToMercatorAngle(p.latitude)-S)*M),d.multiplyByPoint(q,le,N),i.minimumByComponent(N,te,te),i.maximumByComponent(N,re,re)}var me,ge,Te=E(o.westIndices,function(e,t){return X[e].y-X[t].y}),Ne=E(o.eastIndices,function(e,t){return X[t].y-X[e].y}),ye=E(o.southIndices,function(e,t){return X[t].x-X[e].x}),fe=E(o.northIndices,function(e,t){return X[e].x-X[t].x});1!==G&&(ge=r.fromPoints($),me=h.fromRectangle(H,L,D,W));var pe=L;pe=Math.min(pe,b(o.westIndices,o.westSkirtHeight,Z,X,H,W,q,te,re)),pe=Math.min(pe,b(o.southIndices,o.southSkirtHeight,Z,X,H,W,q,te,re)),pe=Math.min(pe,b(o.eastIndices,o.eastSkirtHeight,Z,X,H,W,q,te,re)),pe=Math.min(pe,b(o.northIndices,o.northSkirtHeight,Z,X,H,W,q,te,re));for(var ve=new t(te,re,U),xe=new I(ve,pe,D,j,Q,_),we=xe.getStride(),Ce=new Float32Array(B*we+V*we),be=0,Ae=0;Ae<B;++Ae){if(Q){var Ee=2*Ae;if(v.x=P[Ee],v.y=P[Ee+1],1!==G){var Se=e.octDecode(v.x,v.y,x),Me=l.eastNorthUpToFixedFrame($[Ae],W,C),Fe=d.inverseTransformation(Me,w);d.multiplyByPointAsVector(Fe,Se,Se),Se.z*=G,i.normalize(Se,Se),d.multiplyByPointAsVector(Me,Se,Se),i.normalize(Se,Se),e.octEncode(Se,v)}}be=xe.encode(Ce,be,$[Ae],X[Ae],Z[Ae],v,ee[Ae])}var Be=Math.max(0,2*(V-4)),Pe=o.indices.length+3*Be,Ve=c.createTypedArray(B+V,Pe);Ve.set(o.indices,0);var _e=1e-4*(ie-ne),He=1e-4*(ae-oe),ke=-_e,Ye=_e,ze=He,Oe=-He,We=B*we,Ge=o.indices.length;return Ge=A(Ce,We,Ve,Ge,o.westIndices,xe,Z,X,P,W,H,o.westSkirtHeight,!0,G,S,M,ke,0),Ge=A(Ce,We+=o.westIndices.length*we,Ve,Ge,o.southIndices,xe,Z,X,P,W,H,o.southSkirtHeight,!1,G,S,M,0,Oe),Ge=A(Ce,We+=o.southIndices.length*we,Ve,Ge,o.eastIndices,xe,Z,X,P,W,H,o.eastSkirtHeight,!1,G,S,M,Ye,0),A(Ce,We+=o.eastIndices.length*we,Ve,Ge,o.northIndices,xe,Z,X,P,W,H,o.northSkirtHeight,!0,G,S,M,0,ze),g.push(Ce.buffer,Ve.buffer),{vertices:Ce.buffer,indices:Ve.buffer,westIndicesSouthToNorth:Te,southIndicesEastToWest:ye,eastIndicesNorthToSouth:Ne,northIndicesWestToEast:fe,vertexStride:we,center:U,minimumHeight:L,maximumHeight:D,boundingSphere:ge,orientedBoundingBox:me,encoding:xe,skirtIndex:o.indices.length}})});