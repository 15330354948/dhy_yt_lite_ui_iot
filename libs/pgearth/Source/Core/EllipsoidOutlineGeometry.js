define(["./arrayFill","./BoundingSphere","./Cartesian3","./ComponentDatatype","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./Geometry","./GeometryAttribute","./GeometryAttributes","./GeometryOffsetAttribute","./IndexDatatype","./Math","./PrimitiveType"],function(t,i,e,r,o,s,n,a,f,u,d,c,p,h,l){"use strict";var v=new e(1,1,1),b=Math.cos,_=Math.sin;function y(t){t=o(t,o.EMPTY_OBJECT);var i=o(t.radii,v),r=Math.round(o(t.stackPartitions,10)),a=Math.round(o(t.slicePartitions,8)),f=Math.round(o(t.subdivisions,128));if(r<1)throw new n("options.stackPartitions cannot be less than 1");if(a<0)throw new n("options.slicePartitions cannot be less than 0");if(f<0)throw new n("options.subdivisions must be greater than or equal to zero.");if(s(t.offsetAttribute)&&t.offsetAttribute===c.TOP)throw new n("GeometryOffsetAttribute.TOP is not a supported options.offsetAttribute for this geometry.");this._radii=e.clone(i),this._stackPartitions=r,this._slicePartitions=a,this._subdivisions=f,this._offsetAttribute=t.offsetAttribute,this._workerName="createEllipsoidOutlineGeometry"}y.packedLength=e.packedLength+4,y.pack=function(t,i,r){if(!s(t))throw new n("value is required");if(!s(i))throw new n("array is required");return r=o(r,0),e.pack(t._radii,i,r),r+=e.packedLength,i[r++]=t._stackPartitions,i[r++]=t._slicePartitions,i[r++]=t._subdivisions,i[r]=o(t._offsetAttribute,-1),i};var w=new e,P={radii:w,stackPartitions:void 0,slicePartitions:void 0,subdivisions:void 0,offsetAttribute:void 0};return y.unpack=function(t,i,r){if(!s(t))throw new n("array is required");i=o(i,0);var a=e.unpack(t,i,w);i+=e.packedLength;var f=t[i++],u=t[i++],d=t[i++],c=t[i];return s(r)?(r._radii=e.clone(a,r._radii),r._stackPartitions=f,r._slicePartitions=u,r._subdivisions=d,r._offsetAttribute=-1===c?void 0:c,r):(P.stackPartitions=f,P.slicePartitions=u,P.subdivisions=d,P.offsetAttribute=-1===c?void 0:c,new y(P))},y.createGeometry=function(e){var o=e._radii;if(!(o.x<=0||o.y<=0||o.z<=0)){var n,v,y,w,P,A,m=a.fromCartesian3(o),k=e._stackPartitions,g=e._slicePartitions,E=e._subdivisions,O=E*(k+g-1),T=O-g+2,M=new Float64Array(3*T),G=p.createTypedArray(T,2*O),D=0,I=new Array(E),z=new Array(E);for(n=0;n<E;n++)y=h.TWO_PI*n/E,I[n]=b(y),z[n]=_(y);for(n=1;n<k;n++)for(w=Math.PI*n/k,P=b(w),A=_(w),v=0;v<E;v++)M[D++]=o.x*I[v]*A,M[D++]=o.y*z[v]*A,M[D++]=o.z*P;for(I.length=g,z.length=g,n=0;n<g;n++)y=h.TWO_PI*n/g,I[n]=b(y),z[n]=_(y);for(M[D++]=0,M[D++]=0,M[D++]=o.z,n=1;n<E;n++)for(w=Math.PI*n/E,P=b(w),A=_(w),v=0;v<g;v++)M[D++]=o.x*I[v]*A,M[D++]=o.y*z[v]*A,M[D++]=o.z*P;for(M[D++]=0,M[D++]=0,M[D++]=-o.z,D=0,n=0;n<k-1;++n){var L=n*E;for(v=0;v<E-1;++v)G[D++]=L+v,G[D++]=L+v+1;G[D++]=L+E-1,G[D++]=L}var N=E*(k-1);for(v=1;v<g+1;++v)G[D++]=N,G[D++]=N+v;for(n=0;n<E-2;++n){var q=n*g+1+N,x=(n+1)*g+1+N;for(v=0;v<g-1;++v)G[D++]=x+v,G[D++]=q+v;G[D++]=x+g-1,G[D++]=q+g-1}var B=M.length/3-1;for(v=B-1;v>B-g-1;--v)G[D++]=B,G[D++]=v;var C=new d({position:new u({componentDatatype:r.DOUBLE,componentsPerAttribute:3,values:M})});if(s(e._offsetAttribute)){var S=M.length,U=new Uint8Array(S/3),F=e._offsetAttribute===c.NONE?0:1;t(U,F),C.applyOffset=new u({componentDatatype:r.UNSIGNED_BYTE,componentsPerAttribute:1,values:U})}return new f({attributes:C,indices:G,primitiveType:l.LINES,boundingSphere:i.fromEllipsoid(m),offsetAttribute:e._offsetAttribute})}},y});