define(["../Core/BoundingSphere","../Core/Cartesian3","../Core/Cartographic","../Core/Check","../Core/ColorGeometryInstanceAttribute","../Core/defaultValue","../Core/defineProperties","../Core/Ellipsoid","../Core/GeometryInstance","../Core/IntersectionTests","../Core/Matrix4","../Core/OrientedBoundingBox","../Core/Plane","../Core/Ray","../Core/Rectangle","../Core/RectangleOutlineGeometry","./PerInstanceColorAppearance","./Primitive","./SceneMode"],function(e,t,r,o,n,a,i,s,h,c,m,u,l,g,C,d,p,w,f){"use strict";function N(r){o.typeOf.object("options",r),o.typeOf.object("options.rectangle",r.rectangle),this.rectangle=C.clone(r.rectangle),this.minimumHeight=a(r.minimumHeight,0),this.maximumHeight=a(r.maximumHeight,0),this.southwestCornerCartesian=new t,this.northeastCornerCartesian=new t,this.westNormal=new t,this.southNormal=new t,this.eastNormal=new t,this.northNormal=new t;var n=a(r.ellipsoid,s.WGS84);!function(e,r,o){o.cartographicToCartesian(C.southwest(r),e.southwestCornerCartesian),o.cartographicToCartesian(C.northeast(r),e.northeastCornerCartesian),b.longitude=r.west,b.latitude=.5*(r.south+r.north),b.height=0;var n=o.cartographicToCartesian(b,B),a=t.cross(n,t.UNIT_Z,v);t.normalize(a,e.westNormal),b.longitude=r.east;var i=o.cartographicToCartesian(b,S),s=t.cross(t.UNIT_Z,i,v);t.normalize(s,e.eastNormal);var h,m=t.subtract(n,i,v),u=t.normalize(m,T),g=r.south;if(g>0){b.longitude=.5*(r.west+r.east),b.latitude=g;var d=o.cartographicToCartesian(b,P.origin);t.clone(u,P.direction);var p=l.fromPointNormal(e.southwestCornerCartesian,e.westNormal,I);c.rayPlane(P,p,e.southwestCornerCartesian),h=o.geodeticSurfaceNormal(d,x)}else h=o.geodeticSurfaceNormalCartographic(C.southeast(r),x);var w=t.cross(h,m,y);t.normalize(w,e.southNormal);var f,N=r.north;if(N<0){b.longitude=.5*(r.west+r.east),b.latitude=N;var H=o.cartographicToCartesian(b,P.origin);t.negate(u,P.direction);var _=l.fromPointNormal(e.northeastCornerCartesian,e.eastNormal,I);c.rayPlane(P,_,e.northeastCornerCartesian),f=o.geodeticSurfaceNormal(H,x)}else f=o.geodeticSurfaceNormalCartographic(C.northwest(r),x);var z=t.cross(m,f,y);t.normalize(z,e.northNormal)}(this,r.rectangle,n),a(r.computeBoundingVolumes,!0)&&(this._orientedBoundingBox=u.fromRectangle(this.rectangle,this.minimumHeight,this.maximumHeight,n),this._boundingSphere=e.fromOrientedBoundingBox(this._orientedBoundingBox))}i(N.prototype,{boundingVolume:{get:function(){return this._orientedBoundingBox}},boundingSphere:{get:function(){return this._boundingSphere}}});var v=new t,x=new t,y=new t,T=new t,B=new t,S=new t,b=new r,I=new l(t.UNIT_X,0),P=new g;var H=new t,_=new t,z=new t(0,-1,0),j=new t(0,0,-1),E=new t;return N.prototype.distanceToCamera=function(e){o.defined("frameState",e);var r,n,a,i=e.camera,s=i.positionWC,h=i.positionCartographic,c=0;if(!C.contains(this.rectangle,h)){var m=this.southwestCornerCartesian,u=this.northeastCornerCartesian,l=this.westNormal,g=this.southNormal,d=this.eastNormal,p=this.northNormal;e.mode!==f.SCENE3D&&((m=e.mapProjection.project(C.southwest(this.rectangle),H)).z=m.y,m.y=m.x,m.x=0,(u=e.mapProjection.project(C.northeast(this.rectangle),_)).z=u.y,u.y=u.x,u.x=0,l=z,d=t.UNIT_Y,g=j,p=t.UNIT_Z);var w=t.subtract(s,m,E),N=t.dot(w,l),v=t.dot(w,g),x=t.subtract(s,u,E),y=t.dot(x,d),T=t.dot(x,p);N>0?c+=N*N:y>0&&(c+=y*y),v>0?c+=v*v:T>0&&(c+=T*T)}if(e.mode===f.SCENE3D?(r=h.height,n=this.minimumHeight,a=this.maximumHeight):(r=s.x,n=0,a=0),r>a){var B=r-a;c+=B*B}else if(r<n){var S=n-r;c+=S*S}return Math.sqrt(c)},N.prototype.intersectPlane=function(e){return o.defined("plane",e),this._orientedBoundingBox.intersectPlane(e)},N.prototype.createDebugVolume=function(e){o.defined("color",e);var t=new m.clone(m.IDENTITY),r=new d({rectangle:this.rectangle,height:this.minimumHeight,extrudedHeight:this.maximumHeight}),a=new h({geometry:r,id:"outline",modelMatrix:t,attributes:{color:n.fromColor(e)}});return new w({geometryInstances:a,appearance:new p({translucent:!1,flat:!0}),asynchronous:!1})},N});