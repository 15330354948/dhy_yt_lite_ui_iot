define(["../Core/Check","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/RuntimeError","./AutomaticUniforms","./ContextLimits","./createUniform","./createUniformArray"],function(e,r,t,a,o,n,i,s,m,h,u){"use strict";var f=0;function l(e){var r=function(e,r){var t={};if(!m.highpFloatSupported||!m.highpIntSupported){var a,o,n,i,s=d(e),h=d(r),u=s.length,f=h.length;for(a=0;a<u;a++)for(o=0;o<f;o++)if(s[a]===h[o]){n=s[a],i="czm_mediump_"+n;var l=new RegExp(n+"\\b","g");r=r.replace(l,i),t[i]=n}}return{fragmentShaderText:r,duplicateUniformNames:t}}(e.vertexShaderText,e.fragmentShaderText);this._gl=e.gl,this._logShaderCompilation=e.logShaderCompilation,this._debugShaders=e.debugShaders,this._attributeLocations=e.attributeLocations,this._program=void 0,this._numberOfVertexAttributes=void 0,this._vertexAttributes=void 0,this._uniformsByName=void 0,this._uniforms=void 0,this._automaticUniforms=void 0,this._manualUniforms=void 0,this._duplicateUniformNames=r.duplicateUniformNames,this._cachedShader=void 0,this.maximumTextureUnitIndex=void 0,this._vertexShaderSource=e.vertexShaderSource,this._vertexShaderText=e.vertexShaderText,this._fragmentShaderSource=e.fragmentShaderSource,this._fragmentShaderText=r.fragmentShaderText,this.id=f++}function d(e){var r=[],a=e.match(/uniform.*?(?![^{]*})(?=[=\[;])/g);if(t(a))for(var o=a.length,n=0;n<o;n++){var i=a[n].trim(),s=i.slice(i.lastIndexOf(" ")+1);r.push(s)}return r}l.fromCache=function(t){return t=r(t,r.EMPTY_OBJECT),e.defined("options.context",t.context),t.context.shaderCache.getShaderProgram(t)},l.replaceCache=function(t){return t=r(t,r.EMPTY_OBJECT),e.defined("options.context",t.context),t.context.shaderCache.replaceShaderProgram(t)},a(l.prototype,{vertexShaderSource:{get:function(){return this._vertexShaderSource}},fragmentShaderSource:{get:function(){return this._fragmentShaderSource}},vertexAttributes:{get:function(){return c(this),this._vertexAttributes}},numberOfVertexAttributes:{get:function(){return c(this),this._numberOfVertexAttributes}},allUniforms:{get:function(){return c(this),this._uniformsByName}}});var g="[PGEarth WebGL] ";function c(e){if(!t(e._program)){var r=e._gl,a=function(e,r){var a=r._vertexShaderText,o=r._fragmentShaderText,n=e.createShader(e.VERTEX_SHADER);e.shaderSource(n,a),e.compileShader(n);var s=e.createShader(e.FRAGMENT_SHADER);e.shaderSource(s,o),e.compileShader(s);var m=e.createProgram();e.attachShader(m,n),e.attachShader(m,s),e.deleteShader(n),e.deleteShader(s);var h,u=r._attributeLocations;if(t(u))for(var f in u)u.hasOwnProperty(f)&&e.bindAttribLocation(m,u[f],f);if(e.linkProgram(m),!e.getProgramParameter(m,e.LINK_STATUS)){var l=r._debugShaders;if(!e.getShaderParameter(s,e.COMPILE_STATUS)){if(h=e.getShaderInfoLog(s),console.error(g+"Fragment shader compile log: "+h),t(l)){var d=l.getTranslatedShaderSource(s);""!==d?console.error(g+"Translated fragment shader source:\n"+d):console.error(g+"Fragment shader translation failed.")}throw e.deleteProgram(m),new i("Fragment shader failed to compile.  Compile log: "+h)}if(!e.getShaderParameter(n,e.COMPILE_STATUS)){if(h=e.getShaderInfoLog(n),console.error(g+"Vertex shader compile log: "+h),t(l)){var c=l.getTranslatedShaderSource(n);""!==c?console.error(g+"Translated vertex shader source:\n"+c):console.error(g+"Vertex shader translation failed.")}throw e.deleteProgram(m),new i("Vertex shader failed to compile.  Compile log: "+h)}throw h=e.getProgramInfoLog(m),console.error(g+"Shader program link log: "+h),t(l)&&(console.error(g+"Translated vertex shader source:\n"+l.getTranslatedShaderSource(n)),console.error(g+"Translated fragment shader source:\n"+l.getTranslatedShaderSource(s))),e.deleteProgram(m),new i("Program failed to link.  Link log: "+h)}var S=r._logShaderCompilation;return S&&(h=e.getShaderInfoLog(n),t(h)&&h.length>0&&console.log(g+"Vertex shader compile log: "+h)),S&&(h=e.getShaderInfoLog(s),t(h)&&h.length>0&&console.log(g+"Fragment shader compile log: "+h)),S&&(h=e.getProgramInfoLog(m),t(h)&&h.length>0&&console.log(g+"Shader program link log: "+h)),m}(r,e,e._debugShaders),o=r.getProgramParameter(a,r.ACTIVE_ATTRIBUTES),n=function(e,r){for(var a={},o=[],n=[],i=e.getProgramParameter(r,e.ACTIVE_UNIFORMS),s=0;s<i;++s){var m=e.getActiveUniform(r,s),f=-1!==m.name.indexOf("[0]",m.name.length-"[0]".length)?m.name.slice(0,m.name.length-3):m.name;if(0!==f.indexOf("gl_"))if(m.name.indexOf("[")<0){var l=e.getUniformLocation(r,f);if(null!==l){var d=h(e,m,f,l);a[f]=d,o.push(d),d._setSampler&&n.push(d)}}else{var g,c,S,p,v=f.indexOf("[");if(v>=0){if(g=a[f.slice(0,v)],!t(g))continue;(c=g._locations).length<=1&&(S=g.value,null!==(p=e.getUniformLocation(r,f))&&(c.push(p),S.push(e.getUniform(r,p))))}else{c=[];for(var _=0;_<m.size;++_)null!==(p=e.getUniformLocation(r,f+"["+_+"]"))&&c.push(p);g=u(e,m,f,c),a[f]=g,o.push(g),g._setSampler&&n.push(g)}}}return{uniformsByName:a,uniforms:o,samplerUniforms:n}}(r,a),m=function(e,r){var a=[],o=[];for(var n in r)if(r.hasOwnProperty(n)){var i=r[n],m=n,h=e._duplicateUniformNames[m];t(h)&&(i.name=h,m=h);var u=s[m];t(u)?a.push({uniform:i,automaticUniform:u}):o.push(i)}return{automaticUniforms:a,manualUniforms:o}}(e,n.uniformsByName);e._program=a,e._numberOfVertexAttributes=o,e._vertexAttributes=function(e,r,t){for(var a={},o=0;o<t;++o){var n=e.getActiveAttrib(r,o),i=e.getAttribLocation(r,n.name);a[n.name]={name:n.name,type:n.type,index:i}}return a}(r,a,o),e._uniformsByName=n.uniformsByName,e._uniforms=n.uniforms,e._automaticUniforms=m.automaticUniforms,e._manualUniforms=m.manualUniforms,e.maximumTextureUnitIndex=function(e,r,t){e.useProgram(r);for(var a=0,o=t.length,n=0;n<o;++n)a=t[n]._setSampler(a);return e.useProgram(null),a}(r,a,n.samplerUniforms)}}return l.prototype._bind=function(){c(this),this._gl.useProgram(this._program)},l.prototype._setUniforms=function(e,r,a){var o,i;if(t(e)){var s=this._manualUniforms;for(o=s.length,i=0;i<o;++i){var m=s[i];m.value=e[m.name]()}}var h=this._automaticUniforms;for(o=h.length,i=0;i<o;++i){var u=h[i];u.uniform.value=u.automaticUniform.getValue(r)}var f=this._uniforms;for(o=f.length,i=0;i<o;++i)f[i].set();if(a){var l=this._gl,d=this._program;if(l.validateProgram(d),!l.getProgramParameter(d,l.VALIDATE_STATUS))throw new n("Program validation failed.  Program info log: "+l.getProgramInfoLog(d))}},l.prototype.isDestroyed=function(){return!1},l.prototype.destroy=function(){this._cachedShader.cache.releaseShaderProgram(this)},l.prototype.finalDestroy=function(){return this._gl.deleteProgram(this._program),o(this)},l});