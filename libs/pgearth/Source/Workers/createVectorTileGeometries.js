define(["../Core/BoundingSphere","../Core/BoxGeometry","../Core/Cartesian3","../Core/Color","../Core/CylinderGeometry","../Core/defined","../Core/EllipsoidGeometry","../Core/IndexDatatype","../Core/Matrix4","../Scene/Vector3DTileBatch","./createTaskProcessorWorker"],function(e,n,t,r,a,i,o,s,d,c,l){"use strict";var u=new t,f=d.packedLength+t.packedLength,h=d.packedLength+2,p=d.packedLength+t.packedLength,b=t.packedLength+1,v={modelMatrix:new d,boundingVolume:new e};function g(e,n){var r=n*f,a=t.unpack(e,r,u);r+=t.packedLength;var i=d.unpack(e,r,v.modelMatrix);d.multiplyByScale(i,a,i);var o=v.boundingVolume;return t.clone(t.ZERO,o.center),o.radius=Math.sqrt(3),v}function y(e,n){var r=n*h,a=e[r++],i=e[r++],o=t.fromElements(a,a,i,u),s=d.unpack(e,r,v.modelMatrix);d.multiplyByScale(s,o,s);var c=v.boundingVolume;return t.clone(t.ZERO,c.center),c.radius=Math.sqrt(2),v}function m(e,n){var r=n*p,a=t.unpack(e,r,u);r+=t.packedLength;var i=d.unpack(e,r,v.modelMatrix);d.multiplyByScale(i,a,i);var o=v.boundingVolume;return t.clone(t.ZERO,o.center),o.radius=1,v}function x(e,n){var r=n*b,a=e[r++],i=t.unpack(e,r,u),o=d.fromTranslation(i,v.modelMatrix);d.multiplyByUniformScale(o,a,o);var s=v.boundingVolume;return t.clone(t.ZERO,s.center),s.radius=1,v}var k=new t;function I(n,a,o,s,l){if(i(a)){for(var u=o.length,f=s.attributes.position.values,h=s.indices,p=n.positions,b=n.vertexBatchIds,v=n.indices,g=n.batchIds,y=n.batchTableColors,m=n.batchedIndices,x=n.indexOffsets,I=n.indexCounts,w=n.boundingVolumes,B=n.modelMatrix,A=n.center,C=n.positionOffset,O=n.batchIdIndex,L=n.indexOffset,U=n.batchedIndicesOffset,E=0;E<u;++E){var M=l(a,E),T=M.modelMatrix;d.multiply(B,T,T);for(var V=o[E],F=f.length,S=0;S<F;S+=3){var R=t.unpack(f,S,k);d.multiplyByPoint(T,R,R),t.subtract(R,A,R),t.pack(R,p,3*C+S),b[O++]=V}for(var Z=h.length,G=0;G<Z;++G)v[L+G]=h[G]+C;var P=E+U;m[P]=new c({offset:L,count:Z,color:r.fromRgba(y[V]),batchIds:[V]}),g[P]=V,x[P]=L,I[P]=Z,w[P]=e.transform(M.boundingVolume,T),C+=F/3,L+=Z}n.positionOffset=C,n.batchIdIndex=O,n.indexOffset=L,n.batchedIndicesOffset+=u}}var w=new t,B=new d;function A(n,t,a){var i=a.length,o=2+i*e.packedLength+1+function(e){for(var n=e.length,t=0,a=0;a<n;++a)t+=r.packedLength+3+e[a].batchIds.length;return t}(t),s=new Float64Array(o),d=0;s[d++]=n,s[d++]=i;for(var c=0;c<i;++c)e.pack(a[c],s,d),d+=e.packedLength;var l=t.length;s[d++]=l;for(var u=0;u<l;++u){var f=t[u];r.pack(f.color,s,d),d+=r.packedLength,s[d++]=f.offset,s[d++]=f.count;var h=f.batchIds,p=h.length;s[d++]=p;for(var b=0;b<p;++b)s[d++]=h[b]}return s}return l(function(e,r){var c=i(e.boxes)?new Float32Array(e.boxes):void 0,l=i(e.boxBatchIds)?new Uint16Array(e.boxBatchIds):void 0,u=i(e.cylinders)?new Float32Array(e.cylinders):void 0,f=i(e.cylinderBatchIds)?new Uint16Array(e.cylinderBatchIds):void 0,h=i(e.ellipsoids)?new Float32Array(e.ellipsoids):void 0,p=i(e.ellipsoidBatchIds)?new Uint16Array(e.ellipsoidBatchIds):void 0,b=i(e.spheres)?new Float32Array(e.spheres):void 0,v=i(e.sphereBatchIds)?new Uint16Array(e.sphereBatchIds):void 0,k=i(c)?l.length:0,C=i(u)?f.length:0,O=i(h)?p.length:0,L=i(b)?v.length:0,U=n.getUnitBox(),E=a.getUnitCylinder(),M=o.getUnitEllipsoid(),T=U.attributes.position.values,V=E.attributes.position.values,F=M.attributes.position.values,S=T.length*k;S+=V.length*C,S+=F.length*(O+L);var R=U.indices,Z=E.indices,G=M.indices,P=R.length*k;P+=Z.length*C,P+=G.length*(O+L);var q=new Float32Array(S),D=new Uint16Array(S/3),_=s.createTypedArray(S/3,P),N=k+C+O+L,W=new Uint16Array(N),Y=new Array(N),j=new Uint32Array(N),z=new Uint32Array(N),H=new Array(N);!function(e){var n=new Float64Array(e),r=0;t.unpack(n,r,w),r+=t.packedLength,d.unpack(n,r,B)}(e.packedBuffer);var J={batchTableColors:new Uint32Array(e.batchTableColors),positions:q,vertexBatchIds:D,indices:_,batchIds:W,batchedIndices:Y,indexOffsets:j,indexCounts:z,boundingVolumes:H,positionOffset:0,batchIdIndex:0,indexOffset:0,batchedIndicesOffset:0,modelMatrix:B,center:w};I(J,c,l,U,g),I(J,u,f,E,y),I(J,h,p,M,m),I(J,b,v,M,x);var K=A(_.BYTES_PER_ELEMENT,Y,H);return r.push(q.buffer,D.buffer,_.buffer),r.push(W.buffer,j.buffer,z.buffer),r.push(K.buffer),{positions:q.buffer,vertexBatchIds:D.buffer,indices:_.buffer,indexOffsets:j.buffer,indexCounts:z.buffer,batchIds:W.buffer,packedBuffer:K.buffer}})});