define(["../Core/Cartesian3","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/Ellipsoid","../Core/FeatureDetection","../Core/getMagic","../Core/getStringFromTypedArray","../Core/Math","../Core/Matrix4","../Core/Rectangle","../Core/RuntimeError","../ThirdParty/when","./PGEarth3DTileBatchTable","./Vector3DTilePoints","./Vector3DTilePolygons","./Vector3DTilePolylines"],function(t,e,i,n,r,s,o,a,l,h,y,_,p,f,u,g,b,c,d){"use strict";if(!a.supportsTypedArrays())return{};function T(n,r,s,a,l){this._tileset=n,this._tile=r,this._resource=s,this._polygons=void 0,this._polylines=void 0,this._points=void 0,this._contentReadyPromise=void 0,this._readyPromise=u.defer(),this._batchTable=void 0,this._features=void 0,this.featurePropertiesDirty=!1,function(n,r,s){s=e(s,0);var a=new Uint8Array(r),l=new DataView(r);s+=m;var u=l.getUint32(s,!0);if(1!==u)throw new f("Only Vector tile version 1 is supported.  Version "+u+" is not.");s+=m;var T=l.getUint32(s,!0);if(s+=m,0===T)return void n._readyPromise.resolve(n);var v=l.getUint32(s,!0);if(s+=m,0===v)throw new f("Feature table must have a byte length greater than zero");var L=l.getUint32(s,!0);s+=m;var P=l.getUint32(s,!0);s+=m;var N=l.getUint32(s,!0);s+=m;var w=l.getUint32(s,!0);s+=m;var E=l.getUint32(s,!0);s+=m;var I=l.getUint32(s,!0);s+=m;var U=l.getUint32(s,!0),A=h(a,s+=m,v),C=JSON.parse(A);s+=v;var S,H,G=new Uint8Array(r,s,L);if(s+=L,P>0){var D=h(a,s,P);S=JSON.parse(D),s+=P,N>0&&(H=new Uint8Array(r,s,N),H=new Uint8Array(H),s+=N)}var M,Y,B,R=e(C.POLYGONS_LENGTH,0),V=e(C.POLYLINES_LENGTH,0),x=e(C.POINTS_LENGTH,0),F=R+V+x,W=new g(n,F,S,H,function(t){return function(e,n){i(t._polygons)&&t._polygons.updateCommands(e,n)}}(n));if(n._batchTable=W,0===F)return;if(!i(C.REGION))throw new f("REGION is required in the feature table.");var z=C.REGION;M=p.unpack(z),Y=z[4],B=z[5];var X,k=n._tile.computedTransform;i(C.RTC_CENTER)?(X=t.unpack(C.RTC_CENTER),_.multiplyByPoint(k,X,X)):((X=p.center(M)).height=y.lerp(Y,B,.5),X=o.WGS84.cartographicToCartesian(X));var q=function(t,n){var r,s,o,a,l=e(t.POLYGONS_LENGTH,0),h=e(t.POLYLINES_LENGTH,0),y=e(t.POINTS_LENGTH,0);if(l>0&&i(t.POLYGON_BATCH_IDS)){var _=n.byteOffset+t.POLYGON_BATCH_IDS.byteOffset;r=new Uint16Array(n.buffer,_,l)}if(h>0&&i(t.POLYLINE_BATCH_IDS)){var p=n.byteOffset+t.POLYLINE_BATCH_IDS.byteOffset;s=new Uint16Array(n.buffer,p,h)}if(y>0&&i(t.POINT_BATCH_IDS)){var u=n.byteOffset+t.POINT_BATCH_IDS.byteOffset;o=new Uint16Array(n.buffer,u,y)}var g=i(r)||i(s)||i(o),b=l>0&&!i(r)||h>0&&!i(s)||y>0&&!i(o);if(g&&b)throw new f("If one group of batch ids is defined, then all batch ids must be defined.");if(!i(r)&&!i(s)&&!i(o)){var c=0;if(!i(r)&&l>0)for(r=new Uint16Array(l),a=0;a<l;++a)r[a]=c++;if(!i(s)&&h>0)for(s=new Uint16Array(h),a=0;a<h;++a)s[a]=c++;if(!i(o)&&y>0)for(o=new Uint16Array(y),a=0;a<y;++a)o[a]=c++}return{polygons:r,polylines:s,points:o}}(C,G);if(s+=s%4,R>0){var J=new Uint32Array(r,s,w/m);s+=w;var j=new Uint16Array(r,s,E/O);s+=E;var K,Q,Z=G.byteOffset+C.POLYGON_COUNT.byteOffset,$=new Uint32Array(G.buffer,Z,R),tt=G.byteOffset+C.POLYGON_INDEX_COUNT.byteOffset,et=new Uint32Array(G.buffer,tt,R);if(i(C.POLYGON_MINIMUM_HEIGHTS)&&i(C.POLYGON_MAXIMUM_HEIGHTS)){var it=G.byteOffset+C.POLYGON_MINIMUM_HEIGHTS.byteOffset;K=new Float32Array(G.buffer,it,R);var nt=G.byteOffset+C.POLYGON_MAXIMUM_HEIGHTS.byteOffset;Q=new Float32Array(G.buffer,nt,R)}n._polygons=new c({positions:j,counts:$,indexCounts:et,indices:J,minimumHeight:Y,maximumHeight:B,polygonMinimumHeights:K,polygonMaximumHeights:Q,center:X,rectangle:M,boundingVolume:n.tile.boundingVolume.boundingVolume,batchTable:W,batchIds:q.polygons,modelMatrix:k})}if(V>0){var rt=new Uint16Array(r,s,I/O);s+=I;var st,ot=G.byteOffset+C.POLYLINE_COUNT.byteOffset,at=new Uint32Array(G.buffer,ot,V);if(i(C.POLYLINE_WIDTHS)){var lt=G.byteOffset+C.POLYLINE_WIDTHS.byteOffset;st=new Uint16Array(G.buffer,lt,V)}else{st=new Uint16Array(V);for(var ht=0;ht<V;++ht)st[ht]=2}n._polylines=new d({positions:rt,widths:st,counts:at,batchIds:q.polylines,minimumHeight:Y,maximumHeight:B,center:X,rectangle:M,boundingVolume:n.tile.boundingVolume.boundingVolume,batchTable:W})}if(x>0){var yt=new Uint16Array(r,s,U/O);n._points=new b({positions:yt,batchIds:q.points,minimumHeight:Y,maximumHeight:B,rectangle:M,batchTable:W})}}(this,a,l)}n(T.prototype,{featuresLength:{get:function(){return i(this._batchTable)?this._batchTable.featuresLength:0}},pointsLength:{get:function(){return i(this._points)?this._points.pointsLength:0}},trianglesLength:{get:function(){var t=0;return i(this._polygons)&&(t+=this._polygons.trianglesLength),i(this._polylines)&&(t+=this._polylines.trianglesLength),t}},geometryByteLength:{get:function(){var t=0;return i(this._polygons)&&(t+=this._polygons.geometryByteLength),i(this._polylines)&&(t+=this._polylines.geometryByteLength),t}},texturesByteLength:{get:function(){return i(this._points)?this._points.texturesByteLength:0}},batchTableByteLength:{get:function(){return i(this._batchTable)?this._batchTable.memorySizeInBytes:0}},innerContents:{get:function(){}},readyPromise:{get:function(){return this._readyPromise.promise}},tileset:{get:function(){return this._tileset}},tile:{get:function(){return this._tile}},url:{get:function(){return this._resource.getUrlComponent(!0)}},batchTable:{get:function(){return this._batchTable}}});var O=Uint16Array.BYTES_PER_ELEMENT,m=Uint32Array.BYTES_PER_ELEMENT;function v(t){var e=t.featuresLength;if(!i(t._features)&&e>0){var n=new Array(e);i(t._polygons)&&t._polygons.createFeatures(t,n),i(t._polylines)&&t._polylines.createFeatures(t,n),i(t._points)&&t._points.createFeatures(t,n),t._features=n}}return T.prototype.hasProperty=function(t,e){return this._batchTable.hasProperty(t,e)},T.prototype.getFeature=function(t){var e=this.featuresLength;if(!i(t)||t<0||t>=e)throw new s("batchId is required and between zero and featuresLength - 1 ("+(e-1)+").");return v(this),this._features[t]},T.prototype.applyDebugSettings=function(t,e){i(this._polygons)&&this._polygons.applyDebugSettings(t,e),i(this._polylines)&&this._polylines.applyDebugSettings(t,e),i(this._points)&&this._points.applyDebugSettings(t,e)},T.prototype.applyStyle=function(t){v(this),i(this._polygons)&&this._polygons.applyStyle(t,this._features),i(this._polylines)&&this._polylines.applyStyle(t,this._features),i(this._points)&&this._points.applyStyle(t,this._features)},T.prototype.update=function(t,e){var n=!0;if(i(this._polygons)&&(this._polygons.classificationType=this._tileset.classificationType,this._polygons.debugWireframe=this._tileset.debugWireframe,this._polygons.update(e),n=n&&this._polygons._ready),i(this._polylines)&&(this._polylines.update(e),n=n&&this._polylines._ready),i(this._points)&&(this._points.update(e),n=n&&this._points._ready),i(this._batchTable)&&n&&this._batchTable.update(t,e),!i(this._contentReadyPromise)){var r=i(this._points)?this._points.readyPromise:void 0,s=i(this._polygons)?this._polygons.readyPromise:void 0,o=i(this._polylines)?this._polylines.readyPromise:void 0,a=this;this._contentReadyPromise=u.all([r,s,o]).then(function(){a._readyPromise.resolve(a)})}},T.prototype.isDestroyed=function(){return!1},T.prototype.destroy=function(){return this._polygons=this._polygons&&this._polygons.destroy(),this._polylines=this._polylines&&this._polylines.destroy(),this._points=this._points&&this._points.destroy(),this._batchTable=this._batchTable&&this._batchTable.destroy(),r(this)},T});