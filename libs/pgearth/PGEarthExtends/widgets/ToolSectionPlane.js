define(["../layers/GraphicsLayer","../others/EventDrive","../symbols/TextSymbol","../symbols/PrimitiveSymbol","../Graphic","../../Source/Core/Color","../../Source/Core/Ellipsoid","../../Source/Core/Cartesian2","../../Source/Core/Cartesian3"],function(e,i,t,s,h,o,n,r,l){function a(t){this.viewer=t.viewer,this.layer=new e,this.path=[],this.height=[],this.lines=null,this.label=[],this.screenPoints=[],this.point=this.viewer.entities.add({point:{color:o.RED,pixelSize:10}}),this.event=new i({viewer:this.viewer,eventType:"left_click",callBack:e=>{4==this.path.length&&(this.path=[],this.screenPoints=[],this.height=[],this.viewer.map.remove(this.lines),this.label.forEach(e=>this.viewer.map.remove(e)),this.label=[]);let i=this.path,o=this.screenPoints,a=this.movePoint.longitude,c=this.movePoint.latitude,p=this.movePoint.height;if(p<-50)return;i.push(a,c),this.screenPoints.push(e.screenPoint.x,e.screenPoint.y),this.height.push(p);i.length;let v=new h({symbol:{type:"point-3d",style:{type:"cone",height:600,width:300,color:"#4af99d"}},geometry:{type:"point",longitude:a,latitude:c,height:p+300}}),u=new s({type:"circle",center:[a,c],radius:1,color:"#4af99d",class:"both"}),d=new s({type:"line",ranges:i,color:"red",width:2,class:"both"});if(this.layer.add(v),this.label.push(u),this.lines=d,this.viewer.map.add(d),this.viewer.map.add(u),4==this.screenPoints.length){let e=this.viewer.scene,i=o[0],s=o[1],h=o[2],a=o[3],c=50,p=Math.abs(i-h)/c,v=Math.abs(s-a)/c,u=null,d=null,m=null,w=[];i<h?(u=i,d=s,m=a):(u=h,d=a,m=s);for(let i=1;i<=c;i++){let t,s,h,o=new r(u+p*i,d-m>0?d-v*i:d+v*i);if(e.pick(o)){if(h=e.pickPosition(o),t=e.pickPosition(new r(u,d)),!h)return;s=this.viewer.scene.globe.ellipsoid.cartesianToCartographic(h)}else{let i=e.camera.getPickRay(o);h=e.globe.pick(i,e),t=e.globe.pick(e.camera.getPickRay(new r(u,d)),e),s=n.WGS84.cartesianToCartographic(h)}let a=Math.sqrt(l.distanceSquared(h,t));w.push({distance:a,height:s.height<0?0:s.height})}t.callBack&&t.callBack(w)}this.viewer.scene.requestRenderMode=!1}}),this.mouseMove=new i({eventType:"mouse_move",viewer:t.viewer,callBack:e=>{this.movePoint=e.mapPoint,this.point&&(this.point.position=e.cartesian)}})}return a.prototype.destroy=function(){this.viewer.entities.remove(this.labelTotle),this.viewer.entities.remove(this.point),this.label.forEach(e=>this.viewer.map.remove(e)),this.viewer.map.remove(this.lines),this.event.destroy(),this.mouseMove.destroy(),this.height=[],this.point=null,this.path=[],this.lines=null},a});