define(["../Core/AttributeCompression","../Core/Cartesian3","../Core/Cartographic","../Core/Ellipsoid","../Core/Math","../Core/Rectangle","./createTaskProcessorWorker"],function(r,e,a,n,o,t,i){"use strict";var s=32767,u=new a,c=new e,p=new t,f=new n,l={min:void 0,max:void 0};return i(function(i,C){var h=new Uint16Array(i.positions);!function(r){r=new Float64Array(r);var e=0;l.min=r[e++],l.max=r[e++],t.unpack(r,e,p),e+=t.packedLength,n.unpack(r,e,f)}(i.packedBuffer);var d=p,g=f,m=l.min,v=l.max,w=h.length/3,k=h.subarray(0,w),b=h.subarray(w,2*w),y=h.subarray(2*w,3*w);r.zigZagDeltaDecode(k,b,y);for(var A=new Float64Array(h.length),x=0;x<w;++x){var D=k[x],F=b[x],R=y[x],T=o.lerp(d.west,d.east,D/s),z=o.lerp(d.south,d.north,F/s),B=o.lerp(m,v,R/s),E=a.fromRadians(T,z,B,u),L=g.cartographicToCartesian(E,c);e.pack(L,A,3*x)}return C.push(A.buffer),{positions:A.buffer}})});