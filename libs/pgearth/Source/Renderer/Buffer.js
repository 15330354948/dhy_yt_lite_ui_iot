define(["../Core/Check","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/IndexDatatype","../Core/WebGLConstants","./BufferUsage"],function(e,t,r,n,s,i,f,a,o){"use strict";function u(n){if(n=t(n,t.EMPTY_OBJECT),e.defined("options.context",n.context),!r(n.typedArray)&&!r(n.sizeInBytes))throw new i("Either options.sizeInBytes or options.typedArray is required.");if(r(n.typedArray)&&r(n.sizeInBytes))throw new i("Cannot pass in both options.sizeInBytes and options.typedArray.");if(r(n.typedArray)&&(e.typeOf.object("options.typedArray",n.typedArray),e.typeOf.number("options.typedArray.byteLength",n.typedArray.byteLength)),!o.validate(n.usage))throw new i("usage is invalid.");var s=n.context._gl,f=n.bufferTarget,a=n.typedArray,u=n.sizeInBytes,y=n.usage,h=r(a);h&&(u=a.byteLength),e.typeOf.number.greaterThan("sizeInBytes",u,0);var d=s.createBuffer();s.bindBuffer(f,d),s.bufferData(f,h?a:u,y),s.bindBuffer(f,null),this._gl=s,this._webgl2=n.context._webgl2,this._bufferTarget=f,this._sizeInBytes=u,this._usage=y,this._buffer=d,this.vertexArrayDestroyable=!0}return u.createVertexBuffer=function(t){return e.defined("options.context",t.context),new u({context:t.context,bufferTarget:a.ARRAY_BUFFER,typedArray:t.typedArray,sizeInBytes:t.sizeInBytes,usage:t.usage})},u.createIndexBuffer=function(t){if(e.defined("options.context",t.context),!f.validate(t.indexDatatype))throw new i("Invalid indexDatatype.");if(t.indexDatatype===f.UNSIGNED_INT&&!t.context.elementIndexUint)throw new i("IndexDatatype.UNSIGNED_INT requires OES_element_index_uint, which is not supported on this system.  Check context.elementIndexUint.");var r=t.context,s=t.indexDatatype,o=f.getSizeInBytes(s),y=new u({context:r,bufferTarget:a.ELEMENT_ARRAY_BUFFER,typedArray:t.typedArray,sizeInBytes:t.sizeInBytes,usage:t.usage}),h=y.sizeInBytes/o;return n(y,{indexDatatype:{get:function(){return s}},bytesPerIndex:{get:function(){return o}},numberOfIndices:{get:function(){return h}}}),y},n(u.prototype,{sizeInBytes:{get:function(){return this._sizeInBytes}},usage:{get:function(){return this._usage}}}),u.prototype._getBuffer=function(){return this._buffer},u.prototype.copyFromArrayView=function(r,n){n=t(n,0),e.defined("arrayView",r),e.typeOf.number.lessThanOrEquals("offsetInBytes + arrayView.byteLength",n+r.byteLength,this._sizeInBytes);var s=this._gl,i=this._bufferTarget;s.bindBuffer(i,this._buffer),s.bufferSubData(i,n,r),s.bindBuffer(i,null)},u.prototype.copyFromBuffer=function(e,t,n,s){if(!this._webgl2)throw new i("A WebGL 2 context is required.");if(!r(e))throw new i("readBuffer must be defined.");if(!r(s)||s<=0)throw new i("sizeInBytes must be defined and be greater than zero.");if(!r(t)||t<0||t+s>e._sizeInBytes)throw new i("readOffset must be greater than or equal to zero and readOffset + sizeInBytes must be less than of equal to readBuffer.sizeInBytes.");if(!r(n)||n<0||n+s>this._sizeInBytes)throw new i("writeOffset must be greater than or equal to zero and writeOffset + sizeInBytes must be less than of equal to this.sizeInBytes.");if(this._buffer===e._buffer&&(n>=t&&n<t+s||t>n&&t<n+s))throw new i("When readBuffer is equal to this, the ranges [readOffset + sizeInBytes) and [writeOffset, writeOffset + sizeInBytes) must not overlap.");if(this._bufferTarget===a.ELEMENT_ARRAY_BUFFER&&e._bufferTarget!==a.ELEMENT_ARRAY_BUFFER||this._bufferTarget!==a.ELEMENT_ARRAY_BUFFER&&e._bufferTarget===a.ELEMENT_ARRAY_BUFFER)throw new i("Can not copy an index buffer into another buffer type.");var f=a.COPY_READ_BUFFER,o=a.COPY_WRITE_BUFFER,u=this._gl;u.bindBuffer(o,this._buffer),u.bindBuffer(f,e._buffer),u.copyBufferSubData(f,o,t,n,s),u.bindBuffer(o,null),u.bindBuffer(f,null)},u.prototype.getBufferData=function(e,n,s,f){if(n=t(n,0),s=t(s,0),!this._webgl2)throw new i("A WebGL 2 context is required.");if(!r(e))throw new i("arrayView is required.");var o,u,y=e.byteLength;if(r(f)?(o=f,r(y)?u=1:(y=e.length,u=e.BYTES_PER_ELEMENT)):r(y)?(o=y-s,u=1):(o=(y=e.length)-s,u=e.BYTES_PER_ELEMENT),s<0||s>y)throw new i("destinationOffset must be greater than zero and less than the arrayView length.");if(s+o>y)throw new i("destinationOffset + length must be less than or equal to the arrayViewLength.");if(n<0||n>this._sizeInBytes)throw new i("sourceOffset must be greater than zero and less than the buffers size.");if(n+o*u>this._sizeInBytes)throw new i("sourceOffset + length must be less than the buffers size.");var h=this._gl,d=a.COPY_READ_BUFFER;h.bindBuffer(d,this._buffer),h.getBufferSubData(d,n,e,s,f),h.bindBuffer(d,null)},u.prototype.isDestroyed=function(){return!1},u.prototype.destroy=function(){return this._gl.deleteBuffer(this._buffer),s(this)},u});