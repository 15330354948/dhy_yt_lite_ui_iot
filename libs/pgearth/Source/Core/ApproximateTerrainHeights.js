define(["./buildModuleUrl","./defaultValue","./defined","./defineProperties","./BoundingSphere","./Cartesian2","./Cartesian3","./Cartographic","./Check","./DeveloperError","./Ellipsoid","./GeographicTilingScheme","./Rectangle","./Resource"],function(e,i,r,t,n,a,o,s,h,f,u,l,g,d){"use strict";var c=new o,m=new o,v=new s,H=new o,w=new o,p=new n,_=new l,T=[new s,new s,new s,new s],x=new a,M={};function R(e){s.fromRadians(e.east,e.north,0,T[0]),s.fromRadians(e.west,e.north,0,T[1]),s.fromRadians(e.east,e.south,0,T[2]),s.fromRadians(e.west,e.south,0,T[3]);var i,r=0,t=0,n=0,a=0,o=M._terrainHeightsMaxLevel;for(i=0;i<=o;++i){for(var h=!1,f=0;f<4;++f){var u=T[f];if(_.positionToTileXY(u,i,x),0===f)n=x.x,a=x.y;else if(n!==x.x||a!==x.y){h=!0;break}}if(h)break;r=n,t=a}if(0!==i)return{x:r,y:t,level:i>o?o:i-1}}return M.initialize=function(){var i=M._initPromise;return r(i)?i:(i=d.fetchJson(e("Assets/approximateTerrainHeights.json")).then(function(e){M._terrainHeights=e}),M._initPromise=i,i)},M.getMinimumMaximumHeights=function(e,t){if(h.defined("rectangle",e),!r(M._terrainHeights))throw new f("You must call ApproximateTerrainHeights.initialize and wait for the promise to resolve before using this function");t=i(t,u.WGS84);var n=R(e),a=M._defaultMinTerrainHeight,s=M._defaultMaxTerrainHeight;if(r(n)){var l=n.level+"-"+n.x+"-"+n.y,d=M._terrainHeights[l];r(d)&&(a=d[0],s=d[1]),t.cartographicToCartesian(g.northeast(e,v),c),t.cartographicToCartesian(g.southwest(e,v),m),o.midpoint(m,c,H);var p=t.scaleToGeodeticSurface(H,w);if(r(p)){var _=o.distance(H,p);a=Math.min(a,-_)}else a=M._defaultMinTerrainHeight}return{minimumTerrainHeight:a=Math.max(M._defaultMinTerrainHeight,a),maximumTerrainHeight:s}},M.getBoundingSphere=function(e,t){if(h.defined("rectangle",e),!r(M._terrainHeights))throw new f("You must call ApproximateTerrainHeights.initialize and wait for the promise to resolve before using this function");t=i(t,u.WGS84);var a=R(e),o=M._defaultMaxTerrainHeight;if(r(a)){var s=a.level+"-"+a.x+"-"+a.y,l=M._terrainHeights[s];r(l)&&(o=l[1])}var g=n.fromRectangle3D(e,t,0);return n.fromRectangle3D(e,t,o,p),n.union(g,p,g)},M._terrainHeightsMaxLevel=6,M._defaultMaxTerrainHeight=9e3,M._defaultMinTerrainHeight=-1e5,M._terrainHeights=void 0,M._initPromise=void 0,t(M,{initialized:{get:function(){return r(M._terrainHeights)}}}),M});