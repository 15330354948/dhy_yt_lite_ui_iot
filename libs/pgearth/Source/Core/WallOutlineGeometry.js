define(["./BoundingSphere","./Cartesian3","./ComponentDatatype","./defaultValue","./defined","./DeveloperError","./Ellipsoid","./Geometry","./GeometryAttribute","./GeometryAttributes","./IndexDatatype","./Math","./PrimitiveType","./WallGeometryLibrary"],function(i,e,t,r,n,o,a,s,m,h,u,p,l,g){"use strict";var d=new e,f=new e;function v(i){var t=(i=r(i,r.EMPTY_OBJECT)).positions,s=i.maximumHeights,m=i.minimumHeights;if(!n(t))throw new o("options.positions is required.");if(n(s)&&s.length!==t.length)throw new o("options.positions and options.maximumHeights must have the same length.");if(n(m)&&m.length!==t.length)throw new o("options.positions and options.minimumHeights must have the same length.");var h=r(i.granularity,p.RADIANS_PER_DEGREE),u=r(i.ellipsoid,a.WGS84);this._positions=t,this._minimumHeights=m,this._maximumHeights=s,this._granularity=h,this._ellipsoid=a.clone(u),this._workerName="createWallOutlineGeometry";var l=1+t.length*e.packedLength+2;n(m)&&(l+=m.length),n(s)&&(l+=s.length),this.packedLength=l+a.packedLength+1}v.pack=function(i,t,s){if(!n(i))throw new o("value is required");if(!n(t))throw new o("array is required");var m;s=r(s,0);var h=i._positions,u=h.length;for(t[s++]=u,m=0;m<u;++m,s+=e.packedLength)e.pack(h[m],t,s);var p=i._minimumHeights;if(u=n(p)?p.length:0,t[s++]=u,n(p))for(m=0;m<u;++m)t[s++]=p[m];var l=i._maximumHeights;if(u=n(l)?l.length:0,t[s++]=u,n(l))for(m=0;m<u;++m)t[s++]=l[m];return a.pack(i._ellipsoid,t,s),t[s+=a.packedLength]=i._granularity,t};var y=a.clone(a.UNIT_SPHERE),c={positions:void 0,minimumHeights:void 0,maximumHeights:void 0,ellipsoid:y,granularity:void 0};return v.unpack=function(i,t,s){if(!n(i))throw new o("array is required");var m;t=r(t,0);var h,u,p=i[t++],l=new Array(p);for(m=0;m<p;++m,t+=e.packedLength)l[m]=e.unpack(i,t);if((p=i[t++])>0)for(h=new Array(p),m=0;m<p;++m)h[m]=i[t++];if((p=i[t++])>0)for(u=new Array(p),m=0;m<p;++m)u[m]=i[t++];var g=a.unpack(i,t,y),d=i[t+=a.packedLength];return n(s)?(s._positions=l,s._minimumHeights=h,s._maximumHeights=u,s._ellipsoid=a.clone(g,s._ellipsoid),s._granularity=d,s):(c.positions=l,c.minimumHeights=h,c.maximumHeights=u,c.granularity=d,new v(c))},v.fromConstantHeights=function(i){var e,t,a=(i=r(i,r.EMPTY_OBJECT)).positions;if(!n(a))throw new o("options.positions is required.");var s=i.minimumHeight,m=i.maximumHeight,h=n(s),u=n(m);if(h||u){var p=a.length;e=h?new Array(p):void 0,t=u?new Array(p):void 0;for(var l=0;l<p;++l)h&&(e[l]=s),u&&(t[l]=m)}return new v({positions:a,maximumHeights:t,minimumHeights:e,ellipsoid:i.ellipsoid})},v.createGeometry=function(r){var o=r._positions,a=r._minimumHeights,v=r._maximumHeights,y=r._granularity,c=r._ellipsoid,w=g.computePositions(c,o,v,a,y,!1);if(n(w)){var _,H=w.bottomPositions,A=w.topPositions,E=A.length,k=2*E,x=new Float64Array(k),L=0;for(E/=3,_=0;_<E;++_){var P=3*_,G=e.fromArray(A,P,d),T=e.fromArray(H,P,f);x[L++]=T.x,x[L++]=T.y,x[L++]=T.z,x[L++]=G.x,x[L++]=G.y,x[L++]=G.z}var b=new h({position:new m({componentDatatype:t.DOUBLE,componentsPerAttribute:3,values:x})}),D=k/3;k=2*D-4+D;var S=u.createTypedArray(D,k),q=0;for(_=0;_<D-2;_+=2){var C=_,I=_+2,N=e.fromArray(x,3*C,d),O=e.fromArray(x,3*I,f);if(!e.equalsEpsilon(N,O,p.EPSILON10)){var B=_+1,R=_+3;S[q++]=B,S[q++]=C,S[q++]=B,S[q++]=R,S[q++]=C,S[q++]=I}}return S[q++]=D-2,S[q++]=D-1,new s({attributes:b,indices:S,primitiveType:l.LINES,boundingSphere:new i.fromVertices(x)})}},v});