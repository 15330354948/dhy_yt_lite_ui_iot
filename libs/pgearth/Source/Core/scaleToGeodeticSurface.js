define(["./Cartesian3","./defined","./DeveloperError","./Math"],function(e,r,i,n){"use strict";var t=new e,a=new e;return function(d,u,o,w,s){if(!r(d))throw new i("cartesian is required.");if(!r(u))throw new i("oneOverRadii is required.");if(!r(o))throw new i("oneOverRadiiSquared is required.");if(!r(w))throw new i("centerToleranceSquared is required.");var f=d.x,c=d.y,h=d.z,v=u.x,y=u.y,l=u.z,q=f*f*v*v,x=c*c*y*y,z=h*h*l*l,S=q+x+z,m=Math.sqrt(1/S),M=e.multiplyByScalar(d,m,t);if(S<w)return isFinite(m)?e.clone(M,s):void 0;var O=o.x,g=o.y,p=o.z,E=a;E.x=M.x*O*2,E.y=M.y*g*2,E.z=M.z*p*2;var R,b,B,C,D,F,I,L=(1-m)*e.magnitude(d)/(.5*e.magnitude(E)),N=0;do{N=(R=q*(D=(b=1/(1+(L-=N)*O))*b)+x*(F=(B=1/(1+L*g))*B)+z*(I=(C=1/(1+L*p))*C)-1)/(-2*(q*(D*b)*O+x*(F*B)*g+z*(I*C)*p))}while(Math.abs(R)>n.EPSILON12);return r(s)?(s.x=f*b,s.y=c*B,s.z=h*C,s):new e(f*b,c*B,h*C)}});