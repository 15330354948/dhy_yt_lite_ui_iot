define(["../../../../Core/defined","../../../../Core/Math","../../../../Core/getTimestamp","../../../../Core/EventHelper","../../../../Core/Transforms","../../../../Scene/SceneMode","../../../../Core/Cartesian2","../../../../Core/Cartesian3","../../../../Core/Matrix4","../../../../Core/BoundingSphere","../../../../Core/HeadingPitchRange","../../../../ThirdParty/knockout","../Core/loadView","./ResetViewNavigationControl","./ZoomNavigationControl","../SvgPaths/svgCompassOuterRing","../SvgPaths/svgCompassGyro","../SvgPaths/svgCompassRotationMarker","../Core/Utils"],function(t,o,e,a,i,s,r,n,c,d,l,v,u,m,g,h,b,p,C){"use strict";var k=function(o){this.terria=o.terria,this.eventHelper=new a,this.enableZoomControls=!t(o.enableZoomControls)||o.enableZoomControls,this.enableCompass=!t(o.enableCompass)||o.enableCompass,this.controls=o.controls,t(this.controls)||(this.controls=[new g(this.terria,!0),new m(this.terria),new g(this.terria,!1)]),this.svgCompassOuterRing=h,this.svgCompassGyro=b,this.svgCompassRotationMarker=p,this.showCompass=t(this.terria)&&this.enableCompass,this.heading=this.showCompass?this.terria.scene.camera.heading:0,this.isOrbiting=!1,this.orbitCursorAngle=0,this.orbitCursorOpacity=0,this.orbitLastTimestamp=0,this.orbitFrame=void 0,this.orbitIsLook=!1,this.orbitMouseMoveFunction=void 0,this.orbitMouseUpFunction=void 0,this.isRotating=!1,this.rotateInitialCursorAngle=void 0,this.rotateFrame=void 0,this.rotateIsLook=!1,this.rotateMouseMoveFunction=void 0,this.rotateMouseUpFunction=void 0,this._unsubcribeFromPostRender=void 0,v.track(this,["controls","showCompass","heading","isOrbiting","orbitCursorAngle","isRotating"]);var e=this;function i(){t(e.terria)?(e._unsubcribeFromPostRender&&(e._unsubcribeFromPostRender(),e._unsubcribeFromPostRender=void 0),e.showCompass=e.enableCompass,e._unsubcribeFromPostRender=e.terria.scene.postRender.addEventListener(function(){e.heading=e.terria.scene.camera.heading})):(e._unsubcribeFromPostRender&&(e._unsubcribeFromPostRender(),e._unsubcribeFromPostRender=void 0),e.showCompass=!1)}this.eventHelper.add(this.terria.afterWidgetChanged,i,this),i()};k.prototype.destroy=function(){this.eventHelper.removeAll()},k.prototype.show=function(t){var o;this.enableZoomControls&&this.enableCompass?o='<div class="compass" title="拖动外圈：旋转视图；拖动陀螺仪：自由轨道；双击：重置视图；" data-bind="visible: showCompass, event: { mousedown: handleMouseDown, click: handleDoubleClick }"> <p>N</p><p>S</p><p>W</p><p>E</p> <div class="compass-outer-ring" title="通过拖拽旋转视图" data-bind="style: { transform: \'rotate(-\' + heading + \'rad)\', \'-webkit-transform\': \'rotate(-\' + heading + \'rad)\' }"><span class=\'powergis-icon-compass\'></span></div> <div class="compass-gyro-background"></div> <div class="compass-gyro" data-bind="css: { \'compass-gyro-active\': isOrbiting }"></div></div><div class="navigation-controls">\x3c!-- ko foreach: controls --\x3e<div data-bind="click: activate, attr: { title: $data.name }, css: $root.isLastControl($data) ? \'navigation-control-last\' : \'navigation-control\' ">   \x3c!-- ko if: $data.hasText --\x3e   <div data-bind="text: $data.text, css: $data.isActive ?  \'navigation-control-icon-active \' + $data.cssClass : $data.cssClass"></div>   \x3c!-- /ko --\x3e  \x3c!-- ko ifnot: $data.hasText --\x3e  <div data-bind="css: $data.isActive ?  \'navigation-control-icon-active \' + $data.cssClass : $data.cssClass"><span class=\'powergis-icon-home\'></span></div>  \x3c!-- /ko --\x3e </div> \x3c!-- /ko --\x3e</div>':!this.enableZoomControls&&this.enableCompass?o='<div class="compass" title="拖动外圈：旋转视图；拖动陀螺仪：自由轨道；双击：重置视图" data-bind="visible: showCompass, event: { mousedown: handleMouseDown, dblclick: handleDoubleClick }"><div class="compass-outer-ring-background"></div>'+" <div class=\"compass-rotation-marker\" data-bind=\"visible: isOrbiting, style: { transform: 'rotate(-' + orbitCursorAngle + 'rad)', '-webkit-transform': 'rotate(-' + orbitCursorAngle + 'rad)', opacity: orbitCursorOpacity }, pgEarthSvgPath: { path: svgCompassRotationMarker, width: 145, height: 145 }\"></div> <div class=\"compass-outer-ring\" title=\"通过拖拽旋转视图\" data-bind=\"style: { transform: 'rotate(-' + heading + 'rad)', '-webkit-transform': 'rotate(-' + heading + 'rad)' }, pgEarthSvgPath: { path: svgCompassOuterRing, width: 145, height: 145 }\"></div> <div class=\"compass-gyro-background\"></div></div><div class=\"navigation-controls\">\x3c!-- ko foreach: controls --\x3e<div data-bind=\"click: activate, attr: { title: $data.name }, css: $root.isLastControl($data) ? 'navigation-control-last' : 'navigation-control' \">   \x3c!-- ko if: $data.hasText --\x3e   <div data-bind=\"text: $data.text, css: $data.isActive ?  'navigation-control-icon-active ' + $data.cssClass : $data.cssClass\"></div>   \x3c!-- /ko --\x3e  \x3c!-- ko ifnot: $data.hasText --\x3e  <div data-bind=\"css: $data.isActive ?  'navigation-control-icon-active ' + $data.cssClass : $data.cssClass\">&#8634</div>  \x3c!-- /ko --\x3e </div> \x3c!-- /ko --\x3e</div>":this.enableZoomControls&&!this.enableCompass?o='<div class="compass"  style="display: none;" title="Drag outer ring: rotate view. Drag inner gyroscope: free orbit.Double-click: reset view.TIP: You can also free orbit by holding the CTRL key and dragging the map." data-bind="visible: showCompass, event: { mousedown: handleMouseDown, dblclick: handleDoubleClick }"><div class="compass-outer-ring-background"></div>'+" <div class=\"compass-rotation-marker\" data-bind=\"visible: isOrbiting, style: { transform: 'rotate(-' + orbitCursorAngle + 'rad)', '-webkit-transform': 'rotate(-' + orbitCursorAngle + 'rad)', opacity: orbitCursorOpacity }, pgEarthSvgPath: { path: svgCompassRotationMarker, width: 145, height: 145 }\"></div> <div class=\"compass-outer-ring\" title=\"Click and drag to rotate the camera\" data-bind=\"style: { transform: 'rotate(-' + heading + 'rad)', '-webkit-transform': 'rotate(-' + heading + 'rad)' }, pgEarthSvgPath: { path: svgCompassOuterRing, width: 145, height: 145 }\"></div> <div class=\"compass-gyro-background\"></div> <div class=\"compass-gyro\" data-bind=\"pgEarthSvgPath: { path: svgCompassGyro, width: 145, height: 145 }, css: { 'compass-gyro-active': isOrbiting }\"></div></div><div class=\"navigation-controls\"    >\x3c!-- ko foreach: controls --\x3e<div data-bind=\"click: activate, attr: { title: $data.name }, css: $root.isLastControl($data) ? 'navigation-control-last' : 'navigation-control' \">   \x3c!-- ko if: $data.hasText --\x3e   <div data-bind=\"text: $data.text, css: $data.isActive ?  'navigation-control-icon-active ' + $data.cssClass : $data.cssClass\"></div>   \x3c!-- /ko --\x3e  \x3c!-- ko ifnot: $data.hasText --\x3e  <div data-bind=\"css: $data.isActive ?  'navigation-control-icon-active ' + $data.cssClass : $data.cssClass\">&#8634</div>  \x3c!-- /ko --\x3e </div> \x3c!-- /ko --\x3e</div>":this.enableZoomControls||this.enableCompass||(o='<div class="compass"  style="display: none;" title="Drag outer ring: rotate view. Drag inner gyroscope: free orbit.Double-click: reset view.TIP: You can also free orbit by holding the CTRL key and dragging the map." data-bind="visible: showCompass, event: { mousedown: handleMouseDown, dblclick: handleDoubleClick }"><div class="compass-outer-ring-background"></div> <div class="compass-rotation-marker" data-bind="visible: isOrbiting, style: { transform: \'rotate(-\' + orbitCursorAngle + \'rad)\', \'-webkit-transform\': \'rotate(-\' + orbitCursorAngle + \'rad)\', opacity: orbitCursorOpacity }, pgEarthSvgPath: { path: svgCompassRotationMarker, width: 145, height: 145 }"></div> <div class="compass-outer-ring" title="Click and drag to rotate the camera" data-bind="style: { transform: \'rotate(-\' + heading + \'rad)\', \'-webkit-transform\': \'rotate(-\' + heading + \'rad)\' }, pgEarthSvgPath: { path: svgCompassOuterRing, width: 145, height: 145 }"></div> <div class="compass-gyro-background"></div> <div class="compass-gyro" data-bind="pgEarthSvgPath: { path: svgCompassGyro, width: 145, height: 145 }, css: { \'compass-gyro-active\': isOrbiting }"></div></div><div class="navigation-controls"   style="display: none;" >\x3c!-- ko foreach: controls --\x3e<div data-bind="click: activate, attr: { title: $data.name }, css: $root.isLastControl($data) ? \'navigation-control-last\' : \'navigation-control\' ">   \x3c!-- ko if: $data.hasText --\x3e   <div data-bind="text: $data.text, css: $data.isActive ?  \'navigation-control-icon-active \' + $data.cssClass : $data.cssClass"></div>   \x3c!-- /ko --\x3e  \x3c!-- ko ifnot: $data.hasText --\x3e  <div data-bind="css: $data.isActive ?  \'navigation-control-icon-active \' + $data.cssClass : $data.cssClass">&#8634</div>  \x3c!-- /ko --\x3e </div> \x3c!-- /ko --\x3e</div>'),u(o,t,this)},k.prototype.add=function(t){this.controls.push(t)},k.prototype.remove=function(t){this.controls.remove(t)},k.prototype.isLastControl=function(t){return t===this.controls[this.controls.length-1]};var f=new r;k.prototype.handleMouseDown=function(a,d){if(this.terria.scene.mode===s.MORPHING)return!0;var l=d.currentTarget,v=d.currentTarget.getBoundingClientRect(),u=v.width/2,m=new r((v.right-v.left)/2,(v.bottom-v.top)/2),g=new r(d.clientX-v.left,d.clientY-v.top),h=r.subtract(g,m,f),b=r.magnitude(h)/u;if(b<50/145)!function(a,d,l){var v=a.terria.scene,u=v.screenSpaceCameraController;if(v.mode==s.MORPHING||!u.enableInputs)return;switch(v.mode){case s.COLUMBUS_VIEW:if(u.enableLook)break;if(!u.enableTranslate||!u.enableTilt)return;break;case s.SCENE3D:if(u.enableLook)break;if(!u.enableTilt||!u.enableRotate)return;break;case s.SCENE2D:if(!u.enableTranslate)return}document.removeEventListener("mousemove",a.orbitMouseMoveFunction,!1),document.removeEventListener("mouseup",a.orbitMouseUpFunction,!1),t(a.orbitTickFunction)&&a.terria.clock.onTick.removeEventListener(a.orbitTickFunction);a.orbitMouseMoveFunction=void 0,a.orbitMouseUpFunction=void 0,a.orbitTickFunction=void 0,a.isOrbiting=!0,a.orbitLastTimestamp=e();var m=v.camera;if(t(a.terria.trackedEntity))a.orbitFrame=void 0,a.orbitIsLook=!1;else{var g=C.getCameraFocus(a.terria,!0,M);t(g)?(a.orbitFrame=i.eastNorthUpToFixedFrame(g,v.globe.ellipsoid,F),a.orbitIsLook=!1):(a.orbitFrame=i.eastNorthUpToFixedFrame(m.positionWC,v.globe.ellipsoid,F),a.orbitIsLook=!0)}function h(t,e){var i=Math.atan2(-t.y,t.x);a.orbitCursorAngle=o.zeroToTwoPi(i-o.PI_OVER_TWO);var s=r.magnitude(t),n=e/2,c=Math.min(s/n,1),d=.5*c*c+.5;a.orbitCursorOpacity=d}a.orbitTickFunction=function(i){var r,d=e(),l=d-a.orbitLastTimestamp,u=2.5*(a.orbitCursorOpacity-.5)/1e3,g=l*u,h=a.orbitCursorAngle+o.PI_OVER_TWO,b=Math.cos(h)*g,p=Math.sin(h)*g;t(a.orbitFrame)&&(r=c.clone(m.transform,x),m.lookAtTransform(a.orbitFrame)),v.mode==s.SCENE2D?m.move(new n(b,p,0),Math.max(v.canvas.clientWidth,v.canvas.clientHeight)/100*m.positionCartographic.height*g):a.orbitIsLook?(m.look(n.UNIT_Z,-b),m.look(m.right,-p)):(m.rotateLeft(b),m.rotateUp(p)),t(a.orbitFrame)&&m.lookAtTransform(r),a.orbitLastTimestamp=d},a.orbitMouseMoveFunction=function(t){var o=d.getBoundingClientRect(),e=new r((o.right-o.left)/2,(o.bottom-o.top)/2),a=new r(t.clientX-o.left,t.clientY-o.top),i=r.subtract(a,e,f);h(i,o.width)},a.orbitMouseUpFunction=function(o){a.isOrbiting=!1,document.removeEventListener("mousemove",a.orbitMouseMoveFunction,!1),document.removeEventListener("mouseup",a.orbitMouseUpFunction,!1),t(a.orbitTickFunction)&&a.terria.clock.onTick.removeEventListener(a.orbitTickFunction),a.orbitMouseMoveFunction=void 0,a.orbitMouseUpFunction=void 0,a.orbitTickFunction=void 0},document.addEventListener("mousemove",a.orbitMouseMoveFunction,!1),document.addEventListener("mouseup",a.orbitMouseUpFunction,!1),a.terria.clock.onTick.addEventListener(a.orbitTickFunction),h(l,d.getBoundingClientRect().width)}(this,l,h);else{if(!(b<1))return!0;!function(e,a,n){if(e.terria.options.enableCompassOuterRing=!t(e.terria.options.enableCompassOuterRing)||e.terria.options.enableCompassOuterRing,e.terria.options.enableCompassOuterRing){var d,l=e.terria.scene,v=l.camera,u=l.screenSpaceCameraController;if(l.mode==s.MORPHING||l.mode==s.SCENE2D||!u.enableInputs)return;if(!u.enableLook&&(l.mode==s.COLUMBUS_VIEW||l.mode==s.SCENE3D&&!u.enableRotate))return;if(document.removeEventListener("mousemove",e.rotateMouseMoveFunction,!1),document.removeEventListener("mouseup",e.rotateMouseUpFunction,!1),e.rotateMouseMoveFunction=void 0,e.rotateMouseUpFunction=void 0,e.isRotating=!0,e.rotateInitialCursorAngle=Math.atan2(-n.y,n.x),t(e.terria.trackedEntity))e.rotateFrame=void 0,e.rotateIsLook=!1;else{var m=C.getCameraFocus(e.terria,!0,M);t(m)&&(l.mode!=s.COLUMBUS_VIEW||u.enableLook||u.enableTranslate)?(e.rotateFrame=i.eastNorthUpToFixedFrame(m,l.globe.ellipsoid,F),e.rotateIsLook=!1):(e.rotateFrame=i.eastNorthUpToFixedFrame(v.positionWC,l.globe.ellipsoid,F),e.rotateIsLook=!0)}t(e.rotateFrame)&&(d=c.clone(v.transform,x),v.lookAtTransform(e.rotateFrame)),e.rotateInitialCameraAngle=-v.heading,t(e.rotateFrame)&&v.lookAtTransform(d),e.rotateMouseMoveFunction=function(i){var s,n=a.getBoundingClientRect(),d=new r((n.right-n.left)/2,(n.bottom-n.top)/2),l=new r(i.clientX-n.left,i.clientY-n.top),v=r.subtract(l,d,f),u=Math.atan2(-v.y,v.x),m=u-e.rotateInitialCursorAngle,g=o.zeroToTwoPi(e.rotateInitialCameraAngle-m),h=e.terria.scene.camera;t(e.rotateFrame)&&(s=c.clone(h.transform,x),h.lookAtTransform(e.rotateFrame));var b=-h.heading;h.rotateRight(g-b),t(e.rotateFrame)&&h.lookAtTransform(s)},e.rotateMouseUpFunction=function(t){e.isRotating=!1,document.removeEventListener("mousemove",e.rotateMouseMoveFunction,!1),document.removeEventListener("mouseup",e.rotateMouseUpFunction,!1),e.rotateMouseMoveFunction=void 0,e.rotateMouseUpFunction=void 0},document.addEventListener("mousemove",e.rotateMouseMoveFunction,!1),document.addEventListener("mouseup",e.rotateMouseUpFunction,!1)}}(this,l,h)}};var x=new c,F=new c,M=new n;return k.prototype.handleDoubleClick=function(e,a){var i=e.terria.scene,r=i.camera,c=i.screenSpaceCameraController;if(i.mode==s.MORPHING||!c.enableInputs)return!0;if(i.mode!=s.COLUMBUS_VIEW||c.enableTranslate){if(i.mode==s.SCENE3D||i.mode==s.COLUMBUS_VIEW){if(!c.enableLook)return;if(i.mode==s.SCENE3D&&!c.enableRotate)return}var v=C.getCameraFocus(e.terria,!0,M);if(t(v)){var u=i.globe.ellipsoid.cartographicToCartesian(r.positionCartographic,new n),m=i.globe.ellipsoid.geodeticSurfaceNormal(v),g=new d(v,0);r.flyToBoundingSphere(g,{offset:new l(0,o.PI_OVER_TWO-n.angleBetween(m,r.directionWC),n.distance(u,v)),duration:1.5})}else this.controls[1].resetView()}},k.create=function(t){var o=new k(t);return o.show(t.container),o},k});