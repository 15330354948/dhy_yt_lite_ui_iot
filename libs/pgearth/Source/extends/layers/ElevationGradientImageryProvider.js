define(["../../Core/Cartographic","../../Core/Color","../../Core/Credit","../../Core/EllipsoidGeodesic","../../Core/Event","../../Core/WebMercatorTilingScheme","../../Core/Rectangle","../../ThirdParty/when","../widgets/ElevationGradient/TileRenderer","../widgets/ElevationGradient/renderContourLabels"],function(e,t,r,i,o,n,s,l,a,h){const u=256,c=65,m=12,d=10,C=1,g="",S=16,v=.05,p=(e,t,r)=>e*(1-r)+t*r,f=(e,r,i)=>new t(p(e.red,r.red,i),p(e.green,r.green,i),p(e.blue,r.blue,i),p(e.alpha,r.alpha,i));const w=(t,r,i)=>{const o=r*i,n=new Array(o);for(let s=0;s<o;++s){const o=s%r/(r-1),l=1-Math.floor(s/r)/(i-1),a=(1-o)*t.west+o*t.east,h=(1-l)*t.south+l*t.north;n[s]=new e(a,h)}return n},z=(e,t)=>{const r=s.northeast(e),o=s.northwest(e),n=s.southwest(e),l=new i(o,r),a=new i(n,o);return{x:l.surfaceDistance/t,y:a.surfaceDistance/t}},A=e=>{const t=document.createElement("canvas");return t.width=e,t.height=e,t};return class{constructor({valueSampler:e,maskSampler:i,tilingScheme:s,ellipsoid:h,providerCache:p,contourColor:f=t.WHITE,textOutlineColor:w=t.BLACK.withAlpha(.5),tileSize:z=u,gridSize:b=c,minimumTileLevel:y=m,contourAmount:k=1,gradientAmount:L=1,majorContour:x=d,minorContour:T=C,credit:P=g,extent:E,gradient:R,fontSize:j=S,hillshadeAmount:O=1,formatContourLabel:F=(e=>`${e} m`),useSlope:$=0,readyPromise:D=l.resolve(),linearUnitFactor:G=1}){this.valueSampler=e,this.maskSampler=i,this.cache=p,this.tilingScheme=s||new n({ellipsoid:h}),this.contourColor=f,this.textOutlineColor=w,this.errorEvent=new o,this.tileSize=z,this.maskSize=z,this.gridSize=b,this.fontSize=j,this.minimumTileLevel=y,this.gradientAmount=L,this.contourAmount=k,this.majorContour=x,this.minorContour=T,this.formatContourLabel=F,this.gradientStops=R,this.useSlope=$,this.linearUnitFactor=G,this.credit=new r(P),this.tileRenderer=new a({width:this.tileSize,height:this.tileSize,gradientStops:R,gradientAmount:L,hillshadeAmount:O,contourAmount:k,majorContour:x,minorContour:T,contourOpacityThreshold:v,useSlope:$,contourColor:f}),this.blankCanvasPromise=l.resolve(A(this.tileSize)),this.readyPromise=D,this.extent=E,this._ready=!1,this.readyPromise.then(()=>{this._ready=!0})}getTileCredits(){return this.credit}requestImage(e,t,r){const{gridSize:i,maskSize:o,minorContour:n,majorContour:a,fontSize:u,formatContourLabel:c,contourAmount:m,useSlope:d,linearUnitFactor:C}=this,g=e=>(function(e,t){if(t<=e[0].value)return e[0].color;for(let r=1;r<e.length;++r)if(t<=e[r].value){const i=(t-e[r-1].value)/(e[r].value-e[r-1].value);return f(e[r-1].color,e[r].color,i)}return e[e.length-1].color})(this.gradientStops,e).alpha,S=e=>!!d||g(e)>v;if(r<this.minimumTileLevel)return this.blankCanvasPromise;const p=this.tilingScheme.tileXYToRectangle(e,t,r);if(this.extent&&!s.intersection(p,this.extent))return this.blankCanvasPromise;const A=z(p,C),b=([e,t])=>{const r=this.tileRenderer.render(t,e,i,o,A);return m>.01?h({canvas:r,values:t,maskSamples:e,majorContour:a,minorContour:n,fontSize:u,formatLabel:c,shouldRenderContourLabel:S,textColor:this.contourColor,textOutlineColor:this.textOutlineColor}):r},y=`${e}:${t}:${r}`,k=this.cache&&this.cache.has(y)?this.cache.get(y):null;if(k)return l.resolve(b(k));const L=w(p,i,i),x=l(this.valueSampler(L,r));let T;if(this.maskSampler){const e=w(p,o,o);T=l(this.maskSampler(e,r))}else T=l.resolve(Array(o*o).fill(1));return l.all([T,x]).then(e=>(this.cache&&this.cache.set(y,e),e)).then(b).otherwise(()=>this.blankCanvasPromise)}pickFeatures(){}get tileWidth(){return this.tileSize}get tileHeight(){return this.tileSize}get maximumLevel(){}get minimumLevel(){}get rectangle(){return this.tilingScheme.rectangle}get tileDiscardPolicy(){}get ready(){return this._ready}get hasAlphaChannel(){return!0}}});