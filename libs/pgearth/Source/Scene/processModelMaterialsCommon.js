define(["./ModelUtility","../Core/defined","../Core/defaultValue","../Core/WebGLConstants","../Core/webGLConstantToGlslType","../ThirdParty/GltfPipeline/addToArray","../ThirdParty/GltfPipeline/ForEach","../ThirdParty/GltfPipeline/hasExtension","../ThirdParty/GltfPipeline/numberOfComponentsForType"],function(e,n,t,a,i,o,r,s,l){"use strict";function c(e,t){var i;switch(i=n(t.value)?t.value:n(t.index)?[t.index]:t,e){case"ambient":case"diffuse":case"emission":case"specular":return 1===i.length?a.SAMPLER_2D:a.FLOAT_VEC4;case"shininess":case"transparency":return a.FLOAT;case"transparent":case"doubleSided":return a.BOOL}}return function(u,_){if(_=t(_,{}),n(u)&&s(u,"KHR_materials_common")){s(u,"KHR_techniques_webgl")||(n(u.extensions)||(u.extensions={}),u.extensions.KHR_techniques_webgl={programs:[],shaders:[],techniques:[]},u.extensionsUsed.push("KHR_techniques_webgl"),u.extensionsRequired.push("KHR_techniques_webgl"));var v=u.extensions.KHR_techniques_webgl;!function(e){var a=e.extensions.KHR_materials_common;if(n(a)&&n(a.lights))for(var i=a.lights,o=i.length,r=0;r<o;r++){var s=i[r];if("ambient"===s.type){n(s.ambient)||(s.ambient={});var l=s.ambient;n(l.color)||(l.color=[1,1,1])}else if("directional"===s.type){n(s.directional)||(s.directional={});var c=s.directional;n(c.color)||(c.color=[1,1,1])}else if("point"===s.type){n(s.point)||(s.point={});var u=s.point;n(u.color)||(u.color=[1,1,1]),u.constantAttenuation=t(u.constantAttenuation,1),u.linearAttenuation=t(u.linearAttenuation,0),u.quadraticAttenuation=t(u.quadraticAttenuation,0)}else if("spot"===s.type){n(s.spot)||(s.spot={});var _=s.spot;n(_.color)||(_.color=[1,1,1]),_.constantAttenuation=t(_.constantAttenuation,1),_.fallOffAngle=t(_.fallOffAngle,3.14159265),_.fallOffExponent=t(_.fallOffExponent,0),_.linearAttenuation=t(_.linearAttenuation,0),_.quadraticAttenuation=t(_.quadraticAttenuation,0)}}}(u);var m=function(e){var t,i={};if(n(e.extensions)&&n(e.extensions.KHR_materials_common)&&(t=e.extensions.KHR_materials_common.lights),n(t)){var o=e.nodes;for(var r in o)if(o.hasOwnProperty(r)){var s=o[r];if(n(s.extensions)&&n(s.extensions.KHR_materials_common)){var l=s.extensions.KHR_materials_common.light;n(l)&&n(t[l])&&(t[l].node=r),delete s.extensions.KHR_materials_common}}var c=0;for(var u in t)if(t.hasOwnProperty(u)){var _=t[u],v=_.type;if("ambient"!==v&&!n(_.node)){delete t[u];continue}var m="light"+c.toString();switch(_.baseName=m,v){case"ambient":var f=_.ambient;i[m+"Color"]={type:a.FLOAT_VEC3,value:f.color};break;case"directional":var p=_.directional;i[m+"Color"]={type:a.FLOAT_VEC3,value:p.color},n(_.node)&&(i[m+"Transform"]={node:_.node,semantic:"MODELVIEW",type:a.FLOAT_MAT4});break;case"point":var d=_.point;i[m+"Color"]={type:a.FLOAT_VEC3,value:d.color},n(_.node)&&(i[m+"Transform"]={node:_.node,semantic:"MODELVIEW",type:a.FLOAT_MAT4}),i[m+"Attenuation"]={type:a.FLOAT_VEC3,value:[d.constantAttenuation,d.linearAttenuation,d.quadraticAttenuation]};break;case"spot":var g=_.spot;i[m+"Color"]={type:a.FLOAT_VEC3,value:g.color},n(_.node)&&(i[m+"Transform"]={node:_.node,semantic:"MODELVIEW",type:a.FLOAT_MAT4},i[m+"InverseTransform"]={node:_.node,semantic:"MODELVIEWINVERSE",type:a.FLOAT_MAT4,useInFragment:!0}),i[m+"Attenuation"]={type:a.FLOAT_VEC3,value:[g.constantAttenuation,g.linearAttenuation,g.quadraticAttenuation]},i[m+"FallOff"]={type:a.FLOAT_VEC2,value:[g.fallOffAngle,g.fallOffExponent]}}++c}}return i}(u),f=e.splitIncompatibleMaterials(u),p={},d=!1;return r.material(u,function(r,g){if(n(r.extensions)&&n(r.extensions.KHR_materials_common)){var h=r.extensions.KHR_materials_common,y=f[g],x=function(e,a){var i="";i+="technique:"+e.technique+";";for(var o=e.values,r=Object.keys(o).sort(),s=r.length,l=0;l<s;++l){var u=r[l];o.hasOwnProperty(u)&&(i+=u+":"+c(u,o[u]),i+=";")}var _=t(e.jointCount,0);if(i+=_.toString()+";",n(a)){var v=a.skinning;_>0&&(i+=v.type+";"),i+=a.hasVertexColors}return i}(h,y),A=p[x];n(A)||(A=function(r,u,_,v,m,f){n(v)||(v={}),f=t(f,!1);var p,d=u.techniques,g=u.shaders,h=u.programs,y=v.technique.toUpperCase();n(r.extensions)&&n(r.extensions.KHR_materials_common)&&(p=r.extensions.KHR_materials_common.lights);var x,A=v.values,T=t(v.jointCount,0),O=!1,b=!1;n(_)&&(x=_.skinning,O=x.skinned,b=_.hasVertexColors);var E,L="precision highp float;\n",C="precision highp float;\n",M="CONSTANT"!==y,R={u_modelViewMatrix:{semantic:s(r,"PGEARTH_RTC")?"PGEARTH_RTC_MODELVIEW":"MODELVIEW",type:a.FLOAT_MAT4},u_projectionMatrix:{semantic:"PROJECTION",type:a.FLOAT_MAT4}};M&&(R.u_normalMatrix={semantic:"MODELVIEWINVERSETRANSPOSE",type:a.FLOAT_MAT3}),O&&(R.u_jointMatrix={count:T,semantic:"JOINTMATRIX",type:a.FLOAT_MAT4});var D=!1;for(var w in A)if(A.hasOwnProperty(w)&&"transparent"!==w&&"doubleSided"!==w){var F=c(w,A[w]);E="u_"+w.toLowerCase(),D||F!==a.SAMPLER_2D||(D=!0),R[E]={type:F}}if(n(R.u_diffuse)&&(R.u_diffuse.semantic="_3DTILESDIFFUSE"),n(m))for(var I in m)m.hasOwnProperty(I)&&(R[E="u_"+I]=m[I]);for(E in R)if(R.hasOwnProperty(E)){var P=R[E],S=n(P.count)?"["+P.count+"]":"";P.type!==a.FLOAT_MAT3&&P.type!==a.FLOAT_MAT4||P.useInFragment?(C+="uniform "+i(P.type)+" "+E+S+";\n",delete P.useInFragment):L+="uniform "+i(P.type)+" "+E+S+";\n"}var V="";if(O){var N,H,q=l(x.type),K=!1;if(0===x.type.indexOf("MAT")&&(K=!0,q=Math.sqrt(q)),K)for(N=0;N<q;N++)for(H=0;H<q;H++)V+=0===N&&0===H?"  mat4 skinMat = ":"  skinMat += ",V+="a_weight["+N+"]["+H+"] * u_jointMatrix[int(a_joint["+N+"]["+H+"])];\n";else for(N=0;N<q;N++)V+=0===N?"  mat4 skinMat = ":"  skinMat += ",V+="a_weight["+N+"] * u_jointMatrix[int(a_joint["+N+"])];\n"}var k,G={a_position:{semantic:"POSITION"}};if(L+="attribute vec3 a_position;\n",L+="varying vec3 v_positionEC;\n",V+=O?"  vec4 pos = u_modelViewMatrix * skinMat * vec4(a_position,1.0);\n":"  vec4 pos = u_modelViewMatrix * vec4(a_position,1.0);\n",V+="  v_positionEC = pos.xyz;\n",V+="  gl_Position = u_projectionMatrix * pos;\n",C+="varying vec3 v_positionEC;\n",M&&(G.a_normal={semantic:"NORMAL"},L+="attribute vec3 a_normal;\n",L+="varying vec3 v_normal;\n",V+=O?"  v_normal = u_normalMatrix * mat3(skinMat) * a_normal;\n":"  v_normal = u_normalMatrix * a_normal;\n",C+="varying vec3 v_normal;\n"),D&&(G.a_texcoord_0={semantic:"TEXCOORD_0"},L+="attribute vec2 a_texcoord_0;\n",L+="varying vec2 "+(k="v_texcoord_0")+";\n",V+="  "+k+" = a_texcoord_0;\n",C+="varying vec2 "+k+";\n"),O){var j=e.getShaderVariable(x.type);G.a_joint={semantic:"JOINT"},G.a_weight={semantic:"WEIGHT"},L+="attribute "+j+" a_joint;\n",L+="attribute "+j+" a_weight;\n"}b&&(G.a_vertexColor={semantic:"COLOR_0"},L+="attribute vec4 a_vertexColor;\n",L+="varying vec4 v_vertexColor;\n",V+="  v_vertexColor = a_vertexColor;\n",C+="varying vec4 v_vertexColor;\n"),f&&(G.a_batchId={semantic:"_BATCHID"},L+="attribute float a_batchId;\n");var z=M&&("BLINN"===y||"PHONG"===y)&&n(R.u_specular)&&n(R.u_shininess)&&R.u_shininess>0,W=!1,B=!1,U="";for(var J in p)if(p.hasOwnProperty(J)){var X=p[J],Q=X.type.toLowerCase(),Y=X.baseName;U+="  {\n";var Z,$,ee="u_"+Y+"Color";"ambient"===Q?(B=!0,U+="    ambientLight += "+ee+";\n"):M&&(W=!0,Z="v_"+Y+"Direction",$="v_"+Y+"Position","point"!==Q&&(L+="varying vec3 "+Z+";\n",C+="varying vec3 "+Z+";\n",V+="  "+Z+" = mat3(u_"+Y+"Transform) * vec3(0.,0.,1.);\n","directional"===Q&&(U+="    vec3 l = normalize("+Z+");\n")),"directional"!==Q?(L+="varying vec3 "+$+";\n",C+="varying vec3 "+$+";\n",V+="  "+$+" = u_"+Y+"Transform[3].xyz;\n",U+="    vec3 VP = "+$+" - v_positionEC;\n",U+="    vec3 l = normalize(VP);\n",U+="    float range = length(VP);\n",U+="    float attenuation = 1.0 / (u_"+Y+"Attenuation.x + ",U+="(u_"+Y+"Attenuation.y * range) + ",U+="(u_"+Y+"Attenuation.z * range * range));\n"):U+="    float attenuation = 1.0;\n","spot"===Q&&(U+="    float spotDot = dot(l, normalize("+Z+"));\n",U+="    if (spotDot < cos(u_"+Y+"FallOff.x * 0.5))\n",U+="    {\n",U+="      attenuation = 0.0;\n",U+="    }\n",U+="    else\n",U+="    {\n",U+="        attenuation *= max(0.0, pow(spotDot, u_"+Y+"FallOff.y));\n",U+="    }\n"),U+="    diffuseLight += "+ee+"* max(dot(normal,l), 0.) * attenuation;\n",z&&("BLINN"===y?(U+="    vec3 h = normalize(l + viewDir);\n",U+="    float specularIntensity = max(0., pow(max(dot(normal, h), 0.), u_shininess)) * attenuation;\n"):(U+="    vec3 reflectDir = reflect(-l, normal);\n",U+="    float specularIntensity = max(0., pow(max(dot(reflectDir, viewDir), 0.), u_shininess)) * attenuation;\n"),U+="    specularLight += "+ee+" * specularIntensity;\n")),U+="  }\n"}B||(U+="  ambientLight += vec3(0.2, 0.2, 0.2);\n"),W||"CONSTANT"===y||(U+="  vec3 l = normalize(czm_sunDirectionEC);\n",U+="  diffuseLight += vec3(1.0, 1.0, 1.0) * max(dot(normal,l), 0.2);\n",z&&("BLINN"===y?(U+="  vec3 h = normalize(l + viewDir);\n",U+="  float specularIntensity = max(0., pow(max(dot(normal, h), 0.), u_shininess));\n"):(U+="  vec3 reflectDir = reflect(-l, normal);\n",U+="  float specularIntensity = max(0., pow(max(dot(reflectDir, viewDir), 0.), u_shininess));\n"),U+="  specularLight += vec3(1.0, 1.0, 1.0) * specularIntensity;\n")),L+="void main(void) {\n",L+=V,L+="}\n",C+="void main(void) {\n";var ne,te="  vec3 color = vec3(0.0, 0.0, 0.0);\n";M&&(C+="  vec3 normal = normalize(v_normal);\n",v.doubleSided&&(C+="  if (gl_FrontFacing == false)\n",C+="  {\n",C+="    normal = -normal;\n",C+="  }\n")),"CONSTANT"!==y?(n(R.u_diffuse)&&(R.u_diffuse.type===a.SAMPLER_2D?C+="  vec4 diffuse = texture2D(u_diffuse, "+k+");\n":C+="  vec4 diffuse = u_diffuse;\n",C+="  vec3 diffuseLight = vec3(0.0, 0.0, 0.0);\n",te+="  color += diffuse.rgb * diffuseLight;\n"),z&&(R.u_specular.type===a.SAMPLER_2D?C+="  vec3 specular = texture2D(u_specular, "+k+").rgb;\n":C+="  vec3 specular = u_specular.rgb;\n",C+="  vec3 specularLight = vec3(0.0, 0.0, 0.0);\n",te+="  color += specular * specularLight;\n"),ne=n(R.u_transparency)?"  gl_FragColor = vec4(color * diffuse.a * u_transparency, diffuse.a * u_transparency);\n":"  gl_FragColor = vec4(color * diffuse.a, diffuse.a);\n"):ne=n(R.u_transparency)?"  gl_FragColor = vec4(color * u_transparency, u_transparency);\n":"  gl_FragColor = vec4(color, 1.0);\n",b&&(te+="  color *= v_vertexColor.rgb;\n"),n(R.u_emission)&&(R.u_emission.type===a.SAMPLER_2D?C+="  vec3 emission = texture2D(u_emission, "+k+").rgb;\n":C+="  vec3 emission = u_emission.rgb;\n",te+="  color += emission;\n"),(n(R.u_ambient)||"CONSTANT"!==y)&&(n(R.u_ambient)?R.u_ambient.type===a.SAMPLER_2D?C+="  vec3 ambient = texture2D(u_ambient, "+k+").rgb;\n":C+="  vec3 ambient = u_ambient.rgb;\n":C+="  vec3 ambient = diffuse.rgb;\n",te+="  color += ambient * ambientLight;\n"),C+="  vec3 viewDir = -normalize(v_positionEC);\n",C+="  vec3 ambientLight = vec3(0.0, 0.0, 0.0);\n",C+=U,C+=te,C+=ne,C+="}\n";var ae=o(g,{type:a.VERTEX_SHADER,extras:{_pipeline:{source:L,extension:".glsl"}}}),ie=o(g,{type:a.FRAGMENT_SHADER,extras:{_pipeline:{source:C,extension:".glsl"}}}),oe=o(h,{fragmentShader:ie,vertexShader:ae});return o(d,{attributes:G,program:oe,uniforms:R})}(u,v,y,h,m,_.addBatchIdToGeneratedShaders),p[x]=A,d=!0);var T={},O=h.values;for(var b in O)O.hasOwnProperty(b)&&"transparent"!==b&&"doubleSided"!==b&&(T["u_"+b.toLowerCase()]=O[b]);r.extensions.KHR_techniques_webgl={technique:A,values:T},r.alphaMode="OPAQUE",h.transparent&&(r.alphaMode="BLEND"),h.doubleSided&&(r.doubleSided=!0)}}),d?(e.ensureSemanticExistence(u),u):u}}});