define(["./Check","./defaultValue","./defined"],function(n,t,e){"use strict";function c(n,e,c){this.clock=t(n,0),this.cone=t(e,0),this.magnitude=t(c,1)}return c.fromCartesian3=function(t,o){n.typeOf.object("cartesian3",t);var i=t.x,u=t.y,a=t.z,r=i*i+u*u;return e(o)||(o=new c),o.clock=Math.atan2(u,i),o.cone=Math.atan2(Math.sqrt(r),a),o.magnitude=Math.sqrt(r+a*a),o},c.clone=function(n,t){if(e(n))return e(t)?(t.clock=n.clock,t.cone=n.cone,t.magnitude=n.magnitude,t):new c(n.clock,n.cone,n.magnitude)},c.normalize=function(t,o){return n.typeOf.object("spherical",t),e(o)?(o.clock=t.clock,o.cone=t.cone,o.magnitude=1,o):new c(t.clock,t.cone,1)},c.equals=function(n,t){return n===t||e(n)&&e(t)&&n.clock===t.clock&&n.cone===t.cone&&n.magnitude===t.magnitude},c.equalsEpsilon=function(n,c,o){return o=t(o,0),n===c||e(n)&&e(c)&&Math.abs(n.clock-c.clock)<=o&&Math.abs(n.cone-c.cone)<=o&&Math.abs(n.magnitude-c.magnitude)<=o},c.prototype.equals=function(n){return c.equals(this,n)},c.prototype.clone=function(n){return c.clone(this,n)},c.prototype.equalsEpsilon=function(n,t){return c.equalsEpsilon(this,n,t)},c.prototype.toString=function(){return"("+this.clock+", "+this.cone+", "+this.magnitude+")"},c});