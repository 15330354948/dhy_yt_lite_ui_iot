define(["./arrayRemoveDuplicates","./BoundingRectangle","./BoundingSphere","./Cartesian2","./Cartesian3","./Check","./ComponentDatatype","./CoplanarPolygonGeometryLibrary","./defaultValue","./defined","./Ellipsoid","./Geometry","./GeometryAttribute","./GeometryAttributes","./GeometryInstance","./GeometryPipeline","./IndexDatatype","./Math","./Matrix3","./PolygonGeometryLibrary","./PolygonPipeline","./PrimitiveType","./Quaternion","./VertexFormat"],function(e,t,n,o,r,a,i,s,l,p,c,y,g,u,m,d,v,h,w,f,b,A,P,F){"use strict";var x=new r,T=new t,_=new o,k=new o,L=new r,D=new r,E=new r,R=new r,H=new r,G=new r,I=new P,O=new w,B=new w,C=new r;function z(e,t,n,a,s,l,p,c){var m=e.positions,d=b.triangulate(e.positions2D,e.holes);d.length<3&&(d=[0,1,2]);var f=v.createTypedArray(m.length,d.length);f.set(d);var F=O;if(0!==a){var T=P.fromAxisAngle(l,a,I);if(F=w.fromQuaternion(T,F),t.tangent||t.bitangent){T=P.fromAxisAngle(l,-a,I);var L=w.fromQuaternion(T,B);p=r.normalize(w.multiplyByVector(L,p,p),p),t.bitangent&&(c=r.normalize(r.cross(l,p,c),c))}}else F=w.clone(w.IDENTITY,F);var D=k;t.st&&(D.x=n.x,D.y=n.y);for(var E=m.length,R=3*E,H=new Float64Array(R),G=t.normal?new Float32Array(R):void 0,C=t.tangent?new Float32Array(R):void 0,z=t.bitangent?new Float32Array(R):void 0,S=t.st?new Float32Array(2*E):void 0,N=0,j=0,M=0,V=0,Q=0,U=0;U<E;U++){var Y=m[U];if(H[N++]=Y.x,H[N++]=Y.y,H[N++]=Y.z,t.st){var q=s(w.multiplyByVector(F,Y,x),_);o.subtract(q,D,q);var J=h.clamp(q.x/n.width,0,1),W=h.clamp(q.y/n.height,0,1);S[Q++]=J,S[Q++]=W}t.normal&&(G[j++]=l.x,G[j++]=l.y,G[j++]=l.z),t.tangent&&(C[V++]=p.x,C[V++]=p.y,C[V++]=p.z),t.bitangent&&(z[M++]=c.x,z[M++]=c.y,z[M++]=c.z)}var Z=new u;return t.position&&(Z.position=new g({componentDatatype:i.DOUBLE,componentsPerAttribute:3,values:H})),t.normal&&(Z.normal=new g({componentDatatype:i.FLOAT,componentsPerAttribute:3,values:G})),t.tangent&&(Z.tangent=new g({componentDatatype:i.FLOAT,componentsPerAttribute:3,values:C})),t.bitangent&&(Z.bitangent=new g({componentDatatype:i.FLOAT,componentsPerAttribute:3,values:z})),t.st&&(Z.st=new g({componentDatatype:i.FLOAT,componentsPerAttribute:2,values:S})),new y({attributes:Z,indices:f,primitiveType:A.TRIANGLES})}function S(e){var t=(e=l(e,l.EMPTY_OBJECT)).polygonHierarchy;a.defined("options.polygonHierarchy",t);var n=l(e.vertexFormat,F.DEFAULT);this._vertexFormat=F.clone(n),this._polygonHierarchy=t,this._stRotation=l(e.stRotation,0),this._ellipsoid=c.clone(l(e.ellipsoid,c.WGS84)),this._workerName="createCoplanarPolygonGeometry",this.packedLength=f.computeHierarchyPackedLength(t)+F.packedLength+c.packedLength+2}S.fromPositions=function(e){return e=l(e,l.EMPTY_OBJECT),a.defined("options.positions",e.positions),new S({polygonHierarchy:{positions:e.positions},vertexFormat:e.vertexFormat,stRotation:e.stRotation,ellipsoid:e.ellipsoid})},S.pack=function(e,t,n){return a.typeOf.object("value",e),a.defined("array",t),n=l(n,0),n=f.packPolygonHierarchy(e._polygonHierarchy,t,n),c.pack(e._ellipsoid,t,n),n+=c.packedLength,F.pack(e._vertexFormat,t,n),n+=F.packedLength,t[n++]=e._stRotation,t[n]=e.packedLength,t};var N=c.clone(c.UNIT_SPHERE),j=new F,M={polygonHierarchy:{}};return S.unpack=function(e,t,n){a.defined("array",e),t=l(t,0);var o=f.unpackPolygonHierarchy(e,t);t=o.startingIndex,delete o.startingIndex;var r=c.unpack(e,t,N);t+=c.packedLength;var i=F.unpack(e,t,j);t+=F.packedLength;var s=e[t++],y=e[t];return p(n)||(n=new S(M)),n._polygonHierarchy=o,n._ellipsoid=c.clone(r,n._ellipsoid),n._vertexFormat=F.clone(i,n._vertexFormat),n._stRotation=s,n.packedLength=y,n},S.createGeometry=function(t){var o=t._vertexFormat,a=t._polygonHierarchy,i=t._stRotation,l=a.positions;if(!((l=e(l,r.equalsEpsilon,!0)).length<3)){var p=L,c=D,g=E,u=H,w=G;if(s.computeProjectTo2DArguments(l,R,u,w)){if(p=r.cross(u,w,p),p=r.normalize(p,p),!r.equalsEpsilon(R,r.ZERO,h.EPSILON6)){var b=t._ellipsoid.geodeticSurfaceNormal(R,C);r.dot(p,b)<0&&(p=r.negate(p,p),u=r.negate(u,u))}var A=s.createProjectPointsTo2DFunction(R,u,w),P=s.createProjectPointTo2DFunction(R,u,w);o.tangent&&(c=r.clone(u,c)),o.bitangent&&(g=r.clone(w,g));var F=f.polygonsFromHierarchy(a,A,!1),x=F.hierarchy,_=F.polygons;if(0!==x.length){l=x[0].outerRing;for(var k=n.fromPoints(l),I=f.computeBoundingRectangle(p,P,l,i,T),O=[],B=0;B<_.length;B++){var S=new m({geometry:z(_[B],o,I,i,P,p,c,g)});O.push(S)}var N=d.combineInstances(O)[0];N.attributes.position.values=new Float64Array(N.attributes.position.values),N.indices=v.createTypedArray(N.attributes.position.values.length/3,N.indices);var j=N.attributes;return o.position||delete j.position,new y({attributes:j,indices:N.indices,primitiveType:N.primitiveType,boundingSphere:k})}}}},S});