define(["../Core/defaultValue","../Core/defined","../Renderer/DrawCommand","../Renderer/RenderState","../Renderer/ShaderSource"],function(e,r,a,n,d){"use strict";function o(){}var t=/\bgl_FragDepthEXT\b/,m=/\bdiscard\b/;o.createDepthOnlyDerivedCommand=function(e,o,i,h){var c,s;return r(h)||(h={}),r(h.depthOnlyCommand)&&(c=h.depthOnlyCommand.shaderProgram,s=h.depthOnlyCommand.renderState),h.depthOnlyCommand=a.shallowClone(o,h.depthOnlyCommand),r(c)&&h.shaderProgramId===o.shaderProgram.id?(h.depthOnlyCommand.shaderProgram=c,h.depthOnlyCommand.renderState=s):(h.depthOnlyCommand.shaderProgram=function(e,a){var n=e.shaderCache.getDerivedShaderProgram(a,"depthOnly");if(!r(n)){var o,i=a._attributeLocations,h=a.fragmentShaderSource,c=!1,s=h.sources,g=s.length;for(o=0;o<g;++o)if(t.test(s[o])||m.test(s[o])){c=!0;break}var f=!1,l=h.defines;for(g=l.length,o=0;o<g;++o)if("LOG_DEPTH"===l[o]){f=!0;break}c||f?!c&&f&&(h=new d({defines:["LOG_DEPTH"],sources:["#ifdef GL_EXT_frag_depth \n#extension GL_EXT_frag_depth : enable \n#endif \n\nvoid main() \n{ \n    gl_FragColor = vec4(1.0); \n    czm_writeLogDepth(); \n} \n"]})):h=new d({sources:["void main() \n{ \n    gl_FragColor = vec4(1.0); \n} \n"]}),n=e.shaderCache.createDerivedShaderProgram(a,"depthOnly",{vertexShaderSource:a.vertexShaderSource,fragmentShaderSource:h,attributeLocations:i})}return n}(i,o.shaderProgram),h.depthOnlyCommand.renderState=function(e,a){var d=e._depthOnlyRenderStateCache,o=d[a.id];if(!r(o)){var t=n.getState(a);t.depthMask=!0,t.colorMask={red:!1,green:!1,blue:!1,alpha:!1},o=n.fromCache(t),d[a.id]=o}return o}(e,o.renderState),h.shaderProgramId=o.shaderProgram.id),h};var i=/\s+czm_writeLogDepth\(/,h=/\s+czm_vertexLogDepth\(/,c=/\s*#extension\s+GL_EXT_frag_depth\s*:\s*enable/;return o.createLogDepthCommand=function(e,n,o){var t;return r(o)||(o={}),r(o.command)&&(t=o.command.shaderProgram),o.command=a.shallowClone(e,o.command),r(t)&&o.shaderProgramId===e.shaderProgram.id?o.command.shaderProgram=t:(o.command.shaderProgram=function(e,a){var n=e.shaderCache.getDerivedShaderProgram(a,"logDepth");if(!r(n)){var o,t,m=a._attributeLocations,s=a.vertexShaderSource.clone(),g=a.fragmentShaderSource.clone();s.defines=r(s.defines)?s.defines.slice(0):[],s.defines.push("LOG_DEPTH"),g.defines=r(g.defines)?g.defines.slice(0):[],g.defines.push("LOG_DEPTH");var f=!1,l=s.sources,u=l.length;for(o=0;o<u;++o)if(h.test(l[o])){f=!0;break}if(!f){for(o=0;o<u;++o)l[o]=d.replaceMain(l[o],"czm_log_depth_main");t="\n\nvoid main() \n{ \n    czm_log_depth_main(); \n    czm_vertexLogDepth(); \n} \n",l.push(t)}var p=!0;for(f=!1,u=(l=g.sources).length,o=0;o<u;++o)i.test(l[o])&&(f=!0),c.test(l[o])&&(p=!1);var S="";if(p&&(S+="#ifdef GL_EXT_frag_depth \n#extension GL_EXT_frag_depth : enable \n#endif \n\n"),!f){for(o=0;o<u;o++)l[o]=d.replaceMain(l[o],"czm_log_depth_main");S+="\nvoid main() \n{ \n    czm_log_depth_main(); \n    czm_writeLogDepth(); \n} \n"}l.push(S),n=e.shaderCache.createDerivedShaderProgram(a,"logDepth",{vertexShaderSource:s,fragmentShaderSource:g,attributeLocations:m})}return n}(n,e.shaderProgram),o.shaderProgramId=e.shaderProgram.id),o},o.createPickDerivedCommand=function(e,o,t,m){var i,h;return r(m)||(m={}),r(m.pickCommand)&&(i=m.pickCommand.shaderProgram,h=m.pickCommand.renderState),m.pickCommand=a.shallowClone(o,m.pickCommand),r(i)&&m.shaderProgramId===o.shaderProgram.id?(m.pickCommand.shaderProgram=i,m.pickCommand.renderState=h):(m.pickCommand.shaderProgram=function(e,a,n){var o=e.shaderCache.getDerivedShaderProgram(a,"pick");if(!r(o)){for(var t=a._attributeLocations,m=a.fragmentShaderSource,i=m.sources,h=i.length,c="void main() \n{ \n    czm_non_pick_main(); \n    if (gl_FragColor.a == 0.0) { \n        discard; \n    } \n    gl_FragColor = "+n+"; \n} \n",s=new Array(h+1),g=0;g<h;++g)s[g]=d.replaceMain(i[g],"czm_non_pick_main");s[h]=c,m=new d({sources:s,defines:m.defines}),o=e.shaderCache.createDerivedShaderProgram(a,"pick",{vertexShaderSource:a.vertexShaderSource,fragmentShaderSource:m,attributeLocations:t})}return o}(t,o.shaderProgram,o.pickId),m.pickCommand.renderState=function(e,a){var d=e._pickRenderStateCache,o=d[a.id];if(!r(o)){var t=n.getState(a);t.blending.enabled=!1,t.depthMask=!0,o=n.fromCache(t),d[a.id]=o}return o}(e,o.renderState),m.shaderProgramId=o.shaderProgram.id),m},o.createHdrCommand=function(e,n,d){var o;return r(d)||(d={}),r(d.command)&&(o=d.command.shaderProgram),d.command=a.shallowClone(e,d.command),r(o)&&d.shaderProgramId===e.shaderProgram.id?d.command.shaderProgram=o:(d.command.shaderProgram=function(e,a){var n=e.shaderCache.getDerivedShaderProgram(a,"HDR");if(!r(n)){var d=a._attributeLocations,o=a.vertexShaderSource.clone(),t=a.fragmentShaderSource.clone();o.defines=r(o.defines)?o.defines.slice(0):[],o.defines.push("HDR"),t.defines=r(t.defines)?t.defines.slice(0):[],t.defines.push("HDR"),n=e.shaderCache.createDerivedShaderProgram(a,"HDR",{vertexShaderSource:o,fragmentShaderSource:t,attributeLocations:d})}return n}(n,e.shaderProgram),d.shaderProgramId=e.shaderProgram.id),d},o});