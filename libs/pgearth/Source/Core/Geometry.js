define(["./Cartesian2","./Cartesian3","./Cartographic","./Check","./defaultValue","./defined","./DeveloperError","./GeometryOffsetAttribute","./GeometryType","./Matrix2","./Matrix3","./Matrix4","./PrimitiveType","./Quaternion","./Rectangle","./Transforms"],function(t,e,r,i,n,a,o,u,s,y,m,p,b,f,h,l){"use strict";function c(t){t=n(t,n.EMPTY_OBJECT),i.typeOf.object("options.attributes",t.attributes),this.attributes=t.attributes,this.indices=t.indices,this.primitiveType=n(t.primitiveType,b.TRIANGLES),this.boundingSphere=t.boundingSphere,this.geometryType=n(t.geometryType,s.NONE),this.boundingSphereCV=t.boundingSphereCV,this.offsetAttribute=t.offsetAttribute}c.computeNumberOfVertices=function(t){i.typeOf.object("geometry",t);var e=-1;for(var r in t.attributes)if(t.attributes.hasOwnProperty(r)&&a(t.attributes[r])&&a(t.attributes[r].values)){var n=t.attributes[r],u=n.values.length/n.componentsPerAttribute;if(e!==u&&-1!==e)throw new o("All attribute lists must have the same number of attributes.");e=u}return e};var w=new r,x=new e,I=new p,N=[new r,new r,new r],T=[new t,new t,new t],v=[new t,new t,new t],d=new e,g=new f,A=new p,V=new y;return c._textureCoordinateRotationPoints=function(i,n,a,o){var u,s=h.center(o,w),b=r.toCartesian(s,a,x),c=l.eastNorthUpToFixedFrame(b,a,I),E=p.inverse(c,I),C=T,O=N;O[0].longitude=o.west,O[0].latitude=o.south,O[1].longitude=o.west,O[1].latitude=o.north,O[2].longitude=o.east,O[2].latitude=o.south;var P=d;for(u=0;u<3;u++)r.toCartesian(O[u],a,P),P=p.multiplyByPointAsVector(E,P,P),C[u].x=P.x,C[u].y=P.y;var M=f.fromAxisAngle(e.UNIT_Z,-n,g),S=m.fromQuaternion(M,A),_=i.length,F=Number.POSITIVE_INFINITY,B=Number.POSITIVE_INFINITY,G=Number.NEGATIVE_INFINITY,Y=Number.NEGATIVE_INFINITY;for(u=0;u<_;u++)P=p.multiplyByPointAsVector(E,i[u],P),P=m.multiplyByVector(S,P,P),F=Math.min(F,P.x),B=Math.min(B,P.y),G=Math.max(G,P.x),Y=Math.max(Y,P.y);var k=y.fromRotation(n,V),R=v;R[0].x=F,R[0].y=B,R[1].x=F,R[1].y=Y,R[2].x=G,R[2].y=B;var j=C[0],Q=C[2].x-j.x,U=C[1].y-j.y;for(u=0;u<3;u++){var D=R[u];y.multiplyByVector(k,D,D),D.x=(D.x-j.x)/Q,D.y=(D.y-j.y)/U}var J=R[0],L=R[1],Z=R[2],q=new Array(6);return t.pack(J,q),t.pack(L,q,2),t.pack(Z,q,4),q},c});