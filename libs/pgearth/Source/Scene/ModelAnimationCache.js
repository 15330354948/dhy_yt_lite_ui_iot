define(["../Core/Cartesian3","../Core/ComponentDatatype","../Core/defaultValue","../Core/defined","../Core/LinearSpline","../Core/Matrix4","../Core/Quaternion","../Core/QuaternionSpline","../Core/WebGLConstants","../Core/WeightSpline","../ThirdParty/GltfPipeline/getAccessorByteStride","../ThirdParty/GltfPipeline/numberOfComponentsForType","./AttributeType"],function(e,r,t,n,f,i,a,o,u,s,c,p,y){"use strict";function b(){}var l=/^data\:/i;function v(e,r){var t=e.gltf,n=t.buffers,f=t.bufferViews[r.bufferView],i=n[f.buffer],a=f.byteOffset+r.byteOffset,o=r.count*p(r.type),u=l.test(i.uri)?"":i.uri;return e.cacheKey+"//"+u+"/"+a+"/"+o}var w={};b.getAnimationParameterValues=function(f,i){var o=v(f,i),u=w[o];if(!n(u)){var s=f.gltf,y=s.buffers,b=s.bufferViews[i.bufferView],l=y[b.buffer].extras._pipeline.source,C=i.componentType,m=i.type,A=p(m),h=i.count,g=c(s,i);u=new Array(h);for(var V=t(i.byteOffset,0),O=b.byteOffset+V,T=0;T<h;T++){var d=r.createArrayBufferView(C,l.buffer,l.byteOffset+O,A);"SCALAR"===m?u[T]=d[0]:"VEC3"===m?u[T]=e.fromArray(d):"VEC4"===m&&(u[T]=a.unpack(d)),O+=g}n(f.cacheKey)&&(w[o]=u)}return u};var C={};function m(e){this._value=e}m.prototype.evaluate=function(e,r){return this._value},m.prototype.wrapTime=function(e){return 0},m.prototype.clampTime=function(e){return 0},b.getAnimationSpline=function(e,r,t,i,a,u,c,p){var y=function(e,r,t){return e.cacheKey+"//"+r+"/"+t}(e,r,i),b=C[y];if(!n(b)){var l=u,v=p;1===l.length&&1===v.length?b=new m(v[0]):"LINEAR"===a.interpolation&&("translation"===c||"scale"===c?b=new f({times:l,points:v}):"rotation"===c?b=new o({times:l,points:v}):"weights"===c&&(b=new s({times:l,weights:v}))),n(e.cacheKey)&&(C[y]=b)}return b};var A={};return b.getSkinInverseBindMatrices=function(e,t){var f=v(e,t),a=A[f];if(!n(a)){var o=e.gltf,s=o.buffers,b=o.bufferViews[t.bufferView],l=s[b.buffer].extras._pipeline.source,w=t.componentType,C=t.type,m=t.count,h=c(o,t),g=b.byteOffset+t.byteOffset,V=p(C);if(a=new Array(m),w===u.FLOAT&&C===y.MAT4)for(var O=0;O<m;++O){var T=r.createArrayBufferView(w,l.buffer,l.byteOffset+g,V);a[O]=i.fromArray(T),g+=h}A[f]=a}return a},b});