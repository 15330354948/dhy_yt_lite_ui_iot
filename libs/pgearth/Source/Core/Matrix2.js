define(["./Cartesian2","./Check","./defaultValue","./defined","./defineProperties","./freezeObject"],function(e,t,n,r,u,a){"use strict";function o(e,t,r,u){this[0]=n(e,0),this[1]=n(r,0),this[2]=n(t,0),this[3]=n(u,0)}o.packedLength=4,o.pack=function(e,r,u){return t.typeOf.object("value",e),t.defined("array",r),u=n(u,0),r[u++]=e[0],r[u++]=e[1],r[u++]=e[2],r[u++]=e[3],r},o.unpack=function(e,u,a){return t.defined("array",e),u=n(u,0),r(a)||(a=new o),a[0]=e[u++],a[1]=e[u++],a[2]=e[u++],a[3]=e[u++],a},o.clone=function(e,t){if(r(e))return r(t)?(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t):new o(e[0],e[2],e[1],e[3])},o.fromArray=function(e,u,a){return t.defined("array",e),u=n(u,0),r(a)||(a=new o),a[0]=e[u],a[1]=e[u+1],a[2]=e[u+2],a[3]=e[u+3],a},o.fromColumnMajorArray=function(e,n){return t.defined("values",e),o.clone(e,n)},o.fromRowMajorArray=function(e,n){return t.defined("values",e),r(n)?(n[0]=e[0],n[1]=e[2],n[2]=e[1],n[3]=e[3],n):new o(e[0],e[1],e[2],e[3])},o.fromScale=function(e,n){return t.typeOf.object("scale",e),r(n)?(n[0]=e.x,n[1]=0,n[2]=0,n[3]=e.y,n):new o(e.x,0,0,e.y)},o.fromUniformScale=function(e,n){return t.typeOf.number("scale",e),r(n)?(n[0]=e,n[1]=0,n[2]=0,n[3]=e,n):new o(e,0,0,e)},o.fromRotation=function(e,n){t.typeOf.number("angle",e);var u=Math.cos(e),a=Math.sin(e);return r(n)?(n[0]=u,n[1]=a,n[2]=-a,n[3]=u,n):new o(u,-a,a,u)},o.toArray=function(e,n){return t.typeOf.object("matrix",e),r(n)?(n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=e[3],n):[e[0],e[1],e[2],e[3]]},o.getElementIndex=function(e,n){return t.typeOf.number.greaterThanOrEquals("row",n,0),t.typeOf.number.lessThanOrEquals("row",n,1),t.typeOf.number.greaterThanOrEquals("column",e,0),t.typeOf.number.lessThanOrEquals("column",e,1),2*e+n},o.getColumn=function(e,n,r){t.typeOf.object("matrix",e),t.typeOf.number.greaterThanOrEquals("index",n,0),t.typeOf.number.lessThanOrEquals("index",n,1),t.typeOf.object("result",r);var u=2*n,a=e[u],o=e[u+1];return r.x=a,r.y=o,r},o.setColumn=function(e,n,r,u){t.typeOf.object("matrix",e),t.typeOf.number.greaterThanOrEquals("index",n,0),t.typeOf.number.lessThanOrEquals("index",n,1),t.typeOf.object("cartesian",r),t.typeOf.object("result",u);var a=2*n;return(u=o.clone(e,u))[a]=r.x,u[a+1]=r.y,u},o.getRow=function(e,n,r){t.typeOf.object("matrix",e),t.typeOf.number.greaterThanOrEquals("index",n,0),t.typeOf.number.lessThanOrEquals("index",n,1),t.typeOf.object("result",r);var u=e[n],a=e[n+2];return r.x=u,r.y=a,r},o.setRow=function(e,n,r,u){return t.typeOf.object("matrix",e),t.typeOf.number.greaterThanOrEquals("index",n,0),t.typeOf.number.lessThanOrEquals("index",n,1),t.typeOf.object("cartesian",r),t.typeOf.object("result",u),(u=o.clone(e,u))[n]=r.x,u[n+2]=r.y,u};var f=new e;o.getScale=function(n,r){return t.typeOf.object("matrix",n),t.typeOf.object("result",r),r.x=e.magnitude(e.fromElements(n[0],n[1],f)),r.y=e.magnitude(e.fromElements(n[2],n[3],f)),r};var c=new e;return o.getMaximumScale=function(t){return o.getScale(t,c),e.maximumComponent(c)},o.multiply=function(e,n,r){t.typeOf.object("left",e),t.typeOf.object("right",n),t.typeOf.object("result",r);var u=e[0]*n[0]+e[2]*n[1],a=e[0]*n[2]+e[2]*n[3],o=e[1]*n[0]+e[3]*n[1],f=e[1]*n[2]+e[3]*n[3];return r[0]=u,r[1]=o,r[2]=a,r[3]=f,r},o.add=function(e,n,r){return t.typeOf.object("left",e),t.typeOf.object("right",n),t.typeOf.object("result",r),r[0]=e[0]+n[0],r[1]=e[1]+n[1],r[2]=e[2]+n[2],r[3]=e[3]+n[3],r},o.subtract=function(e,n,r){return t.typeOf.object("left",e),t.typeOf.object("right",n),t.typeOf.object("result",r),r[0]=e[0]-n[0],r[1]=e[1]-n[1],r[2]=e[2]-n[2],r[3]=e[3]-n[3],r},o.multiplyByVector=function(e,n,r){t.typeOf.object("matrix",e),t.typeOf.object("cartesian",n),t.typeOf.object("result",r);var u=e[0]*n.x+e[2]*n.y,a=e[1]*n.x+e[3]*n.y;return r.x=u,r.y=a,r},o.multiplyByScalar=function(e,n,r){return t.typeOf.object("matrix",e),t.typeOf.number("scalar",n),t.typeOf.object("result",r),r[0]=e[0]*n,r[1]=e[1]*n,r[2]=e[2]*n,r[3]=e[3]*n,r},o.multiplyByScale=function(e,n,r){return t.typeOf.object("matrix",e),t.typeOf.object("scale",n),t.typeOf.object("result",r),r[0]=e[0]*n.x,r[1]=e[1]*n.x,r[2]=e[2]*n.y,r[3]=e[3]*n.y,r},o.negate=function(e,n){return t.typeOf.object("matrix",e),t.typeOf.object("result",n),n[0]=-e[0],n[1]=-e[1],n[2]=-e[2],n[3]=-e[3],n},o.transpose=function(e,n){t.typeOf.object("matrix",e),t.typeOf.object("result",n);var r=e[0],u=e[2],a=e[1],o=e[3];return n[0]=r,n[1]=u,n[2]=a,n[3]=o,n},o.abs=function(e,n){return t.typeOf.object("matrix",e),t.typeOf.object("result",n),n[0]=Math.abs(e[0]),n[1]=Math.abs(e[1]),n[2]=Math.abs(e[2]),n[3]=Math.abs(e[3]),n},o.equals=function(e,t){return e===t||r(e)&&r(t)&&e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]},o.equalsArray=function(e,t,n){return e[0]===t[n]&&e[1]===t[n+1]&&e[2]===t[n+2]&&e[3]===t[n+3]},o.equalsEpsilon=function(e,n,u){return t.typeOf.number("epsilon",u),e===n||r(e)&&r(n)&&Math.abs(e[0]-n[0])<=u&&Math.abs(e[1]-n[1])<=u&&Math.abs(e[2]-n[2])<=u&&Math.abs(e[3]-n[3])<=u},o.IDENTITY=a(new o(1,0,0,1)),o.ZERO=a(new o(0,0,0,0)),o.COLUMN0ROW0=0,o.COLUMN0ROW1=1,o.COLUMN1ROW0=2,o.COLUMN1ROW1=3,u(o.prototype,{length:{get:function(){return o.packedLength}}}),o.prototype.clone=function(e){return o.clone(this,e)},o.prototype.equals=function(e){return o.equals(this,e)},o.prototype.equalsEpsilon=function(e,t){return o.equalsEpsilon(this,e,t)},o.prototype.toString=function(){return"("+this[0]+", "+this[2]+")\n("+this[1]+", "+this[3]+")"},o});