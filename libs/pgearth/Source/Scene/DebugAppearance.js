define(["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","./Appearance"],function(e,t,r,n,a){"use strict";function o(r){var o=(r=e(r,e.EMPTY_OBJECT)).attributeName,i=r.perInstanceAttribute;if(!t(o))throw new n("options.attributeName is required.");t(i)||(i=!1);var c,u=e(r.glslDatatype,"vec3"),s="v_"+o;if("normal"===o||"tangent"===o||"bitangent"===o)c="vec4 getColor() { return vec4(("+s+" + vec3(1.0)) * 0.5, 1.0); }\n";else switch("st"===o&&(u="vec2"),u){case"float":c="vec4 getColor() { return vec4(vec3("+s+"), 1.0); }\n";break;case"vec2":c="vec4 getColor() { return vec4("+s+", 0.0, 1.0); }\n";break;case"vec3":c="vec4 getColor() { return vec4("+s+", 1.0); }\n";break;case"vec4":c="vec4 getColor() { return "+s+"; }\n";break;default:throw new n("options.glslDatatype must be float, vec2, vec3, or vec4.")}var l="attribute vec3 position3DHigh;\nattribute vec3 position3DLow;\nattribute float batchId;\n"+(i?"":"attribute "+u+" "+o+";\n")+"varying "+u+" "+s+";\nvoid main()\n{\nvec4 p = czm_translateRelativeToEye(position3DHigh, position3DLow);\n"+(i?s+" = czm_batchTable_"+o+"(batchId);\n":s+" = "+o+";\n")+"gl_Position = czm_modelViewProjectionRelativeToEye * p;\n}",v="varying "+u+" "+s+";\n"+c+"\nvoid main()\n{\ngl_FragColor = getColor();\n}";this.material=void 0,this.translucent=e(r.translucent,!1),this._vertexShaderSource=e(r.vertexShaderSource,l),this._fragmentShaderSource=e(r.fragmentShaderSource,v),this._renderState=a.getDefaultRenderState(!1,!1,r.renderState),this._closed=e(r.closed,!1),this._attributeName=o,this._glslDatatype=u}return r(o.prototype,{vertexShaderSource:{get:function(){return this._vertexShaderSource}},fragmentShaderSource:{get:function(){return this._fragmentShaderSource}},renderState:{get:function(){return this._renderState}},closed:{get:function(){return this._closed}},attributeName:{get:function(){return this._attributeName}},glslDatatype:{get:function(){return this._glslDatatype}}}),o.prototype.getFragmentShaderSource=a.prototype.getFragmentShaderSource,o.prototype.isTranslucent=a.prototype.isTranslucent,o.prototype.getRenderState=a.prototype.getRenderState,o});