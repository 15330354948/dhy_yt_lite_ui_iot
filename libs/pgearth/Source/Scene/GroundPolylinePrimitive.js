define(["../Core/ApproximateTerrainHeights","../Core/ComponentDatatype","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/GeometryInstance","../Core/GeometryInstanceAttribute","../Core/GroundPolylineGeometry","../Core/isArray","../Shaders/PolylineShadowVolumeVS","../Shaders/PolylineShadowVolumeFS","../Shaders/PolylineShadowVolumeMorphVS","../Shaders/PolylineShadowVolumeMorphFS","../Renderer/DrawCommand","../Renderer/Pass","../Renderer/RenderState","../Renderer/ShaderProgram","../Renderer/ShaderSource","../ThirdParty/when","./BlendingState","./ClassificationType","./CullFace","./PolylineColorAppearance","./PolylineMaterialAppearance","./Primitive","./SceneMode","./StencilConstants","./StencilFunction","./StencilOperation"],function(e,r,t,i,o,n,a,s,d,h,c,l,p,m,u,_,v,S,g,y,f,C,P,w,b,I,T,E,D,A,M){"use strict";function O(e){e=t(e,t.EMPTY_OBJECT),this.geometryInstances=e.geometryInstances,this._hasPerInstanceColors=!0;var r=e.appearance;i(r)||(r=new I),this.appearance=r,this.show=t(e.show,!0),this.classificationType=t(e.classificationType,P.BOTH),this.debugShowBoundingVolume=t(e.debugShowBoundingVolume,!1),this._debugShowShadowVolume=t(e.debugShowShadowVolume,!1),this._primitiveOptions={geometryInstances:void 0,appearance:void 0,vertexCacheOptimize:!1,interleave:t(e.interleave,!1),releaseGeometryInstances:t(e.releaseGeometryInstances,!0),allowPicking:t(e.allowPicking,!0),asynchronous:t(e.asynchronous,!0),compressVertices:!1,_createShaderProgramFunction:void 0,_createCommandsFunction:void 0,_updateAndQueueCommandsFunction:void 0},this._zIndex=void 0,this._ready=!1,this._readyPromise=f.defer(),this._primitive=void 0,this._sp=void 0,this._sp2D=void 0,this._spMorph=void 0,this._renderState=G(!1),this._renderState3DTiles=G(!0),this._renderStateMorph=S.fromCache({cull:{enabled:!0,face:w.FRONT},depthTest:{enabled:!0},blending:C.ALPHA_BLEND,depthMask:!1})}function G(e){return S.fromCache({cull:{enabled:!0},blending:C.ALPHA_BLEND,depthMask:!1,stencilTest:{enabled:e,frontFunction:A.EQUAL,frontOperation:{fail:M.KEEP,zFail:M.KEEP,zPass:M.KEEP},backFunction:A.EQUAL,backOperation:{fail:M.KEEP,zFail:M.KEEP,zPass:M.KEEP},reference:D.PGEARTH_3D_TILE_MASK,mask:D.PGEARTH_3D_TILE_MASK}})}function V(e,r,t,i,o,n,a){t.mode===E.MORPHING?r=r.derivedCommands.colorMorph:t.mode!==E.SCENE3D&&(r=r.derivedCommands.color2D),r.modelMatrix=i,r.boundingVolume=n,r.cull=o,r.debugShowBoundingVolume=a,t.commandList.push(r)}return o(O.prototype,{interleave:{get:function(){return this._primitiveOptions.interleave}},releaseGeometryInstances:{get:function(){return this._primitiveOptions.releaseGeometryInstances}},allowPicking:{get:function(){return this._primitiveOptions.allowPicking}},asynchronous:{get:function(){return this._primitiveOptions.asynchronous}},ready:{get:function(){return this._ready}},readyPromise:{get:function(){return this._readyPromise.promise}},debugShowShadowVolume:{get:function(){return this._debugShowShadowVolume}}}),O.initializeTerrainHeights=function(){return e.initialize()},O.prototype.update=function(t){if(i(this._primitive)||i(this.geometryInstances))if(e.initialized){var o,n=this,S=this._primitiveOptions;if(!i(this._primitive)){var f,C=c(this.geometryInstances)?this.geometryInstances:[this.geometryInstances],w=C.length,I=new Array(w);for(o=0;o<w;++o)if(f=C[o].attributes,!i(f)||!i(f.color)){this._hasPerInstanceColors=!1;break}for(o=0;o<w;++o){var D=C[o];f={};var A=D.attributes;for(var M in A)A.hasOwnProperty(M)&&(f[M]=A[M]);i(f.width)||(f.width=new d({componentDatatype:r.UNSIGNED_BYTE,componentsPerAttribute:1,value:[D.geometry.width]})),D.geometry._scene3DOnly=t.scene3DOnly,h.setProjectionAndEllipsoid(D.geometry,t.mapProjection),I[o]=new s({geometry:D.geometry,attributes:f,id:D.id,pickPrimitive:n})}S.geometryInstances=I,S.appearance=this.appearance,S._createShaderProgramFunction=function(r,t,o){!function(r,t,o){var n=t.context,a=r._primitive,s=a._attributeLocations,d=a._batchTable.getVertexShaderCallback()(l);d=T._appendShowToShader(a,d),d=T._appendDistanceDisplayConditionToShader(a,d),d=T._modifyShaderPosition(r,d,t.scene3DOnly);var h=a._batchTable.getVertexShaderCallback()(m);h=T._appendShowToShader(a,h),h=T._appendDistanceDisplayConditionToShader(a,h),h=T._modifyShaderPosition(r,h,t.scene3DOnly);var c=a._batchTable.getVertexShaderCallback()(p),_=["ENABLE_GL_POSITION_LOG_DEPTH_AT_HEIGHT","GLOBE_MINIMUM_ALTITUDE "+t.mapProjection.ellipsoid.minimumRadius.toFixed(1)],v="",S="";i(o.material)?(-1!==(S=i(o.material)?o.material.shaderSource:"").search(/varying\s+float\s+v_polylineAngle;/g)&&_.push("ANGLE_VARYING"),-1!==S.search(/varying\s+float\s+v_width;/g)&&_.push("WIDTH_VARYING")):v="PER_INSTANCE_COLOR",_.push(v);var f=r.debugShowShadowVolume?["DEBUG_SHOW_VOLUME",v]:[v],C=new y({defines:_,sources:[d]}),P=new y({defines:f,sources:[S,c]});r._sp=g.replaceCache({context:n,shaderProgram:a._sp,vertexShaderSource:C,fragmentShaderSource:P,attributeLocations:s});var w=n.shaderCache.getDerivedShaderProgram(r._sp,"2dColor");if(!i(w)){var b=new y({defines:_.concat(["COLUMBUS_VIEW_2D"]),sources:[d]});w=n.shaderCache.createDerivedShaderProgram(r._sp,"2dColor",{context:n,shaderProgram:r._sp2D,vertexShaderSource:b,fragmentShaderSource:P,attributeLocations:s})}r._sp2D=w;var I=n.shaderCache.getDerivedShaderProgram(r._sp,"MorphColor");if(!i(I)){var E=new y({defines:_.concat(["MAX_TERRAIN_HEIGHT "+e._defaultMaxTerrainHeight.toFixed(1)]),sources:[h]});c=a._batchTable.getVertexShaderCallback()(u);var D=new y({defines:f,sources:[S,c]});I=n.shaderCache.createDerivedShaderProgram(r._sp,"MorphColor",{context:n,shaderProgram:r._spMorph,vertexShaderSource:E,fragmentShaderSource:D,attributeLocations:s})}r._spMorph=I}(n,t,o)},S._createCommandsFunction=function(e,r,t,o,a,s,d){!function(e,r,t,o,n,a){var s=e._primitive,d=s._va.length;n.length=d,a.length=d;for(var h=r instanceof b?{}:t._uniforms,c=s._batchTable.getUniformMapCallback()(h),l=0;l<d;l++){var p=s._va[l],m=n[l];i(m)||(m=n[l]=new _({owner:e,primitiveType:s._primitiveType})),m.vertexArray=p,m.renderState=e._renderState,m.shaderProgram=e._sp,m.uniformMap=c,m.pass=v.TERRAIN_CLASSIFICATION,m.pickId="czm_batchTable_pickColor(v_endPlaneNormalEcAndBatchId.w)";var u=_.shallowClone(m,m.derivedCommands.tileset);u.renderState=e._renderState3DTiles,u.pass=v.PGEARTH_3D_TILE_CLASSIFICATION,m.derivedCommands.tileset=u;var S=_.shallowClone(m,m.derivedCommands.color2D);S.shaderProgram=e._sp2D,m.derivedCommands.color2D=S;var g=_.shallowClone(u,u.derivedCommands.color2D);g.shaderProgram=e._sp2D,u.derivedCommands.color2D=g;var y=_.shallowClone(m,m.derivedCommands.colorMorph);y.renderState=e._renderStateMorph,y.shaderProgram=e._spMorph,y.pickId="czm_batchTable_pickColor(v_batchId)",m.derivedCommands.colorMorph=y}}(n,r,t,0,s,d)},S._updateAndQueueCommandsFunction=function(e,r,t,o,a,s,d,h){!function(e,r,t,o,n,a,s){var d,h=e._primitive;T._updateBoundingVolumes(h,r,n),r.mode===E.SCENE3D?d=h._boundingSphereWC:r.mode===E.COLUMBUS_VIEW?d=h._boundingSphereCV:r.mode===E.SCENE2D&&i(h._boundingSphere2D)?d=h._boundingSphere2D:i(h._boundingSphereMorph)&&(d=h._boundingSphereMorph);var c=r.mode===E.MORPHING,l=e.classificationType,p=l!==P.PGEARTH_3D_TILE,m=l!==P.TERRAIN&&!c,u=r.passes;if(u.render||u.pick&&h.allowPicking)for(var _=t.length,v=0;v<_;++v){var S=d[v];p&&V(0,t[v],r,n,a,S,s),m&&V(0,t[v].derivedCommands.tileset,r,n,a,S,s)}}(n,r,t,0,a,s,d)},this._primitive=new T(S),this._primitive.readyPromise.then(function(e){n._ready=!0,n.releaseGeometryInstances&&(n.geometryInstances=void 0);var r=e._error;i(r)?n._readyPromise.reject(r):n._readyPromise.resolve(n)})}if(this.appearance instanceof b&&!this._hasPerInstanceColors)throw new a("All GeometryInstances must have color attributes to use PolylineColorAppearance with GroundPolylinePrimitive.");this._primitive.appearance=this.appearance,this._primitive.show=this.show,this._primitive.debugShowBoundingVolume=this.debugShowBoundingVolume,this._primitive.update(t)}else{if(!this.asynchronous)throw new a("For synchronous GroundPolylinePrimitives, you must call GroundPolylinePrimitives.initializeTerrainHeights() and wait for the returned promise to resolve.");O.initializeTerrainHeights()}},O.prototype.getGeometryInstanceAttributes=function(e){if(!i(this._primitive))throw new a("must call update before calling getGeometryInstanceAttributes");return this._primitive.getGeometryInstanceAttributes(e)},O.isSupported=function(e){return e.frameState.context.depthTexture},O.prototype.isDestroyed=function(){return!1},O.prototype.destroy=function(){return this._primitive=this._primitive&&this._primitive.destroy(),this._sp=this._sp&&this._sp.destroy(),this._sp2D=void 0,this._spMorph=void 0,n(this)},O});